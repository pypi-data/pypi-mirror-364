env:
  action_frequency: 30                  # (int): environment executes action at the action_frequency rate
  physics_frequency: 120                # (int): physics frequency (1 / physics_timestep for physx)
  device: null                          # (None or str): specifies the device to be used if running on the gpu with torch backend
  automatic_reset: false                # (bool): whether to automatic reset after an episode finishes
  flatten_action_space: false           # (bool): whether to flatten the action space as a sinle 1D-array
  flatten_obs_space: false              # (bool): whether the observation space should be flattened when generated
  use_external_obs: false               # (bool): Whether to use external observations or not
  initial_pos_z_offset: 0.1
  external_sensors: null                # (None or list): If specified, list of sensor configurations for external sensors to add. Should specify sensor "type" and any additional kwargs to instantiate the sensor. Each entry should be the kwargs passed to @create_sensor, in addition to position, orientation

render:
  viewer_width: 1280
  viewer_height: 720

scene:
  type: InteractiveTraversableScene
  scene_model: Rs_int
  trav_map_resolution: 0.1
  default_erosion_radius: 0.0
  trav_map_with_objects: true
  num_waypoints: 1
  waypoint_resolution: 0.2
  load_object_categories: null
  not_load_object_categories: null
  load_room_types: null
  load_room_instances: null
  load_task_relevant_only: false
  seg_map_resolution: 0.1
  scene_source: OG
  include_robots: false

robots:
  - type: Tiago
    obs_modalities: [rgb, depth, seg_semantic, normal, seg_instance, seg_instance_id]
    scale: 1.0
    self_collisions: true
    action_normalize: false
    action_type: continuous
    grasping_mode: sticky
    rigid_trunk: false
    default_trunk_offset: 0.15
    default_arm_pose: vertical
    sensor_config:
      VisionSensor:
        sensor_kwargs:
          image_height: 128
          image_width: 128
    controller_config:
      base:
        name: JointController
      arm_left:
        name: JointController
        motor_type: position
        command_input_limits: null
        command_output_limits: null
        use_delta_commands: false
      arm_right:
        name: JointController
        motor_type: position
        command_input_limits: null
        command_output_limits: null
        use_delta_commands: false
      gripper_left:
        name: JointController
        motor_type: position
        command_input_limits: [-1, 1]
        command_output_limits: null
        use_delta_commands: false
      gripper_right:
        name: JointController
        motor_type: position
        command_input_limits: [-1, 1]
        command_output_limits: null
        use_delta_commands: false
      camera:
        name: JointController

objects: []

task:
  type: DummyTask