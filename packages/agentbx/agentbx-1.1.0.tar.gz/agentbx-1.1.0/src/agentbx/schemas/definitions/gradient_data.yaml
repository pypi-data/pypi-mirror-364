# src/agentbx/schemas/definitions/gradient_data.yaml
# Pure gradient information - derivatives via chain rule

task_type: gradient_data
description: "Gradients of target function w.r.t. atomic parameters via chain rule"

required_assets:
  - coordinate_gradients

optional_assets:
  - bfactor_gradients
  - occupancy_gradients
  - structure_factor_gradients
  - gradient_metadata

asset_definitions:
  coordinate_gradients:
    description: "Gradients w.r.t. atomic coordinates: dT/d(xyz)"
    data_type: "cctbx.array_family.flex.vec3_double"
    shape: "[n_atoms, 3]"
    units: "target_units/angstrom"
    checksum_required: true

  bfactor_gradients:
    description: "Gradients w.r.t. B-factors: dT/d(B)"
    data_type: "cctbx.array_family.flex.double"
    shape: "[n_atoms]"
    units: "target_units/angstrom^2"

  occupancy_gradients:
    description: "Gradients w.r.t. occupancies: dT/d(occ)"
    data_type: "cctbx.array_family.flex.double"
    shape: "[n_atoms]"
    units: "target_units"

  structure_factor_gradients:
    description: "Intermediate: gradients w.r.t. structure factors dT/dF"
    data_type: "cctbx.miller.array"
    must_be_complex: true
    used_for_chain_rule: true

  gradient_metadata:
    description: "Gradient computation information"
    data_type: "dict"
    expected_keys: ["gradient_norm", "max_gradient", "computation_method"]

validation_rules:
  coordinate_gradients:
    - shape_matches_atoms: true
    - finite_gradients: true
    - reasonable_magnitude: true

  bfactor_gradients:
    - finite_gradients: true
    - length_matches_atoms: true

  occupancy_gradients:
    - finite_gradients: true
    - length_matches_atoms: true

  gradient_norms:
    - coordinate_gradient_norm_reasonable: true
    - no_infinite_gradients: true

workflow_patterns:
  chain_rule_computation:
    - requires: [xray_atomic_model_data, target_data]
    - method: "chain_rule"
    - produces: [coordinate_gradients, bfactor_gradients]

  finite_difference_verification:
    - requires: [xray_atomic_model_data, target_data]
    - method: "finite_difference"
    - produces: [coordinate_gradients]
    - use_case: "verification"

  full_parameter_gradients:
    - produces: [coordinate_gradients, bfactor_gradients, occupancy_gradients]
    - enables: ["refinement", "optimization"]

dependencies:
  - xray_atomic_model_data # parameter definitions
  - target_data # dT/dF gradients
  - structure_factor_data # dF/d(params) gradients

produces_for:
  - optimization_data # Gradients for parameter updates
  - convergence_data # Gradient norms for convergence
