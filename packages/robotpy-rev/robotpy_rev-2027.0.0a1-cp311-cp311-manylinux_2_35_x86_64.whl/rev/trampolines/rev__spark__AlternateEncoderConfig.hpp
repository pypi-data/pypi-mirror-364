// This file is autogenerated. DO NOT EDIT

#pragma once
#include <semiwrap.h>

// wrapped header

#include <rev/config/AlternateEncoderConfig.h>

#include <trampolines/rev__BaseConfig.hpp>

namespace rev::spark {

template <typename CfgBase = swgen::EmptyTrampolineCfg>
struct PyTrampolineCfg_AlternateEncoderConfig :
  rev::PyTrampolineCfg_BaseConfig<
  CfgBase
  >
{
  using Base = rev::spark::AlternateEncoderConfig;
};

template <typename PyTrampolineBase, typename PyTrampolineCfg>
using PyTrampolineBase_AlternateEncoderConfig =
  rev::PyTrampoline_BaseConfig<
    PyTrampolineBase
    , PyTrampolineCfg>
;

template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_AlternateEncoderConfig : PyTrampolineBase_AlternateEncoderConfig<PyTrampolineBase, PyTrampolineCfg> {
  using PyTrampolineBase_AlternateEncoderConfig<PyTrampolineBase, PyTrampolineCfg>::PyTrampolineBase_AlternateEncoderConfig;
  using Type [[maybe_unused]] = typename rev::spark::AlternateEncoderConfig::Type;
};

}; // namespace rev::spark
