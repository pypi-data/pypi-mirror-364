// This file is autogenerated. DO NOT EDIT

#pragma once
#include <semiwrap.h>

// wrapped header

#include <rev/config/ServoHubConfig.h>

#include <trampolines/rev__BaseConfig.hpp>

namespace rev::servohub {

template <typename CfgBase = swgen::EmptyTrampolineCfg>
struct PyTrampolineCfg_ServoHubConfig :
  rev::PyTrampolineCfg_BaseConfig<
  CfgBase
  >
{
  using Base = rev::servohub::ServoHubConfig;
  using override_base_Flatten_v = rev::servohub::ServoHubConfig;
};

template <typename PyTrampolineBase, typename PyTrampolineCfg>
using PyTrampolineBase_ServoHubConfig =
  rev::PyTrampoline_BaseConfig<
    PyTrampolineBase
    , PyTrampolineCfg>
;

template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_ServoHubConfig : PyTrampolineBase_ServoHubConfig<PyTrampolineBase, PyTrampolineCfg> {
  using PyTrampolineBase_ServoHubConfig<PyTrampolineBase, PyTrampolineCfg>::PyTrampolineBase_ServoHubConfig;

  #ifndef SWGEN_DISABLE_Flatten_v
    std::string Flatten() override {
      using LookupBase = typename PyTrampolineCfg::Base;
      using CxxCallBase = typename PyTrampolineCfg::override_base_Flatten_v;
      PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(std::string), LookupBase,
        "flatten", );
      return CxxCallBase::Flatten();
    }
  #endif
};

}; // namespace rev::servohub
