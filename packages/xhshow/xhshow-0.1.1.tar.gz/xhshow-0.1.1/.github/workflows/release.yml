name: Release

on:
  push:
    tags:
      # Publish on any tag starting with a `v`, e.g. v1.2.3
      - v*

jobs:
  github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: |
            ## 更新内容
            
            ## 安装
            
            ```bash
            pip install xhshow==${{ github.ref_name }}
            ```
            
            ## 使用方法
            
            ```python
            from xhshow import Xhshow
            
            client = Xhshow()
            
            # GET请求签名
            signature = client.sign_xs_get(
                uri="/api/sns/web/v1/user_posted",
                a1_value="your_a1_cookie_value",
                params={"num": "30", "cursor": "", "user_id": "123"}
            )
            
            # POST请求签名  
            signature = client.sign_xs_post(
                uri="/api/sns/web/v1/login",
                a1_value="your_a1_cookie_value", 
                payload={"username": "test", "password": "123456"}
            )
            ```

  pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: github-release
    # Environment and permissions trusted publishing.
    environment:
      # Create this environment in the GitHub repository under Settings -> Environments
      name: release
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v4
      
      - name: Build package
        run: uv build
      
      # Check that basic features work and we didn't miss to include crucial files
      - name: Smoke test (wheel)
        run: |
          WHEEL_FILE=$(find dist -name "*.whl" -type f)
          uv run --isolated --no-project -p 3.12 --with "$WHEEL_FILE" -- python -c "from xhshow import Xhshow, CryptoProcessor; client = Xhshow(); print('Wheel package works'); print('Xhshow module:', client.__class__.__module__)"
      
      - name: Smoke test (source distribution)
        run: |
          TARBALL_FILE=$(find dist -name "*.tar.gz" -type f)
          uv run --isolated --no-project -p 3.12 --with "$TARBALL_FILE" -- python -c "from xhshow import Xhshow, CryptoProcessor; client = Xhshow(); print('Source distribution works'); print('Xhshow module:', client.__class__.__module__)"
      
      - name: Check if version exists on PyPI
        run: |
          VERSION=$(echo ${{ github.ref_name }} | sed 's/^v//')
          if pip index versions xhshow | grep -q "$VERSION"; then
            echo "Version $VERSION already exists on PyPI, skipping upload"
            echo "SKIP_PYPI=true" >> $GITHUB_ENV
          else
            echo "Version $VERSION not found on PyPI, proceeding with upload"
            echo "SKIP_PYPI=false" >> $GITHUB_ENV
          fi
      
      - name: Publish to PyPI
        if: env.SKIP_PYPI == 'false'
        run: uv publish --trusted-publishing always