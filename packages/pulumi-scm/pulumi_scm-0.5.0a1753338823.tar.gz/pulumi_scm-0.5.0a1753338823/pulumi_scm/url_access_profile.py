# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['UrlAccessProfileArgs', 'UrlAccessProfile']

@pulumi.input_type
class UrlAccessProfileArgs:
    def __init__(__self__, *,
                 alerts: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 allows: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 blocks: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 cloud_inline_cat: Optional[pulumi.Input[builtins.bool]] = None,
                 continues: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 credential_enforcement: Optional[pulumi.Input['UrlAccessProfileCredentialEnforcementArgs']] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 device: Optional[pulumi.Input[builtins.str]] = None,
                 folder: Optional[pulumi.Input[builtins.str]] = None,
                 local_inline_cat: Optional[pulumi.Input[builtins.bool]] = None,
                 log_container_page_only: Optional[pulumi.Input[builtins.bool]] = None,
                 log_http_hdr_referer: Optional[pulumi.Input[builtins.bool]] = None,
                 log_http_hdr_user_agent: Optional[pulumi.Input[builtins.bool]] = None,
                 log_http_hdr_xff: Optional[pulumi.Input[builtins.bool]] = None,
                 mlav_category_exceptions: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 safe_search_enforcement: Optional[pulumi.Input[builtins.bool]] = None,
                 snippet: Optional[pulumi.Input[builtins.str]] = None):
        """
        The set of arguments for constructing a UrlAccessProfile resource.
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] alerts: The Alerts param.
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] allows: The Allows param.
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] blocks: The Blocks param.
        :param pulumi.Input[builtins.bool] cloud_inline_cat: The CloudInlineCat param.
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] continues: The Continues param.
        :param pulumi.Input['UrlAccessProfileCredentialEnforcementArgs'] credential_enforcement: The CredentialEnforcement param.
        :param pulumi.Input[builtins.str] description: The Description param. String length must not exceed 255 characters.
        :param pulumi.Input[builtins.str] device: The Device param.
        :param pulumi.Input[builtins.str] folder: The Folder param.
        :param pulumi.Input[builtins.bool] local_inline_cat: The LocalInlineCat param.
        :param pulumi.Input[builtins.bool] log_container_page_only: The LogContainerPageOnly param. Default: `true`.
        :param pulumi.Input[builtins.bool] log_http_hdr_referer: The LogHttpHdrReferer param. Default: `false`.
        :param pulumi.Input[builtins.bool] log_http_hdr_user_agent: The LogHttpHdrUserAgent param. Default: `false`.
        :param pulumi.Input[builtins.bool] log_http_hdr_xff: The LogHttpHdrXff param. Default: `false`.
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] mlav_category_exceptions: The MlavCategoryExceptions param.
        :param pulumi.Input[builtins.str] name: The Name param.
        :param pulumi.Input[builtins.bool] safe_search_enforcement: The SafeSearchEnforcement param. Default: `false`.
        :param pulumi.Input[builtins.str] snippet: The Snippet param.
        """
        if alerts is not None:
            pulumi.set(__self__, "alerts", alerts)
        if allows is not None:
            pulumi.set(__self__, "allows", allows)
        if blocks is not None:
            pulumi.set(__self__, "blocks", blocks)
        if cloud_inline_cat is not None:
            pulumi.set(__self__, "cloud_inline_cat", cloud_inline_cat)
        if continues is not None:
            pulumi.set(__self__, "continues", continues)
        if credential_enforcement is not None:
            pulumi.set(__self__, "credential_enforcement", credential_enforcement)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if device is not None:
            pulumi.set(__self__, "device", device)
        if folder is not None:
            pulumi.set(__self__, "folder", folder)
        if local_inline_cat is not None:
            pulumi.set(__self__, "local_inline_cat", local_inline_cat)
        if log_container_page_only is not None:
            pulumi.set(__self__, "log_container_page_only", log_container_page_only)
        if log_http_hdr_referer is not None:
            pulumi.set(__self__, "log_http_hdr_referer", log_http_hdr_referer)
        if log_http_hdr_user_agent is not None:
            pulumi.set(__self__, "log_http_hdr_user_agent", log_http_hdr_user_agent)
        if log_http_hdr_xff is not None:
            pulumi.set(__self__, "log_http_hdr_xff", log_http_hdr_xff)
        if mlav_category_exceptions is not None:
            pulumi.set(__self__, "mlav_category_exceptions", mlav_category_exceptions)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if safe_search_enforcement is not None:
            pulumi.set(__self__, "safe_search_enforcement", safe_search_enforcement)
        if snippet is not None:
            pulumi.set(__self__, "snippet", snippet)

    @property
    @pulumi.getter
    def alerts(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]:
        """
        The Alerts param.
        """
        return pulumi.get(self, "alerts")

    @alerts.setter
    def alerts(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "alerts", value)

    @property
    @pulumi.getter
    def allows(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]:
        """
        The Allows param.
        """
        return pulumi.get(self, "allows")

    @allows.setter
    def allows(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "allows", value)

    @property
    @pulumi.getter
    def blocks(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]:
        """
        The Blocks param.
        """
        return pulumi.get(self, "blocks")

    @blocks.setter
    def blocks(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "blocks", value)

    @property
    @pulumi.getter(name="cloudInlineCat")
    def cloud_inline_cat(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        The CloudInlineCat param.
        """
        return pulumi.get(self, "cloud_inline_cat")

    @cloud_inline_cat.setter
    def cloud_inline_cat(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "cloud_inline_cat", value)

    @property
    @pulumi.getter
    def continues(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]:
        """
        The Continues param.
        """
        return pulumi.get(self, "continues")

    @continues.setter
    def continues(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "continues", value)

    @property
    @pulumi.getter(name="credentialEnforcement")
    def credential_enforcement(self) -> Optional[pulumi.Input['UrlAccessProfileCredentialEnforcementArgs']]:
        """
        The CredentialEnforcement param.
        """
        return pulumi.get(self, "credential_enforcement")

    @credential_enforcement.setter
    def credential_enforcement(self, value: Optional[pulumi.Input['UrlAccessProfileCredentialEnforcementArgs']]):
        pulumi.set(self, "credential_enforcement", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The Description param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def device(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The Device param.
        """
        return pulumi.get(self, "device")

    @device.setter
    def device(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "device", value)

    @property
    @pulumi.getter
    def folder(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The Folder param.
        """
        return pulumi.get(self, "folder")

    @folder.setter
    def folder(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "folder", value)

    @property
    @pulumi.getter(name="localInlineCat")
    def local_inline_cat(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        The LocalInlineCat param.
        """
        return pulumi.get(self, "local_inline_cat")

    @local_inline_cat.setter
    def local_inline_cat(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "local_inline_cat", value)

    @property
    @pulumi.getter(name="logContainerPageOnly")
    def log_container_page_only(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        The LogContainerPageOnly param. Default: `true`.
        """
        return pulumi.get(self, "log_container_page_only")

    @log_container_page_only.setter
    def log_container_page_only(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "log_container_page_only", value)

    @property
    @pulumi.getter(name="logHttpHdrReferer")
    def log_http_hdr_referer(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        The LogHttpHdrReferer param. Default: `false`.
        """
        return pulumi.get(self, "log_http_hdr_referer")

    @log_http_hdr_referer.setter
    def log_http_hdr_referer(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "log_http_hdr_referer", value)

    @property
    @pulumi.getter(name="logHttpHdrUserAgent")
    def log_http_hdr_user_agent(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        The LogHttpHdrUserAgent param. Default: `false`.
        """
        return pulumi.get(self, "log_http_hdr_user_agent")

    @log_http_hdr_user_agent.setter
    def log_http_hdr_user_agent(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "log_http_hdr_user_agent", value)

    @property
    @pulumi.getter(name="logHttpHdrXff")
    def log_http_hdr_xff(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        The LogHttpHdrXff param. Default: `false`.
        """
        return pulumi.get(self, "log_http_hdr_xff")

    @log_http_hdr_xff.setter
    def log_http_hdr_xff(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "log_http_hdr_xff", value)

    @property
    @pulumi.getter(name="mlavCategoryExceptions")
    def mlav_category_exceptions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]:
        """
        The MlavCategoryExceptions param.
        """
        return pulumi.get(self, "mlav_category_exceptions")

    @mlav_category_exceptions.setter
    def mlav_category_exceptions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "mlav_category_exceptions", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="safeSearchEnforcement")
    def safe_search_enforcement(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        The SafeSearchEnforcement param. Default: `false`.
        """
        return pulumi.get(self, "safe_search_enforcement")

    @safe_search_enforcement.setter
    def safe_search_enforcement(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "safe_search_enforcement", value)

    @property
    @pulumi.getter
    def snippet(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The Snippet param.
        """
        return pulumi.get(self, "snippet")

    @snippet.setter
    def snippet(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "snippet", value)


@pulumi.input_type
class _UrlAccessProfileState:
    def __init__(__self__, *,
                 alerts: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 allows: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 blocks: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 cloud_inline_cat: Optional[pulumi.Input[builtins.bool]] = None,
                 continues: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 credential_enforcement: Optional[pulumi.Input['UrlAccessProfileCredentialEnforcementArgs']] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 device: Optional[pulumi.Input[builtins.str]] = None,
                 folder: Optional[pulumi.Input[builtins.str]] = None,
                 local_inline_cat: Optional[pulumi.Input[builtins.bool]] = None,
                 log_container_page_only: Optional[pulumi.Input[builtins.bool]] = None,
                 log_http_hdr_referer: Optional[pulumi.Input[builtins.bool]] = None,
                 log_http_hdr_user_agent: Optional[pulumi.Input[builtins.bool]] = None,
                 log_http_hdr_xff: Optional[pulumi.Input[builtins.bool]] = None,
                 mlav_category_exceptions: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 safe_search_enforcement: Optional[pulumi.Input[builtins.bool]] = None,
                 snippet: Optional[pulumi.Input[builtins.str]] = None,
                 tfid: Optional[pulumi.Input[builtins.str]] = None):
        """
        Input properties used for looking up and filtering UrlAccessProfile resources.
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] alerts: The Alerts param.
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] allows: The Allows param.
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] blocks: The Blocks param.
        :param pulumi.Input[builtins.bool] cloud_inline_cat: The CloudInlineCat param.
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] continues: The Continues param.
        :param pulumi.Input['UrlAccessProfileCredentialEnforcementArgs'] credential_enforcement: The CredentialEnforcement param.
        :param pulumi.Input[builtins.str] description: The Description param. String length must not exceed 255 characters.
        :param pulumi.Input[builtins.str] device: The Device param.
        :param pulumi.Input[builtins.str] folder: The Folder param.
        :param pulumi.Input[builtins.bool] local_inline_cat: The LocalInlineCat param.
        :param pulumi.Input[builtins.bool] log_container_page_only: The LogContainerPageOnly param. Default: `true`.
        :param pulumi.Input[builtins.bool] log_http_hdr_referer: The LogHttpHdrReferer param. Default: `false`.
        :param pulumi.Input[builtins.bool] log_http_hdr_user_agent: The LogHttpHdrUserAgent param. Default: `false`.
        :param pulumi.Input[builtins.bool] log_http_hdr_xff: The LogHttpHdrXff param. Default: `false`.
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] mlav_category_exceptions: The MlavCategoryExceptions param.
        :param pulumi.Input[builtins.str] name: The Name param.
        :param pulumi.Input[builtins.bool] safe_search_enforcement: The SafeSearchEnforcement param. Default: `false`.
        :param pulumi.Input[builtins.str] snippet: The Snippet param.
        """
        if alerts is not None:
            pulumi.set(__self__, "alerts", alerts)
        if allows is not None:
            pulumi.set(__self__, "allows", allows)
        if blocks is not None:
            pulumi.set(__self__, "blocks", blocks)
        if cloud_inline_cat is not None:
            pulumi.set(__self__, "cloud_inline_cat", cloud_inline_cat)
        if continues is not None:
            pulumi.set(__self__, "continues", continues)
        if credential_enforcement is not None:
            pulumi.set(__self__, "credential_enforcement", credential_enforcement)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if device is not None:
            pulumi.set(__self__, "device", device)
        if folder is not None:
            pulumi.set(__self__, "folder", folder)
        if local_inline_cat is not None:
            pulumi.set(__self__, "local_inline_cat", local_inline_cat)
        if log_container_page_only is not None:
            pulumi.set(__self__, "log_container_page_only", log_container_page_only)
        if log_http_hdr_referer is not None:
            pulumi.set(__self__, "log_http_hdr_referer", log_http_hdr_referer)
        if log_http_hdr_user_agent is not None:
            pulumi.set(__self__, "log_http_hdr_user_agent", log_http_hdr_user_agent)
        if log_http_hdr_xff is not None:
            pulumi.set(__self__, "log_http_hdr_xff", log_http_hdr_xff)
        if mlav_category_exceptions is not None:
            pulumi.set(__self__, "mlav_category_exceptions", mlav_category_exceptions)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if safe_search_enforcement is not None:
            pulumi.set(__self__, "safe_search_enforcement", safe_search_enforcement)
        if snippet is not None:
            pulumi.set(__self__, "snippet", snippet)
        if tfid is not None:
            pulumi.set(__self__, "tfid", tfid)

    @property
    @pulumi.getter
    def alerts(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]:
        """
        The Alerts param.
        """
        return pulumi.get(self, "alerts")

    @alerts.setter
    def alerts(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "alerts", value)

    @property
    @pulumi.getter
    def allows(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]:
        """
        The Allows param.
        """
        return pulumi.get(self, "allows")

    @allows.setter
    def allows(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "allows", value)

    @property
    @pulumi.getter
    def blocks(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]:
        """
        The Blocks param.
        """
        return pulumi.get(self, "blocks")

    @blocks.setter
    def blocks(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "blocks", value)

    @property
    @pulumi.getter(name="cloudInlineCat")
    def cloud_inline_cat(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        The CloudInlineCat param.
        """
        return pulumi.get(self, "cloud_inline_cat")

    @cloud_inline_cat.setter
    def cloud_inline_cat(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "cloud_inline_cat", value)

    @property
    @pulumi.getter
    def continues(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]:
        """
        The Continues param.
        """
        return pulumi.get(self, "continues")

    @continues.setter
    def continues(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "continues", value)

    @property
    @pulumi.getter(name="credentialEnforcement")
    def credential_enforcement(self) -> Optional[pulumi.Input['UrlAccessProfileCredentialEnforcementArgs']]:
        """
        The CredentialEnforcement param.
        """
        return pulumi.get(self, "credential_enforcement")

    @credential_enforcement.setter
    def credential_enforcement(self, value: Optional[pulumi.Input['UrlAccessProfileCredentialEnforcementArgs']]):
        pulumi.set(self, "credential_enforcement", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The Description param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def device(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The Device param.
        """
        return pulumi.get(self, "device")

    @device.setter
    def device(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "device", value)

    @property
    @pulumi.getter
    def folder(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The Folder param.
        """
        return pulumi.get(self, "folder")

    @folder.setter
    def folder(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "folder", value)

    @property
    @pulumi.getter(name="localInlineCat")
    def local_inline_cat(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        The LocalInlineCat param.
        """
        return pulumi.get(self, "local_inline_cat")

    @local_inline_cat.setter
    def local_inline_cat(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "local_inline_cat", value)

    @property
    @pulumi.getter(name="logContainerPageOnly")
    def log_container_page_only(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        The LogContainerPageOnly param. Default: `true`.
        """
        return pulumi.get(self, "log_container_page_only")

    @log_container_page_only.setter
    def log_container_page_only(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "log_container_page_only", value)

    @property
    @pulumi.getter(name="logHttpHdrReferer")
    def log_http_hdr_referer(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        The LogHttpHdrReferer param. Default: `false`.
        """
        return pulumi.get(self, "log_http_hdr_referer")

    @log_http_hdr_referer.setter
    def log_http_hdr_referer(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "log_http_hdr_referer", value)

    @property
    @pulumi.getter(name="logHttpHdrUserAgent")
    def log_http_hdr_user_agent(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        The LogHttpHdrUserAgent param. Default: `false`.
        """
        return pulumi.get(self, "log_http_hdr_user_agent")

    @log_http_hdr_user_agent.setter
    def log_http_hdr_user_agent(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "log_http_hdr_user_agent", value)

    @property
    @pulumi.getter(name="logHttpHdrXff")
    def log_http_hdr_xff(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        The LogHttpHdrXff param. Default: `false`.
        """
        return pulumi.get(self, "log_http_hdr_xff")

    @log_http_hdr_xff.setter
    def log_http_hdr_xff(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "log_http_hdr_xff", value)

    @property
    @pulumi.getter(name="mlavCategoryExceptions")
    def mlav_category_exceptions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]:
        """
        The MlavCategoryExceptions param.
        """
        return pulumi.get(self, "mlav_category_exceptions")

    @mlav_category_exceptions.setter
    def mlav_category_exceptions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "mlav_category_exceptions", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="safeSearchEnforcement")
    def safe_search_enforcement(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        The SafeSearchEnforcement param. Default: `false`.
        """
        return pulumi.get(self, "safe_search_enforcement")

    @safe_search_enforcement.setter
    def safe_search_enforcement(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "safe_search_enforcement", value)

    @property
    @pulumi.getter
    def snippet(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The Snippet param.
        """
        return pulumi.get(self, "snippet")

    @snippet.setter
    def snippet(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "snippet", value)

    @property
    @pulumi.getter
    def tfid(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "tfid")

    @tfid.setter
    def tfid(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tfid", value)


@pulumi.type_token("scm:index/urlAccessProfile:UrlAccessProfile")
class UrlAccessProfile(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 alerts: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 allows: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 blocks: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 cloud_inline_cat: Optional[pulumi.Input[builtins.bool]] = None,
                 continues: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 credential_enforcement: Optional[pulumi.Input[Union['UrlAccessProfileCredentialEnforcementArgs', 'UrlAccessProfileCredentialEnforcementArgsDict']]] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 device: Optional[pulumi.Input[builtins.str]] = None,
                 folder: Optional[pulumi.Input[builtins.str]] = None,
                 local_inline_cat: Optional[pulumi.Input[builtins.bool]] = None,
                 log_container_page_only: Optional[pulumi.Input[builtins.bool]] = None,
                 log_http_hdr_referer: Optional[pulumi.Input[builtins.bool]] = None,
                 log_http_hdr_user_agent: Optional[pulumi.Input[builtins.bool]] = None,
                 log_http_hdr_xff: Optional[pulumi.Input[builtins.bool]] = None,
                 mlav_category_exceptions: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 safe_search_enforcement: Optional[pulumi.Input[builtins.bool]] = None,
                 snippet: Optional[pulumi.Input[builtins.str]] = None,
                 __props__=None):
        """
        Retrieves a config item.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_scm as scm

        example = scm.UrlAccessProfile("example", folder="Shared")
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] alerts: The Alerts param.
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] allows: The Allows param.
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] blocks: The Blocks param.
        :param pulumi.Input[builtins.bool] cloud_inline_cat: The CloudInlineCat param.
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] continues: The Continues param.
        :param pulumi.Input[Union['UrlAccessProfileCredentialEnforcementArgs', 'UrlAccessProfileCredentialEnforcementArgsDict']] credential_enforcement: The CredentialEnforcement param.
        :param pulumi.Input[builtins.str] description: The Description param. String length must not exceed 255 characters.
        :param pulumi.Input[builtins.str] device: The Device param.
        :param pulumi.Input[builtins.str] folder: The Folder param.
        :param pulumi.Input[builtins.bool] local_inline_cat: The LocalInlineCat param.
        :param pulumi.Input[builtins.bool] log_container_page_only: The LogContainerPageOnly param. Default: `true`.
        :param pulumi.Input[builtins.bool] log_http_hdr_referer: The LogHttpHdrReferer param. Default: `false`.
        :param pulumi.Input[builtins.bool] log_http_hdr_user_agent: The LogHttpHdrUserAgent param. Default: `false`.
        :param pulumi.Input[builtins.bool] log_http_hdr_xff: The LogHttpHdrXff param. Default: `false`.
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] mlav_category_exceptions: The MlavCategoryExceptions param.
        :param pulumi.Input[builtins.str] name: The Name param.
        :param pulumi.Input[builtins.bool] safe_search_enforcement: The SafeSearchEnforcement param. Default: `false`.
        :param pulumi.Input[builtins.str] snippet: The Snippet param.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[UrlAccessProfileArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Retrieves a config item.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_scm as scm

        example = scm.UrlAccessProfile("example", folder="Shared")
        ```

        :param str resource_name: The name of the resource.
        :param UrlAccessProfileArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(UrlAccessProfileArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 alerts: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 allows: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 blocks: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 cloud_inline_cat: Optional[pulumi.Input[builtins.bool]] = None,
                 continues: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 credential_enforcement: Optional[pulumi.Input[Union['UrlAccessProfileCredentialEnforcementArgs', 'UrlAccessProfileCredentialEnforcementArgsDict']]] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 device: Optional[pulumi.Input[builtins.str]] = None,
                 folder: Optional[pulumi.Input[builtins.str]] = None,
                 local_inline_cat: Optional[pulumi.Input[builtins.bool]] = None,
                 log_container_page_only: Optional[pulumi.Input[builtins.bool]] = None,
                 log_http_hdr_referer: Optional[pulumi.Input[builtins.bool]] = None,
                 log_http_hdr_user_agent: Optional[pulumi.Input[builtins.bool]] = None,
                 log_http_hdr_xff: Optional[pulumi.Input[builtins.bool]] = None,
                 mlav_category_exceptions: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 safe_search_enforcement: Optional[pulumi.Input[builtins.bool]] = None,
                 snippet: Optional[pulumi.Input[builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = UrlAccessProfileArgs.__new__(UrlAccessProfileArgs)

            __props__.__dict__["alerts"] = alerts
            __props__.__dict__["allows"] = allows
            __props__.__dict__["blocks"] = blocks
            __props__.__dict__["cloud_inline_cat"] = cloud_inline_cat
            __props__.__dict__["continues"] = continues
            __props__.__dict__["credential_enforcement"] = credential_enforcement
            __props__.__dict__["description"] = description
            __props__.__dict__["device"] = device
            __props__.__dict__["folder"] = folder
            __props__.__dict__["local_inline_cat"] = local_inline_cat
            __props__.__dict__["log_container_page_only"] = log_container_page_only
            __props__.__dict__["log_http_hdr_referer"] = log_http_hdr_referer
            __props__.__dict__["log_http_hdr_user_agent"] = log_http_hdr_user_agent
            __props__.__dict__["log_http_hdr_xff"] = log_http_hdr_xff
            __props__.__dict__["mlav_category_exceptions"] = mlav_category_exceptions
            __props__.__dict__["name"] = name
            __props__.__dict__["safe_search_enforcement"] = safe_search_enforcement
            __props__.__dict__["snippet"] = snippet
            __props__.__dict__["tfid"] = None
        super(UrlAccessProfile, __self__).__init__(
            'scm:index/urlAccessProfile:UrlAccessProfile',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            alerts: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
            allows: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
            blocks: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
            cloud_inline_cat: Optional[pulumi.Input[builtins.bool]] = None,
            continues: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
            credential_enforcement: Optional[pulumi.Input[Union['UrlAccessProfileCredentialEnforcementArgs', 'UrlAccessProfileCredentialEnforcementArgsDict']]] = None,
            description: Optional[pulumi.Input[builtins.str]] = None,
            device: Optional[pulumi.Input[builtins.str]] = None,
            folder: Optional[pulumi.Input[builtins.str]] = None,
            local_inline_cat: Optional[pulumi.Input[builtins.bool]] = None,
            log_container_page_only: Optional[pulumi.Input[builtins.bool]] = None,
            log_http_hdr_referer: Optional[pulumi.Input[builtins.bool]] = None,
            log_http_hdr_user_agent: Optional[pulumi.Input[builtins.bool]] = None,
            log_http_hdr_xff: Optional[pulumi.Input[builtins.bool]] = None,
            mlav_category_exceptions: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
            name: Optional[pulumi.Input[builtins.str]] = None,
            safe_search_enforcement: Optional[pulumi.Input[builtins.bool]] = None,
            snippet: Optional[pulumi.Input[builtins.str]] = None,
            tfid: Optional[pulumi.Input[builtins.str]] = None) -> 'UrlAccessProfile':
        """
        Get an existing UrlAccessProfile resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] alerts: The Alerts param.
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] allows: The Allows param.
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] blocks: The Blocks param.
        :param pulumi.Input[builtins.bool] cloud_inline_cat: The CloudInlineCat param.
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] continues: The Continues param.
        :param pulumi.Input[Union['UrlAccessProfileCredentialEnforcementArgs', 'UrlAccessProfileCredentialEnforcementArgsDict']] credential_enforcement: The CredentialEnforcement param.
        :param pulumi.Input[builtins.str] description: The Description param. String length must not exceed 255 characters.
        :param pulumi.Input[builtins.str] device: The Device param.
        :param pulumi.Input[builtins.str] folder: The Folder param.
        :param pulumi.Input[builtins.bool] local_inline_cat: The LocalInlineCat param.
        :param pulumi.Input[builtins.bool] log_container_page_only: The LogContainerPageOnly param. Default: `true`.
        :param pulumi.Input[builtins.bool] log_http_hdr_referer: The LogHttpHdrReferer param. Default: `false`.
        :param pulumi.Input[builtins.bool] log_http_hdr_user_agent: The LogHttpHdrUserAgent param. Default: `false`.
        :param pulumi.Input[builtins.bool] log_http_hdr_xff: The LogHttpHdrXff param. Default: `false`.
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] mlav_category_exceptions: The MlavCategoryExceptions param.
        :param pulumi.Input[builtins.str] name: The Name param.
        :param pulumi.Input[builtins.bool] safe_search_enforcement: The SafeSearchEnforcement param. Default: `false`.
        :param pulumi.Input[builtins.str] snippet: The Snippet param.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _UrlAccessProfileState.__new__(_UrlAccessProfileState)

        __props__.__dict__["alerts"] = alerts
        __props__.__dict__["allows"] = allows
        __props__.__dict__["blocks"] = blocks
        __props__.__dict__["cloud_inline_cat"] = cloud_inline_cat
        __props__.__dict__["continues"] = continues
        __props__.__dict__["credential_enforcement"] = credential_enforcement
        __props__.__dict__["description"] = description
        __props__.__dict__["device"] = device
        __props__.__dict__["folder"] = folder
        __props__.__dict__["local_inline_cat"] = local_inline_cat
        __props__.__dict__["log_container_page_only"] = log_container_page_only
        __props__.__dict__["log_http_hdr_referer"] = log_http_hdr_referer
        __props__.__dict__["log_http_hdr_user_agent"] = log_http_hdr_user_agent
        __props__.__dict__["log_http_hdr_xff"] = log_http_hdr_xff
        __props__.__dict__["mlav_category_exceptions"] = mlav_category_exceptions
        __props__.__dict__["name"] = name
        __props__.__dict__["safe_search_enforcement"] = safe_search_enforcement
        __props__.__dict__["snippet"] = snippet
        __props__.__dict__["tfid"] = tfid
        return UrlAccessProfile(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def alerts(self) -> pulumi.Output[Optional[Sequence[builtins.str]]]:
        """
        The Alerts param.
        """
        return pulumi.get(self, "alerts")

    @property
    @pulumi.getter
    def allows(self) -> pulumi.Output[Optional[Sequence[builtins.str]]]:
        """
        The Allows param.
        """
        return pulumi.get(self, "allows")

    @property
    @pulumi.getter
    def blocks(self) -> pulumi.Output[Optional[Sequence[builtins.str]]]:
        """
        The Blocks param.
        """
        return pulumi.get(self, "blocks")

    @property
    @pulumi.getter(name="cloudInlineCat")
    def cloud_inline_cat(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        The CloudInlineCat param.
        """
        return pulumi.get(self, "cloud_inline_cat")

    @property
    @pulumi.getter
    def continues(self) -> pulumi.Output[Optional[Sequence[builtins.str]]]:
        """
        The Continues param.
        """
        return pulumi.get(self, "continues")

    @property
    @pulumi.getter(name="credentialEnforcement")
    def credential_enforcement(self) -> pulumi.Output[Optional['outputs.UrlAccessProfileCredentialEnforcement']]:
        """
        The CredentialEnforcement param.
        """
        return pulumi.get(self, "credential_enforcement")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        The Description param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def device(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        The Device param.
        """
        return pulumi.get(self, "device")

    @property
    @pulumi.getter
    def folder(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        The Folder param.
        """
        return pulumi.get(self, "folder")

    @property
    @pulumi.getter(name="localInlineCat")
    def local_inline_cat(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        The LocalInlineCat param.
        """
        return pulumi.get(self, "local_inline_cat")

    @property
    @pulumi.getter(name="logContainerPageOnly")
    def log_container_page_only(self) -> pulumi.Output[builtins.bool]:
        """
        The LogContainerPageOnly param. Default: `true`.
        """
        return pulumi.get(self, "log_container_page_only")

    @property
    @pulumi.getter(name="logHttpHdrReferer")
    def log_http_hdr_referer(self) -> pulumi.Output[builtins.bool]:
        """
        The LogHttpHdrReferer param. Default: `false`.
        """
        return pulumi.get(self, "log_http_hdr_referer")

    @property
    @pulumi.getter(name="logHttpHdrUserAgent")
    def log_http_hdr_user_agent(self) -> pulumi.Output[builtins.bool]:
        """
        The LogHttpHdrUserAgent param. Default: `false`.
        """
        return pulumi.get(self, "log_http_hdr_user_agent")

    @property
    @pulumi.getter(name="logHttpHdrXff")
    def log_http_hdr_xff(self) -> pulumi.Output[builtins.bool]:
        """
        The LogHttpHdrXff param. Default: `false`.
        """
        return pulumi.get(self, "log_http_hdr_xff")

    @property
    @pulumi.getter(name="mlavCategoryExceptions")
    def mlav_category_exceptions(self) -> pulumi.Output[Optional[Sequence[builtins.str]]]:
        """
        The MlavCategoryExceptions param.
        """
        return pulumi.get(self, "mlav_category_exceptions")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="safeSearchEnforcement")
    def safe_search_enforcement(self) -> pulumi.Output[builtins.bool]:
        """
        The SafeSearchEnforcement param. Default: `false`.
        """
        return pulumi.get(self, "safe_search_enforcement")

    @property
    @pulumi.getter
    def snippet(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        The Snippet param.
        """
        return pulumi.get(self, "snippet")

    @property
    @pulumi.getter
    def tfid(self) -> pulumi.Output[builtins.str]:
        return pulumi.get(self, "tfid")

