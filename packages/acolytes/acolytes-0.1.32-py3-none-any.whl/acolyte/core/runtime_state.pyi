from typing import Optional, Dict, Any

class RuntimeStateManager:
    def __init__(self) -> None: ...
    @property
    def db(self) -> Any: ...
    async def get(self, key: str) -> Optional[str]: ...
    async def set(self, key: str, value: str) -> bool: ...
    async def delete(self, key: str) -> bool: ...
    async def list_keys(self, prefix: Optional[str] = ...) -> list[str]: ...
    async def get_json(self, key: str) -> Optional[Dict[str, Any]]: ...
    async def set_json(self, key: str, value: Dict[str, Any]) -> bool: ...
    async def clear_prefix(self, prefix: str) -> int: ...

def get_runtime_state() -> RuntimeStateManager: ...
