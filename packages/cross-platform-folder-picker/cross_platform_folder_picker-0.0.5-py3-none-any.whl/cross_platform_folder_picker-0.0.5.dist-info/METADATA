Metadata-Version: 2.4
Name: cross_platform_folder_picker
Version: 0.0.5
Summary:  A (near zero dependency by default) cross platform folder picker
Project-URL: Homepage, https://github.com/baseplate-admin/Cross-Platform-Folder-Picker
Project-URL: Repository, https://github.com/baseplate-admin/Cross-Platform-Folder-Picker
Project-URL: Bug Tracker, https://github.com/baseplate-admin/Cross-Platform-Folder-Picker/issues
License: MIT
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Programming Language :: Python :: 3.14
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.10
Provides-Extra: gtk
Requires-Dist: pygobject; extra == 'gtk'
Provides-Extra: qt
Requires-Dist: pyside6; extra == 'qt'
Description-Content-Type: text/markdown

# Cross-Platform-Folder-Picker

> A (near zero dependency by default) cross platform folder picker

[![Downloads](https://static.pepy.tech/badge/cross-platform-folder-picker)](https://pepy.tech/project/cross-platform-folder-picker) [![Pypi Badge](https://img.shields.io/pypi/v/cross-platform-folder-picker.svg)](https://pypi.org/project/cross-platform-folder-picker/)

![Example GIF](https://raw.githubusercontent.com/baseplate-admin/Cross-Platform-Folder-Picker/refs/heads/master/assets/example.gif)

# Features

-   Opens a folder dialog using:
    -   Default:
        -   `tkinter` for windows (falls back to `ctypes`)
        -   `zenity`/`kdialog` for linux
        -   `osascript` for macOS
    -   Optionally:
        -   `qt`
        -   `gtk`
-   Customize the title and icon of the dialog

# Installation

```shell
pip install cross-platform-folder-picker
```

# Usage

```python
from cross_platform_folder_picker import open_folder_picker

res = open_folder_picker()
```

# Roadmap

-   Investigate a better way to handle folder open dialog
-   Reduce dependency on tkinter on windows
