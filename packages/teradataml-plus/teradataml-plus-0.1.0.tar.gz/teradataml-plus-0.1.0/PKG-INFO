Metadata-Version: 2.1
Name: teradataml-plus
Version: 0.1.0
Summary: Python Package that extends the functionality of the popular teradataml package through monkey-patching.
Author: Martin Hillebrand
Author-email: martin.hillebrand@teradata.com
Keywords: teradataml-plus,teradata,database,teradataml
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Database
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: teradataml>=20.0.00.00
Provides-Extra: plot
Requires-Dist: plotly>=5.0; extra == "plot"
Requires-Dist: seaborn>=0.11; extra == "plot"

![Logo](https://raw.githubusercontent.com/martinhillebrand/tdmlplus/refs/heads/main/media/tdmlplus-logo.png)

# teradataml-plus

Python Package that extends the functionality of the popular [teradataml](https://pypi.org/project/teradataml/) package through [monkey-patching](https://en.wikipedia.org/wiki/Monkey_patch).
This is to use field-developed assets more naturally with the existing interface.

## Installation

* `pip install teradataml-plus`

## Quickstart

```python
#always import teradata-plus (tdmlplus) first
import tdmlplus

#then import teradataml. It will have all the additional functionality
import teradataml as tdml

# one additional function is for instance to get a correlation matrix straight from the DataFrame, just like in pandas

DF = tdml.DataFrame("some_table")
DF_corr = DF.corr() # not possible withot tdmlplus
```



# History

## v0.1.0 (2025-07-25)

* First release on PyPI.
* `teradataml.DataFrame.corr()` correlation matrix like in pandas
* `teradataml.random` # module for random data generation
  * `teradataml.random.randn(...)` # random normal distributed variables
* `teradataml.dba` a module for database utils
  * `teradataml.dba.get_amps_count()` # get number of amps 
