"""Added governance service tables

Revision ID: a7d20ed3c5b4
Revises: d016d5e1fe5a
Create Date: 2024-07-10 14:35:09.023525

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import core.db_models.utils
from core.utils import current_utc_time

# revision identifiers, used by Alembic.
revision: str = 'a7d20ed3c5b4'
down_revision: Union[str, None] = 'd016d5e1fe5a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ai_application',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=4000), nullable=True),
    sa.Column('vector_dbs', core.db_models.utils.CommaSeparatedList(length=255), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=False),
    sa.Column('update_time', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ai_application_create_time'), 'ai_application', ['create_time'], unique=False)
    op.create_index(op.f('ix_ai_application_id'), 'ai_application', ['id'], unique=False)
    op.create_index(op.f('ix_ai_application_update_time'), 'ai_application', ['update_time'], unique=False)
    op.create_table('vector_db_metadata_key',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.Enum('SYSTEM_DEFINED', 'USER_DEFINED', name='metadatatype'), nullable=False),
    sa.Column('description', sa.String(length=4000), nullable=True),
    sa.Column('data_type', sa.String(length=255), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=False),
    sa.Column('update_time', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vector_db_metadata_key_create_time'), 'vector_db_metadata_key', ['create_time'], unique=False)
    op.create_index(op.f('ix_vector_db_metadata_key_id'), 'vector_db_metadata_key', ['id'], unique=False)
    op.create_index(op.f('ix_vector_db_metadata_key_update_time'), 'vector_db_metadata_key', ['update_time'], unique=False)
    op.create_table('tag',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.Enum('SYSTEM_DEFINED', 'USER_DEFINED', name='tagtype'), nullable=False),
    sa.Column('description', sa.String(length=4000), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=False),
    sa.Column('update_time', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tag_create_time'), 'tag', ['create_time'], unique=False)
    op.create_index(op.f('ix_tag_id'), 'tag', ['id'], unique=False)
    op.create_index(op.f('ix_tag_update_time'), 'tag', ['update_time'], unique=False)
    op.create_table('vector_db',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=4000), nullable=True),
    sa.Column('type', sa.Enum('OPENSEARCH', 'MILVUS', name='vectordbtype'), nullable=True),
    sa.Column('user_enforcement', sa.Integer(), nullable=False),
    sa.Column('group_enforcement', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=False),
    sa.Column('update_time', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vector_db_create_time'), 'vector_db', ['create_time'], unique=False)
    op.create_index(op.f('ix_vector_db_id'), 'vector_db', ['id'], unique=False)
    op.create_index(op.f('ix_vector_db_update_time'), 'vector_db', ['update_time'], unique=False)
    op.create_table('ai_application_config',
    sa.Column('allowed_users', core.db_models.utils.CommaSeparatedList(length=255), nullable=True),
    sa.Column('allowed_groups', core.db_models.utils.CommaSeparatedList(length=255), nullable=True),
    sa.Column('allowed_roles', core.db_models.utils.CommaSeparatedList(length=255), nullable=True),
    sa.Column('denied_users', core.db_models.utils.CommaSeparatedList(length=255), nullable=True),
    sa.Column('denied_groups', core.db_models.utils.CommaSeparatedList(length=255), nullable=True),
    sa.Column('denied_roles', core.db_models.utils.CommaSeparatedList(length=255), nullable=True),
    sa.Column('application_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=False),
    sa.Column('update_time', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['application_id'], ['ai_application.id'], name='fk_ai_application_config_application_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ai_application_config_create_time'), 'ai_application_config', ['create_time'], unique=False)
    op.create_index(op.f('ix_ai_application_config_id'), 'ai_application_config', ['id'], unique=False)
    op.create_index(op.f('ix_ai_application_config_update_time'), 'ai_application_config', ['update_time'], unique=False)
    op.create_table('ai_application_policy',
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=4000), nullable=False),
    sa.Column('users', core.db_models.utils.CommaSeparatedList(length=1024), nullable=True),
    sa.Column('groups', core.db_models.utils.CommaSeparatedList(length=1024), nullable=True),
    sa.Column('roles', core.db_models.utils.CommaSeparatedList(length=1024), nullable=True),
    sa.Column('tags', core.db_models.utils.CommaSeparatedList(length=1024), nullable=True),
    sa.Column('prompt', sa.Enum('ALLOW', 'DENY', 'REDACT', name='permissiontype'), nullable=True),
    sa.Column('reply', sa.Enum('ALLOW', 'DENY', 'REDACT', name='permissiontype'), nullable=True),
    sa.Column('enriched_prompt', sa.Enum('ALLOW', 'DENY', 'REDACT', name='permissiontype'), nullable=True),
    sa.Column('application_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=False),
    sa.Column('update_time', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['application_id'], ['ai_application.id'], name='fk_ai_application_policy_application_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ai_application_policy_create_time'), 'ai_application_policy', ['create_time'], unique=False)
    op.create_index(op.f('ix_ai_application_policy_id'), 'ai_application_policy', ['id'], unique=False)
    op.create_index(op.f('ix_ai_application_policy_update_time'), 'ai_application_policy', ['update_time'], unique=False)
    op.create_table('vector_db_metadata_value',
    sa.Column('metadata_id', sa.Integer(), nullable=False),
    sa.Column('metadata_value', sa.String(length=255), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=False),
    sa.Column('update_time', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['metadata_id'], ['vector_db_metadata_key.id'], name='fk_vector_db_metadata_value_metadata_key_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vector_db_metadata_value_create_time'), 'vector_db_metadata_value', ['create_time'], unique=False)
    op.create_index(op.f('ix_vector_db_metadata_value_id'), 'vector_db_metadata_value', ['id'], unique=False)
    op.create_index(op.f('ix_vector_db_metadata_value_update_time'), 'vector_db_metadata_value', ['update_time'], unique=False)
    op.create_table('vector_db_policy',
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=4000), nullable=True),
    sa.Column('vector_db_id', sa.Integer(), nullable=False),
    sa.Column('metadata_key', sa.String(length=255), nullable=False),
    sa.Column('metadata_value', sa.String(length=255), nullable=False),
    sa.Column('operator', sa.String(length=255), nullable=False),
    sa.Column('allowed_users', core.db_models.utils.CommaSeparatedList(length=255), nullable=True),
    sa.Column('allowed_groups', core.db_models.utils.CommaSeparatedList(length=255), nullable=True),
    sa.Column('allowed_roles', core.db_models.utils.CommaSeparatedList(length=255), nullable=True),
    sa.Column('denied_users', core.db_models.utils.CommaSeparatedList(length=255), nullable=True),
    sa.Column('denied_groups', core.db_models.utils.CommaSeparatedList(length=255), nullable=True),
    sa.Column('denied_roles', core.db_models.utils.CommaSeparatedList(length=255), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=False),
    sa.Column('update_time', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['vector_db_id'], ['vector_db.id'], name='fk_vector_db_policy_vector_db_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vector_db_policy_create_time'), 'vector_db_policy', ['create_time'], unique=False)
    op.create_index(op.f('ix_vector_db_policy_id'), 'vector_db_policy', ['id'], unique=False)
    op.create_index(op.f('ix_vector_db_policy_update_time'), 'vector_db_policy', ['update_time'], unique=False)

    # ### Inserting system defined tags ###
    connection = op.get_bind()
    connection.execute(
        sa.text("""
                INSERT INTO tag (status, create_time, update_time, type, name, description)
                VALUES 
                    (1, :now, :now, 'SYSTEM_DEFINED', 'AU_ABN', 'The Australian Business Number (ABN) is a unique 11 digit identifier issued to all entities registered in the Australian Business Register (ABR)'),
                    (1, :now, :now, 'SYSTEM_DEFINED', 'AU_ACN', 'An Australian Company Number is a unique nine-digit number issued by the Australian Securities and Investments Commission to every company registered under the Commonwealth Corporations Act 2001 as an identifier'),
                    (1, :now, :now, 'SYSTEM_DEFINED', 'AU_MEDICARE', 'Medicare number is a unique identifier issued by Australian Government that enables the cardholder to receive a rebates of medical expenses under Australia''s Medicare system'),
                    (1, :now, :now, 'SYSTEM_DEFINED', 'AU_TFN', 'The tax file number (TFN) is a unique identifier issued by the Australian Taxation Office to each taxpaying entity'),
                    (1, :now, :now, 'SYSTEM_DEFINED', 'CREDIT_CARD', 'A credit card number is between 12 to 19 digits. https://en.wikipedia.org/wiki/Payment_card_number'),
                    (1, :now, :now, 'SYSTEM_DEFINED', 'CRYPTO', 'A Crypto wallet number. Currently only Bitcoin address is supported'),
                    (1, :now, :now, 'SYSTEM_DEFINED', 'DATE_TIME', 'Absolute or relative dates or periods or times smaller than a day'),
                    (1, :now, :now, 'SYSTEM_DEFINED', 'EMAIL_ADDRESS', 'An email address identifies an email box to which email messages are delivered'),
                    (1, :now, :now, 'SYSTEM_DEFINED', 'ES_NIF', 'A spanish NIF number (Personal tax ID)'),
                    (1, :now, :now, 'SYSTEM_DEFINED', 'IBAN_CODE', 'The International Bank Account Number (IBAN) is an internationally agreed system of identifying bank accounts across national borders to facilitate the communication and processing of cross border transactions with a reduced risk of transcription errors'),
                    (1, :now, :now, 'SYSTEM_DEFINED', 'IP_ADDRESS', 'An Internet Protocol (IP) address (either IPv4 or IPv6)'),
                    (1, :now, :now, 'SYSTEM_DEFINED', 'IT_FISCAL_CODE', 'An Italian personal identification code. https://en.wikipedia.org/wiki/Italian_fiscal_code'),
                    (1, :now, :now, 'SYSTEM_DEFINED', 'IT_DRIVER_LICENSE', 'An Italian driver license number'),
                    (1, :now, :now, 'SYSTEM_DEFINED', 'IT_VAT_CODE', 'An Italian VAT code number'),
                    (1, :now, :now, 'SYSTEM_DEFINED', 'IT_PASSPORT', 'An Italian passport number'),
                    (1, :now, :now, 'SYSTEM_DEFINED', 'IT_IDENTITY_CARD', 'An Italian identity card number. https://en.wikipedia.org/wiki/Italian_electronic_identity_card'),
                    (1, :now, :now, 'SYSTEM_DEFINED', 'LOCATION', 'Name of politically or geographically defined location (cities, provinces, countries, international regions, bodies of water, mountains'),
                    (1, :now, :now, 'SYSTEM_DEFINED', 'MEDICAL_LICENSE', 'Common medical license numbers'),
                    (1, :now, :now, 'SYSTEM_DEFINED', 'NRP', 'A person’s Nationality, religious or political group'),
                    (1, :now, :now, 'SYSTEM_DEFINED', 'PERSON', 'A full person name, which can include first names, middle names or initials, and last names'),
                    (1, :now, :now, 'SYSTEM_DEFINED', 'PHONE_NUMBER', 'A telephone number'),
                    (1, :now, :now, 'SYSTEM_DEFINED', 'SG_NRIC_FIN', 'A National Registration Identification Card'),
                    (1, :now, :now, 'SYSTEM_DEFINED', 'UK_NHS', 'A UK NHS number is 10 digits'),
                    (1, :now, :now, 'SYSTEM_DEFINED', 'URL', 'A URL (Uniform Resource Locator), unique identifier used to locate a resource on the Internet'),
                    (1, :now, :now, 'SYSTEM_DEFINED', 'US_BANK_NUMBER', 'A US bank account number is between 8 to 17 digits'),
                    (1, :now, :now, 'SYSTEM_DEFINED', 'US_DRIVER_LICENSE', 'A US driver license according to https://ntsi.com/drivers-license-format/'),
                    (1, :now, :now, 'SYSTEM_DEFINED', 'US_ITIN', 'US Individual Taxpayer Identification Number (ITIN). Nine digits that start with a "9" and contain a "7" or "8" as the 4 digit'),
                    (1, :now, :now, 'SYSTEM_DEFINED', 'US_PASSPORT', 'A US passport number with 9 digits'),
                    (1, :now, :now, 'SYSTEM_DEFINED', 'US_SSN', 'A US Social Security Number (SSN) with 9 digits')
            """),
        {"now": current_utc_time()}
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_vector_db_policy_update_time'), table_name='vector_db_policy')
    op.drop_index(op.f('ix_vector_db_policy_id'), table_name='vector_db_policy')
    op.drop_index(op.f('ix_vector_db_policy_create_time'), table_name='vector_db_policy')
    op.drop_table('vector_db_policy')
    op.drop_index(op.f('ix_vector_db_metadata_value_update_time'), table_name='vector_db_metadata_value')
    op.drop_index(op.f('ix_vector_db_metadata_value_id'), table_name='vector_db_metadata_value')
    op.drop_index(op.f('ix_vector_db_metadata_value_create_time'), table_name='vector_db_metadata_value')
    op.drop_table('vector_db_metadata_value')
    op.drop_index(op.f('ix_ai_application_policy_update_time'), table_name='ai_application_policy')
    op.drop_index(op.f('ix_ai_application_policy_id'), table_name='ai_application_policy')
    op.drop_index(op.f('ix_ai_application_policy_create_time'), table_name='ai_application_policy')
    op.drop_table('ai_application_policy')
    op.drop_index(op.f('ix_ai_application_config_update_time'), table_name='ai_application_config')
    op.drop_index(op.f('ix_ai_application_config_id'), table_name='ai_application_config')
    op.drop_index(op.f('ix_ai_application_config_create_time'), table_name='ai_application_config')
    op.drop_table('ai_application_config')
    op.drop_index(op.f('ix_vector_db_update_time'), table_name='vector_db')
    op.drop_index(op.f('ix_vector_db_id'), table_name='vector_db')
    op.drop_index(op.f('ix_vector_db_create_time'), table_name='vector_db')
    op.drop_table('vector_db')
    op.drop_index(op.f('ix_tag_update_time'), table_name='tag')
    op.drop_index(op.f('ix_tag_id'), table_name='tag')
    op.drop_index(op.f('ix_tag_create_time'), table_name='tag')
    op.drop_table('tag')
    op.drop_index(op.f('ix_vector_db_metadata_key_update_time'), table_name='vector_db_metadata_key')
    op.drop_index(op.f('ix_vector_db_metadata_key_id'), table_name='vector_db_metadata_key')
    op.drop_index(op.f('ix_vector_db_metadata_key_create_time'), table_name='vector_db_metadata_key')
    op.drop_table('vector_db_metadata_key')
    op.drop_index(op.f('ix_ai_application_update_time'), table_name='ai_application')
    op.drop_index(op.f('ix_ai_application_id'), table_name='ai_application')
    op.drop_index(op.f('ix_ai_application_create_time'), table_name='ai_application')
    op.drop_table('ai_application')
    # ### end Alembic commands ###
