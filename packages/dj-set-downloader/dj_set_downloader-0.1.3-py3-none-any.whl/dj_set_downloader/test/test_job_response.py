# coding: utf-8

"""
    DJ Set Downloader API

    A REST API for downloading and processing DJ sets, splitting them into individual tracks.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dj_set_downloader.models.job_response import JobResponse

class TestJobResponse(unittest.TestCase):
    """JobResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JobResponse:
        """Test JobResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JobResponse`
        """
        model = JobResponse()
        if include_optional:
            return JobResponse(
                jobs = [
                    dj_set_downloader.models.job/status.job.Status(
                        download_all_url = '', 
                        end_time = '', 
                        error = '', 
                        events = [
                            dj_set_downloader.models.progress/event.progress.Event(
                                data = [
                                    56
                                    ], 
                                error = '', 
                                message = '', 
                                progress = 1.337, 
                                stage = 'initializing', 
                                timestamp = '', 
                                track_details = dj_set_downloader.models.progress/track_details.progress.TrackDetails(
                                    current_track = '', 
                                    processed_tracks = 56, 
                                    total_tracks = 56, 
                                    track_number = 56, ), )
                            ], 
                        id = '', 
                        message = '', 
                        progress = 1.337, 
                        results = [
                            ''
                            ], 
                        start_time = '', 
                        status = '', 
                        total_tracks = 56, 
                        tracklist = dj_set_downloader.models.domain/tracklist.domain.Tracklist(
                            artist = '', 
                            genre = '', 
                            name = '', 
                            tracks = [
                                dj_set_downloader.models.domain/track.domain.Track(
                                    artist = '', 
                                    available = True, 
                                    download_url = '', 
                                    end_time = '', 
                                    name = '', 
                                    size_bytes = 56, 
                                    start_time = '', 
                                    track_number = 56, )
                                ], 
                            year = 56, ), )
                    ],
                page = 56,
                page_size = 56,
                total_jobs = 56,
                total_pages = 56
            )
        else:
            return JobResponse(
        )
        """

    def testJobResponse(self):
        """Test JobResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
