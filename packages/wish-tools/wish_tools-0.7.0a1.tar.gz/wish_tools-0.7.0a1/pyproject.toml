[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "wish-tools"
version = "0.7.0a1"
description = "Tool integrations and parsers for wish"
readme = "README.md"
license = "AGPL-3.0"
authors = [
    { name = "SecDevLab Inc.", email = "dev@secdevlab.com" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
    "Topic :: System :: Networking",
]
requires-python = ">=3.11"
dependencies = [
    "wish-models==0.7.0a1",
    "wish-core==0.7.0a1",
    "pydantic>=2.5.0",
    "httpx>=0.25.0",
]

[tool.uv.sources]
wish-models = { workspace = true }
wish-core = { workspace = true }

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
]

[project.urls]
Homepage = "https://github.com/SecDev-Lab/wish"
Documentation = "https://github.com/SecDev-Lab/wish/tree/main/docs"
Repository = "https://github.com/SecDev-Lab/wish"
Issues = "https://github.com/SecDev-Lab/wish/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/wish_tools"]

[tool.hatch.build.targets.sdist]
include = [
    "src/",
    "tests/",
    "README.md",
]

[tool.ruff]
target-version = "0.7.0a1"
line-length = 120
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "S",   # flake8-bandit (security)
]
ignore = [
    "S101",  # Use of assert
]

[tool.mypy]
python_version = "0.7.0a1"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
]
asyncio_mode = "auto"
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
]