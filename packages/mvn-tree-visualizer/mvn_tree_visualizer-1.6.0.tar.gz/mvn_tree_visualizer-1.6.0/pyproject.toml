[project]
name = "mvn-tree-visualizer"
version = "1.6.0"
authors = [
    { name = "Iraklis Konsoulas", email = "dyka3773@gmail.com" },
]
description = "A simple command line tool to visualize the dependency tree of a Maven project in a graphical format."
readme = "README.md"
requires-python = ">=3.13"
license = "MIT"
keywords = [
    "maven",
    "dependency",
    "visualization",
    "tree",
    "cli",
    "command-line",
    "tool",
    "graph",
    "mermaid",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Build Tools",
    "Typing :: Typed",
]
dependencies = [
    "jinja2>=3.1.6",
    "watchdog>=6.0.0",
]

[project.urls]
source = "https://github.com/dyka3773/mvn-tree-visualizer"

[project.scripts]
mvn-tree-visualizer = "mvn_tree_visualizer.cli:cli"

[dependency-groups]
dev = [
    "twine>=6.1.0",
    "ruff>=0.12.3",
    "pytest>=8.3.2",
    "python-semantic-release>=10.2.0",
    "build>=1.0.0",
    "git-changelog>=2.5.3",
]

[build-system]
build-backend  = 'hatchling.build'
requires = ['hatchling']

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
build_command = "pip install build && python -m build"
dist_path = "dist/"
upload_to_pypi = true
upload_to_release = true
remove_dist = false

[tool.semantic_release.branches.master]
match = "master"
prerelease = false

[tool.semantic_release.branches.develop]
match = "develop"
prerelease = true
prerelease_token = "beta"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.git-changelog]
convention = "conventional"
template = "keepachangelog"
sections = [
    {type = "feat", section = "Features", scopes = []},
    {type = "fix", section = "Bug Fixes", scopes = []},
    {type = "refactor", section = "Code Refactoring", scopes = []},
    {type = "perf", section = "Performance Improvements", scopes = []},
    {type = "docs", section = "Documentation", scopes = []},
    {type = "chore", section = "Miscellaneous Chores", scopes = []},
    {type = "ci", section = "Continuous Integration", scopes = []},
    {type = "build", section = "Build System", scopes = []},
    {type = "test", section = "Tests", scopes = []},
    {type = "style", section = "Style", scopes = []},
]
