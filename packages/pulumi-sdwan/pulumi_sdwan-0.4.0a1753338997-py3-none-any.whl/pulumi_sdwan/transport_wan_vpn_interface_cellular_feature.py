# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['TransportWanVpnInterfaceCellularFeatureArgs', 'TransportWanVpnInterfaceCellularFeature']

@pulumi.input_type
class TransportWanVpnInterfaceCellularFeatureArgs:
    def __init__(__self__, *,
                 feature_profile_id: pulumi.Input[builtins.str],
                 transport_wan_vpn_feature_id: pulumi.Input[builtins.str],
                 acl_ipv4_egress_feature_id: Optional[pulumi.Input[builtins.str]] = None,
                 acl_ipv4_ingress_feature_id: Optional[pulumi.Input[builtins.str]] = None,
                 acl_ipv6_egress_feature_id: Optional[pulumi.Input[builtins.str]] = None,
                 acl_ipv6_ingress_feature_id: Optional[pulumi.Input[builtins.str]] = None,
                 arps: Optional[pulumi.Input[Sequence[pulumi.Input['TransportWanVpnInterfaceCellularFeatureArpArgs']]]] = None,
                 bandwidth_downstream: Optional[pulumi.Input[builtins.int]] = None,
                 bandwidth_downstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 bandwidth_upstream: Optional[pulumi.Input[builtins.int]] = None,
                 bandwidth_upstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 interface_description: Optional[pulumi.Input[builtins.str]] = None,
                 interface_description_variable: Optional[pulumi.Input[builtins.str]] = None,
                 interface_mtu: Optional[pulumi.Input[builtins.int]] = None,
                 interface_mtu_variable: Optional[pulumi.Input[builtins.str]] = None,
                 interface_name: Optional[pulumi.Input[builtins.str]] = None,
                 interface_name_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ip_directed_broadcast: Optional[pulumi.Input[builtins.bool]] = None,
                 ip_directed_broadcast_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ip_mtu: Optional[pulumi.Input[builtins.int]] = None,
                 ip_mtu_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipv4_dhcp_helper_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipv4_dhcp_helpers: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 nat_ipv4: Optional[pulumi.Input[builtins.bool]] = None,
                 nat_ipv4_variable: Optional[pulumi.Input[builtins.str]] = None,
                 nat_tcp_timeout: Optional[pulumi.Input[builtins.int]] = None,
                 nat_tcp_timeout_variable: Optional[pulumi.Input[builtins.str]] = None,
                 nat_udp_timeout: Optional[pulumi.Input[builtins.int]] = None,
                 nat_udp_timeout_variable: Optional[pulumi.Input[builtins.str]] = None,
                 per_tunnel_qos: Optional[pulumi.Input[builtins.bool]] = None,
                 per_tunnel_qos_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_adaptive: Optional[pulumi.Input[builtins.bool]] = None,
                 qos_adaptive_bandwidth_downstream: Optional[pulumi.Input[builtins.bool]] = None,
                 qos_adaptive_bandwidth_upstream: Optional[pulumi.Input[builtins.bool]] = None,
                 qos_adaptive_default_downstream: Optional[pulumi.Input[builtins.int]] = None,
                 qos_adaptive_default_downstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_adaptive_default_upstream: Optional[pulumi.Input[builtins.int]] = None,
                 qos_adaptive_default_upstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_adaptive_max_downstream: Optional[pulumi.Input[builtins.int]] = None,
                 qos_adaptive_max_downstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_adaptive_max_upstream: Optional[pulumi.Input[builtins.int]] = None,
                 qos_adaptive_max_upstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_adaptive_min_downstream: Optional[pulumi.Input[builtins.int]] = None,
                 qos_adaptive_min_downstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_adaptive_min_upstream: Optional[pulumi.Input[builtins.int]] = None,
                 qos_adaptive_min_upstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_adaptive_period: Optional[pulumi.Input[builtins.int]] = None,
                 qos_adaptive_period_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_shaping_rate: Optional[pulumi.Input[builtins.int]] = None,
                 qos_shaping_rate_variable: Optional[pulumi.Input[builtins.str]] = None,
                 service_provider: Optional[pulumi.Input[builtins.str]] = None,
                 service_provider_variable: Optional[pulumi.Input[builtins.str]] = None,
                 shutdown: Optional[pulumi.Input[builtins.bool]] = None,
                 shutdown_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tcp_mss: Optional[pulumi.Input[builtins.int]] = None,
                 tcp_mss_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tloc_extension: Optional[pulumi.Input[builtins.str]] = None,
                 tloc_extension_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tracker: Optional[pulumi.Input[builtins.str]] = None,
                 tracker_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_bandwidth_percent: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_bandwidth_percent_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_all: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_all_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_bfd: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_bfd_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_bgp: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_bgp_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_dhcp: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_dhcp_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_dns: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_dns_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_https: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_https_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_icmp: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_icmp_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_netconf: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_netconf_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_ntp: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_ntp_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_ospf: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_ospf_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_snmp: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_snmp_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_ssh: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_ssh_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_stun: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_stun_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_bind_loopback_tunnel: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_bind_loopback_tunnel_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_border: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_border_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_carrier: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_carrier_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_clear_dont_fragment: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_clear_dont_fragment_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_color: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_color_restrict: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_color_restrict_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_color_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_encapsulations: Optional[pulumi.Input[Sequence[pulumi.Input['TransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulationArgs']]]] = None,
                 tunnel_interface_exclude_controller_group_list_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_exclude_controller_group_lists: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.int]]]] = None,
                 tunnel_interface_groups: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_interface_groups_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_hello_interval: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_interface_hello_interval_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_hello_tolerance: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_interface_hello_tolerance_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_last_resort_circuit: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_last_resort_circuit_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_low_bandwidth_link: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_low_bandwidth_link_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_max_control_connections: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_interface_max_control_connections_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_nat_refresh_interval: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_interface_nat_refresh_interval_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_network_broadcast: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_network_broadcast_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_port_hop: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_port_hop_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_tunnel_tcp_mss: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_interface_tunnel_tcp_mss_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_vbond_as_stun_server: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_vbond_as_stun_server_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_vmanage_connection_preference: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_interface_vmanage_connection_preference_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_qos_mode: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_qos_mode_variable: Optional[pulumi.Input[builtins.str]] = None):
        """
        The set of arguments for constructing a TransportWanVpnInterfaceCellularFeature resource.
        :param pulumi.Input[builtins.str] feature_profile_id: Feature Profile ID
        :param pulumi.Input[builtins.str] transport_wan_vpn_feature_id: Transport WAN VPN Feature ID
        :param pulumi.Input[Sequence[pulumi.Input['TransportWanVpnInterfaceCellularFeatureArpArgs']]] arps: Configure ARP entries
        :param pulumi.Input[builtins.int] bandwidth_downstream: Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
        :param pulumi.Input[builtins.str] bandwidth_downstream_variable: Variable name
        :param pulumi.Input[builtins.int] bandwidth_upstream: Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
        :param pulumi.Input[builtins.str] bandwidth_upstream_variable: Variable name
        :param pulumi.Input[builtins.str] description: The description of the Feature
        :param pulumi.Input[builtins.str] interface_description_variable: Variable name
        :param pulumi.Input[builtins.int] interface_mtu: Interface MTU GigabitEthernet0 <1500..1518>, Other GigabitEthernet <1500..9216> in bytes - Range: `1500`-`9216` -
               Default value: `1500`
        :param pulumi.Input[builtins.str] interface_mtu_variable: Variable name
        :param pulumi.Input[builtins.str] interface_name_variable: Variable name
        :param pulumi.Input[builtins.bool] ip_directed_broadcast: IP Directed-Broadcast - Default value: `false`
        :param pulumi.Input[builtins.str] ip_directed_broadcast_variable: Variable name
        :param pulumi.Input[builtins.int] ip_mtu: IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
               <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
        :param pulumi.Input[builtins.str] ip_mtu_variable: Variable name
        :param pulumi.Input[builtins.str] ipv4_dhcp_helper_variable: Variable name
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] ipv4_dhcp_helpers: List of DHCP IPv4 helper addresses (min 1, max 8)
        :param pulumi.Input[builtins.str] name: The name of the Feature
        :param pulumi.Input[builtins.bool] nat_ipv4: Network Address Translation on this interface - Default value: `false`
        :param pulumi.Input[builtins.str] nat_ipv4_variable: Variable name
        :param pulumi.Input[builtins.int] nat_tcp_timeout: Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
        :param pulumi.Input[builtins.str] nat_tcp_timeout_variable: Variable name
        :param pulumi.Input[builtins.int] nat_udp_timeout: Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
        :param pulumi.Input[builtins.str] nat_udp_timeout_variable: Variable name
        :param pulumi.Input[builtins.bool] per_tunnel_qos: Per-tunnel Qos - Default value: `false`
        :param pulumi.Input[builtins.str] per_tunnel_qos_variable: Variable name
        :param pulumi.Input[builtins.bool] qos_adaptive: Adaptive QoS - Default value: `false`
        :param pulumi.Input[builtins.bool] qos_adaptive_bandwidth_downstream: Shaping Rate Downstream - Default value: `false`
        :param pulumi.Input[builtins.bool] qos_adaptive_bandwidth_upstream: Shaping Rate Upstream - Default value: `false`
        :param pulumi.Input[builtins.int] qos_adaptive_default_downstream: Adaptive QoS default downstream bandwidth (kbps) - Range: `8`-`100000000`
        :param pulumi.Input[builtins.str] qos_adaptive_default_downstream_variable: Variable name
        :param pulumi.Input[builtins.int] qos_adaptive_default_upstream: Adaptive QoS default upstream bandwidth (kbps) - Range: `8`-`100000000`
        :param pulumi.Input[builtins.str] qos_adaptive_default_upstream_variable: Variable name
        :param pulumi.Input[builtins.int] qos_adaptive_max_downstream: Downstream max bandwidth limit (kbps) - Range: `8`-`100000000`
        :param pulumi.Input[builtins.str] qos_adaptive_max_downstream_variable: Variable name
        :param pulumi.Input[builtins.int] qos_adaptive_max_upstream: Upstream max bandwidth limit (kbps) - Range: `8`-`100000000`
        :param pulumi.Input[builtins.str] qos_adaptive_max_upstream_variable: Variable name
        :param pulumi.Input[builtins.int] qos_adaptive_min_downstream: Downstream min bandwidth limit (kbps) - Range: `8`-`100000000`
        :param pulumi.Input[builtins.str] qos_adaptive_min_downstream_variable: Variable name
        :param pulumi.Input[builtins.int] qos_adaptive_min_upstream: Upstream min bandwidth limit (kbps) - Range: `8`-`100000000`
        :param pulumi.Input[builtins.str] qos_adaptive_min_upstream_variable: Variable name
        :param pulumi.Input[builtins.int] qos_adaptive_period: Adapt Period(Minutes) - Range: `1`-`720` - Default value: `15`
        :param pulumi.Input[builtins.str] qos_adaptive_period_variable: Variable name
        :param pulumi.Input[builtins.int] qos_shaping_rate: Shaping Rate (Kbps) - Range: `8`-`100000000`
        :param pulumi.Input[builtins.str] qos_shaping_rate_variable: Variable name
        :param pulumi.Input[builtins.str] service_provider: Service Provider Name
        :param pulumi.Input[builtins.str] service_provider_variable: Variable name
        :param pulumi.Input[builtins.bool] shutdown: - Default value: `true`
        :param pulumi.Input[builtins.str] shutdown_variable: Variable name
        :param pulumi.Input[builtins.int] tcp_mss: TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
        :param pulumi.Input[builtins.str] tcp_mss_variable: Variable name
        :param pulumi.Input[builtins.str] tloc_extension: Extends a local TLOC to a remote node only for vpn 0
        :param pulumi.Input[builtins.str] tloc_extension_variable: Variable name
        :param pulumi.Input[builtins.str] tracker: Enable tracker for this interface
        :param pulumi.Input[builtins.str] tracker_variable: Variable name
        :param pulumi.Input[builtins.int] tunnel_bandwidth_percent: Tunnels Bandwidth Percent - Range: `1`-`100` - Default value: `50`
        :param pulumi.Input[builtins.str] tunnel_bandwidth_percent_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface: Tunnel Interface on/off - Default value: `false`
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_all: Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_all_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_bfd: Allow/Deny BFD - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_bfd_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_bgp: Allow/deny BGP - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_bgp_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_dhcp: Allow/Deny DHCP - Default value: `true`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_dhcp_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_dns: Allow/Deny DNS - Default value: `true`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_dns_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_https: Allow/Deny HTTPS - Default value: `true`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_https_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_icmp: Allow/Deny ICMP - Default value: `true`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_icmp_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_netconf: Allow/Deny NETCONF - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_netconf_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_ntp: Allow/Deny NTP - Default value: `true`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_ntp_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_ospf: Allow/Deny OSPF - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_ospf_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_snmp: Allow/Deny SNMP - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_snmp_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_ssh: Allow/Deny SSH - Default value: `true`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_ssh_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_stun: Allow/Deny STUN - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_stun_variable: Variable name
        :param pulumi.Input[builtins.str] tunnel_interface_bind_loopback_tunnel: Bind loopback tunnel interface to a physical interface
        :param pulumi.Input[builtins.str] tunnel_interface_bind_loopback_tunnel_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_border: Set TLOC as border TLOC - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_border_variable: Variable name
        :param pulumi.Input[builtins.str] tunnel_interface_carrier: Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
               `carrier7`, `carrier8` - Default value: `default`
        :param pulumi.Input[builtins.str] tunnel_interface_carrier_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_clear_dont_fragment: Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_clear_dont_fragment_variable: Variable name
        :param pulumi.Input[builtins.str] tunnel_interface_color: Set color for TLOC - Choices: `default`, `mpls`, `metro ethernet`, `biz internet`, `public internet`, `lte`, `3g`,
               `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
               `private4`, `private5`, `private6` - Default value: `mpls`
        :param pulumi.Input[builtins.bool] tunnel_interface_color_restrict: Restrict this TLOC behavior - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_color_restrict_variable: Variable name
        :param pulumi.Input[builtins.str] tunnel_interface_color_variable: Variable name
        :param pulumi.Input[Sequence[pulumi.Input['TransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulationArgs']]] tunnel_interface_encapsulations: Encapsulation for TLOC
        :param pulumi.Input[builtins.str] tunnel_interface_exclude_controller_group_list_variable: Variable name
        :param pulumi.Input[Sequence[pulumi.Input[builtins.int]]] tunnel_interface_exclude_controller_group_lists: Exclude the following controller groups defined in this list.
        :param pulumi.Input[builtins.int] tunnel_interface_groups: List of groups - Range: `1`-`4294967295`
        :param pulumi.Input[builtins.str] tunnel_interface_groups_variable: Variable name
        :param pulumi.Input[builtins.int] tunnel_interface_hello_interval: Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
        :param pulumi.Input[builtins.str] tunnel_interface_hello_interval_variable: Variable name
        :param pulumi.Input[builtins.int] tunnel_interface_hello_tolerance: Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
        :param pulumi.Input[builtins.str] tunnel_interface_hello_tolerance_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_last_resort_circuit: Set TLOC as last resort - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_last_resort_circuit_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_low_bandwidth_link: Set the interface as a low-bandwidth circuit - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_low_bandwidth_link_variable: Variable name
        :param pulumi.Input[builtins.int] tunnel_interface_max_control_connections: Maximum Control Connections - Range: `0`-`100`
        :param pulumi.Input[builtins.str] tunnel_interface_max_control_connections_variable: Variable name
        :param pulumi.Input[builtins.int] tunnel_interface_nat_refresh_interval: Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
        :param pulumi.Input[builtins.str] tunnel_interface_nat_refresh_interval_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_network_broadcast: Accept and respond to network-prefix-directed broadcasts - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_network_broadcast_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_port_hop: Disallow port hopping on the tunnel interface - Default value: `true`
        :param pulumi.Input[builtins.str] tunnel_interface_port_hop_variable: Variable name
        :param pulumi.Input[builtins.int] tunnel_interface_tunnel_tcp_mss: Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
        :param pulumi.Input[builtins.str] tunnel_interface_tunnel_tcp_mss_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_vbond_as_stun_server: Put this wan interface in STUN mode only - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_vbond_as_stun_server_variable: Variable name
        :param pulumi.Input[builtins.int] tunnel_interface_vmanage_connection_preference: Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
        :param pulumi.Input[builtins.str] tunnel_interface_vmanage_connection_preference_variable: Variable name
        :param pulumi.Input[builtins.str] tunnel_qos_mode: Set tunnel QoS mode - Choices: `hub`, `spoke`
        :param pulumi.Input[builtins.str] tunnel_qos_mode_variable: Variable name
        """
        pulumi.set(__self__, "feature_profile_id", feature_profile_id)
        pulumi.set(__self__, "transport_wan_vpn_feature_id", transport_wan_vpn_feature_id)
        if acl_ipv4_egress_feature_id is not None:
            pulumi.set(__self__, "acl_ipv4_egress_feature_id", acl_ipv4_egress_feature_id)
        if acl_ipv4_ingress_feature_id is not None:
            pulumi.set(__self__, "acl_ipv4_ingress_feature_id", acl_ipv4_ingress_feature_id)
        if acl_ipv6_egress_feature_id is not None:
            pulumi.set(__self__, "acl_ipv6_egress_feature_id", acl_ipv6_egress_feature_id)
        if acl_ipv6_ingress_feature_id is not None:
            pulumi.set(__self__, "acl_ipv6_ingress_feature_id", acl_ipv6_ingress_feature_id)
        if arps is not None:
            pulumi.set(__self__, "arps", arps)
        if bandwidth_downstream is not None:
            pulumi.set(__self__, "bandwidth_downstream", bandwidth_downstream)
        if bandwidth_downstream_variable is not None:
            pulumi.set(__self__, "bandwidth_downstream_variable", bandwidth_downstream_variable)
        if bandwidth_upstream is not None:
            pulumi.set(__self__, "bandwidth_upstream", bandwidth_upstream)
        if bandwidth_upstream_variable is not None:
            pulumi.set(__self__, "bandwidth_upstream_variable", bandwidth_upstream_variable)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if interface_description is not None:
            pulumi.set(__self__, "interface_description", interface_description)
        if interface_description_variable is not None:
            pulumi.set(__self__, "interface_description_variable", interface_description_variable)
        if interface_mtu is not None:
            pulumi.set(__self__, "interface_mtu", interface_mtu)
        if interface_mtu_variable is not None:
            pulumi.set(__self__, "interface_mtu_variable", interface_mtu_variable)
        if interface_name is not None:
            pulumi.set(__self__, "interface_name", interface_name)
        if interface_name_variable is not None:
            pulumi.set(__self__, "interface_name_variable", interface_name_variable)
        if ip_directed_broadcast is not None:
            pulumi.set(__self__, "ip_directed_broadcast", ip_directed_broadcast)
        if ip_directed_broadcast_variable is not None:
            pulumi.set(__self__, "ip_directed_broadcast_variable", ip_directed_broadcast_variable)
        if ip_mtu is not None:
            pulumi.set(__self__, "ip_mtu", ip_mtu)
        if ip_mtu_variable is not None:
            pulumi.set(__self__, "ip_mtu_variable", ip_mtu_variable)
        if ipv4_dhcp_helper_variable is not None:
            pulumi.set(__self__, "ipv4_dhcp_helper_variable", ipv4_dhcp_helper_variable)
        if ipv4_dhcp_helpers is not None:
            pulumi.set(__self__, "ipv4_dhcp_helpers", ipv4_dhcp_helpers)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if nat_ipv4 is not None:
            pulumi.set(__self__, "nat_ipv4", nat_ipv4)
        if nat_ipv4_variable is not None:
            pulumi.set(__self__, "nat_ipv4_variable", nat_ipv4_variable)
        if nat_tcp_timeout is not None:
            pulumi.set(__self__, "nat_tcp_timeout", nat_tcp_timeout)
        if nat_tcp_timeout_variable is not None:
            pulumi.set(__self__, "nat_tcp_timeout_variable", nat_tcp_timeout_variable)
        if nat_udp_timeout is not None:
            pulumi.set(__self__, "nat_udp_timeout", nat_udp_timeout)
        if nat_udp_timeout_variable is not None:
            pulumi.set(__self__, "nat_udp_timeout_variable", nat_udp_timeout_variable)
        if per_tunnel_qos is not None:
            pulumi.set(__self__, "per_tunnel_qos", per_tunnel_qos)
        if per_tunnel_qos_variable is not None:
            pulumi.set(__self__, "per_tunnel_qos_variable", per_tunnel_qos_variable)
        if qos_adaptive is not None:
            pulumi.set(__self__, "qos_adaptive", qos_adaptive)
        if qos_adaptive_bandwidth_downstream is not None:
            pulumi.set(__self__, "qos_adaptive_bandwidth_downstream", qos_adaptive_bandwidth_downstream)
        if qos_adaptive_bandwidth_upstream is not None:
            pulumi.set(__self__, "qos_adaptive_bandwidth_upstream", qos_adaptive_bandwidth_upstream)
        if qos_adaptive_default_downstream is not None:
            pulumi.set(__self__, "qos_adaptive_default_downstream", qos_adaptive_default_downstream)
        if qos_adaptive_default_downstream_variable is not None:
            pulumi.set(__self__, "qos_adaptive_default_downstream_variable", qos_adaptive_default_downstream_variable)
        if qos_adaptive_default_upstream is not None:
            pulumi.set(__self__, "qos_adaptive_default_upstream", qos_adaptive_default_upstream)
        if qos_adaptive_default_upstream_variable is not None:
            pulumi.set(__self__, "qos_adaptive_default_upstream_variable", qos_adaptive_default_upstream_variable)
        if qos_adaptive_max_downstream is not None:
            pulumi.set(__self__, "qos_adaptive_max_downstream", qos_adaptive_max_downstream)
        if qos_adaptive_max_downstream_variable is not None:
            pulumi.set(__self__, "qos_adaptive_max_downstream_variable", qos_adaptive_max_downstream_variable)
        if qos_adaptive_max_upstream is not None:
            pulumi.set(__self__, "qos_adaptive_max_upstream", qos_adaptive_max_upstream)
        if qos_adaptive_max_upstream_variable is not None:
            pulumi.set(__self__, "qos_adaptive_max_upstream_variable", qos_adaptive_max_upstream_variable)
        if qos_adaptive_min_downstream is not None:
            pulumi.set(__self__, "qos_adaptive_min_downstream", qos_adaptive_min_downstream)
        if qos_adaptive_min_downstream_variable is not None:
            pulumi.set(__self__, "qos_adaptive_min_downstream_variable", qos_adaptive_min_downstream_variable)
        if qos_adaptive_min_upstream is not None:
            pulumi.set(__self__, "qos_adaptive_min_upstream", qos_adaptive_min_upstream)
        if qos_adaptive_min_upstream_variable is not None:
            pulumi.set(__self__, "qos_adaptive_min_upstream_variable", qos_adaptive_min_upstream_variable)
        if qos_adaptive_period is not None:
            pulumi.set(__self__, "qos_adaptive_period", qos_adaptive_period)
        if qos_adaptive_period_variable is not None:
            pulumi.set(__self__, "qos_adaptive_period_variable", qos_adaptive_period_variable)
        if qos_shaping_rate is not None:
            pulumi.set(__self__, "qos_shaping_rate", qos_shaping_rate)
        if qos_shaping_rate_variable is not None:
            pulumi.set(__self__, "qos_shaping_rate_variable", qos_shaping_rate_variable)
        if service_provider is not None:
            pulumi.set(__self__, "service_provider", service_provider)
        if service_provider_variable is not None:
            pulumi.set(__self__, "service_provider_variable", service_provider_variable)
        if shutdown is not None:
            pulumi.set(__self__, "shutdown", shutdown)
        if shutdown_variable is not None:
            pulumi.set(__self__, "shutdown_variable", shutdown_variable)
        if tcp_mss is not None:
            pulumi.set(__self__, "tcp_mss", tcp_mss)
        if tcp_mss_variable is not None:
            pulumi.set(__self__, "tcp_mss_variable", tcp_mss_variable)
        if tloc_extension is not None:
            pulumi.set(__self__, "tloc_extension", tloc_extension)
        if tloc_extension_variable is not None:
            pulumi.set(__self__, "tloc_extension_variable", tloc_extension_variable)
        if tracker is not None:
            pulumi.set(__self__, "tracker", tracker)
        if tracker_variable is not None:
            pulumi.set(__self__, "tracker_variable", tracker_variable)
        if tunnel_bandwidth_percent is not None:
            pulumi.set(__self__, "tunnel_bandwidth_percent", tunnel_bandwidth_percent)
        if tunnel_bandwidth_percent_variable is not None:
            pulumi.set(__self__, "tunnel_bandwidth_percent_variable", tunnel_bandwidth_percent_variable)
        if tunnel_interface is not None:
            pulumi.set(__self__, "tunnel_interface", tunnel_interface)
        if tunnel_interface_allow_all is not None:
            pulumi.set(__self__, "tunnel_interface_allow_all", tunnel_interface_allow_all)
        if tunnel_interface_allow_all_variable is not None:
            pulumi.set(__self__, "tunnel_interface_allow_all_variable", tunnel_interface_allow_all_variable)
        if tunnel_interface_allow_bfd is not None:
            pulumi.set(__self__, "tunnel_interface_allow_bfd", tunnel_interface_allow_bfd)
        if tunnel_interface_allow_bfd_variable is not None:
            pulumi.set(__self__, "tunnel_interface_allow_bfd_variable", tunnel_interface_allow_bfd_variable)
        if tunnel_interface_allow_bgp is not None:
            pulumi.set(__self__, "tunnel_interface_allow_bgp", tunnel_interface_allow_bgp)
        if tunnel_interface_allow_bgp_variable is not None:
            pulumi.set(__self__, "tunnel_interface_allow_bgp_variable", tunnel_interface_allow_bgp_variable)
        if tunnel_interface_allow_dhcp is not None:
            pulumi.set(__self__, "tunnel_interface_allow_dhcp", tunnel_interface_allow_dhcp)
        if tunnel_interface_allow_dhcp_variable is not None:
            pulumi.set(__self__, "tunnel_interface_allow_dhcp_variable", tunnel_interface_allow_dhcp_variable)
        if tunnel_interface_allow_dns is not None:
            pulumi.set(__self__, "tunnel_interface_allow_dns", tunnel_interface_allow_dns)
        if tunnel_interface_allow_dns_variable is not None:
            pulumi.set(__self__, "tunnel_interface_allow_dns_variable", tunnel_interface_allow_dns_variable)
        if tunnel_interface_allow_https is not None:
            pulumi.set(__self__, "tunnel_interface_allow_https", tunnel_interface_allow_https)
        if tunnel_interface_allow_https_variable is not None:
            pulumi.set(__self__, "tunnel_interface_allow_https_variable", tunnel_interface_allow_https_variable)
        if tunnel_interface_allow_icmp is not None:
            pulumi.set(__self__, "tunnel_interface_allow_icmp", tunnel_interface_allow_icmp)
        if tunnel_interface_allow_icmp_variable is not None:
            pulumi.set(__self__, "tunnel_interface_allow_icmp_variable", tunnel_interface_allow_icmp_variable)
        if tunnel_interface_allow_netconf is not None:
            pulumi.set(__self__, "tunnel_interface_allow_netconf", tunnel_interface_allow_netconf)
        if tunnel_interface_allow_netconf_variable is not None:
            pulumi.set(__self__, "tunnel_interface_allow_netconf_variable", tunnel_interface_allow_netconf_variable)
        if tunnel_interface_allow_ntp is not None:
            pulumi.set(__self__, "tunnel_interface_allow_ntp", tunnel_interface_allow_ntp)
        if tunnel_interface_allow_ntp_variable is not None:
            pulumi.set(__self__, "tunnel_interface_allow_ntp_variable", tunnel_interface_allow_ntp_variable)
        if tunnel_interface_allow_ospf is not None:
            pulumi.set(__self__, "tunnel_interface_allow_ospf", tunnel_interface_allow_ospf)
        if tunnel_interface_allow_ospf_variable is not None:
            pulumi.set(__self__, "tunnel_interface_allow_ospf_variable", tunnel_interface_allow_ospf_variable)
        if tunnel_interface_allow_snmp is not None:
            pulumi.set(__self__, "tunnel_interface_allow_snmp", tunnel_interface_allow_snmp)
        if tunnel_interface_allow_snmp_variable is not None:
            pulumi.set(__self__, "tunnel_interface_allow_snmp_variable", tunnel_interface_allow_snmp_variable)
        if tunnel_interface_allow_ssh is not None:
            pulumi.set(__self__, "tunnel_interface_allow_ssh", tunnel_interface_allow_ssh)
        if tunnel_interface_allow_ssh_variable is not None:
            pulumi.set(__self__, "tunnel_interface_allow_ssh_variable", tunnel_interface_allow_ssh_variable)
        if tunnel_interface_allow_stun is not None:
            pulumi.set(__self__, "tunnel_interface_allow_stun", tunnel_interface_allow_stun)
        if tunnel_interface_allow_stun_variable is not None:
            pulumi.set(__self__, "tunnel_interface_allow_stun_variable", tunnel_interface_allow_stun_variable)
        if tunnel_interface_bind_loopback_tunnel is not None:
            pulumi.set(__self__, "tunnel_interface_bind_loopback_tunnel", tunnel_interface_bind_loopback_tunnel)
        if tunnel_interface_bind_loopback_tunnel_variable is not None:
            pulumi.set(__self__, "tunnel_interface_bind_loopback_tunnel_variable", tunnel_interface_bind_loopback_tunnel_variable)
        if tunnel_interface_border is not None:
            pulumi.set(__self__, "tunnel_interface_border", tunnel_interface_border)
        if tunnel_interface_border_variable is not None:
            pulumi.set(__self__, "tunnel_interface_border_variable", tunnel_interface_border_variable)
        if tunnel_interface_carrier is not None:
            pulumi.set(__self__, "tunnel_interface_carrier", tunnel_interface_carrier)
        if tunnel_interface_carrier_variable is not None:
            pulumi.set(__self__, "tunnel_interface_carrier_variable", tunnel_interface_carrier_variable)
        if tunnel_interface_clear_dont_fragment is not None:
            pulumi.set(__self__, "tunnel_interface_clear_dont_fragment", tunnel_interface_clear_dont_fragment)
        if tunnel_interface_clear_dont_fragment_variable is not None:
            pulumi.set(__self__, "tunnel_interface_clear_dont_fragment_variable", tunnel_interface_clear_dont_fragment_variable)
        if tunnel_interface_color is not None:
            pulumi.set(__self__, "tunnel_interface_color", tunnel_interface_color)
        if tunnel_interface_color_restrict is not None:
            pulumi.set(__self__, "tunnel_interface_color_restrict", tunnel_interface_color_restrict)
        if tunnel_interface_color_restrict_variable is not None:
            pulumi.set(__self__, "tunnel_interface_color_restrict_variable", tunnel_interface_color_restrict_variable)
        if tunnel_interface_color_variable is not None:
            pulumi.set(__self__, "tunnel_interface_color_variable", tunnel_interface_color_variable)
        if tunnel_interface_encapsulations is not None:
            pulumi.set(__self__, "tunnel_interface_encapsulations", tunnel_interface_encapsulations)
        if tunnel_interface_exclude_controller_group_list_variable is not None:
            pulumi.set(__self__, "tunnel_interface_exclude_controller_group_list_variable", tunnel_interface_exclude_controller_group_list_variable)
        if tunnel_interface_exclude_controller_group_lists is not None:
            pulumi.set(__self__, "tunnel_interface_exclude_controller_group_lists", tunnel_interface_exclude_controller_group_lists)
        if tunnel_interface_groups is not None:
            pulumi.set(__self__, "tunnel_interface_groups", tunnel_interface_groups)
        if tunnel_interface_groups_variable is not None:
            pulumi.set(__self__, "tunnel_interface_groups_variable", tunnel_interface_groups_variable)
        if tunnel_interface_hello_interval is not None:
            pulumi.set(__self__, "tunnel_interface_hello_interval", tunnel_interface_hello_interval)
        if tunnel_interface_hello_interval_variable is not None:
            pulumi.set(__self__, "tunnel_interface_hello_interval_variable", tunnel_interface_hello_interval_variable)
        if tunnel_interface_hello_tolerance is not None:
            pulumi.set(__self__, "tunnel_interface_hello_tolerance", tunnel_interface_hello_tolerance)
        if tunnel_interface_hello_tolerance_variable is not None:
            pulumi.set(__self__, "tunnel_interface_hello_tolerance_variable", tunnel_interface_hello_tolerance_variable)
        if tunnel_interface_last_resort_circuit is not None:
            pulumi.set(__self__, "tunnel_interface_last_resort_circuit", tunnel_interface_last_resort_circuit)
        if tunnel_interface_last_resort_circuit_variable is not None:
            pulumi.set(__self__, "tunnel_interface_last_resort_circuit_variable", tunnel_interface_last_resort_circuit_variable)
        if tunnel_interface_low_bandwidth_link is not None:
            pulumi.set(__self__, "tunnel_interface_low_bandwidth_link", tunnel_interface_low_bandwidth_link)
        if tunnel_interface_low_bandwidth_link_variable is not None:
            pulumi.set(__self__, "tunnel_interface_low_bandwidth_link_variable", tunnel_interface_low_bandwidth_link_variable)
        if tunnel_interface_max_control_connections is not None:
            pulumi.set(__self__, "tunnel_interface_max_control_connections", tunnel_interface_max_control_connections)
        if tunnel_interface_max_control_connections_variable is not None:
            pulumi.set(__self__, "tunnel_interface_max_control_connections_variable", tunnel_interface_max_control_connections_variable)
        if tunnel_interface_nat_refresh_interval is not None:
            pulumi.set(__self__, "tunnel_interface_nat_refresh_interval", tunnel_interface_nat_refresh_interval)
        if tunnel_interface_nat_refresh_interval_variable is not None:
            pulumi.set(__self__, "tunnel_interface_nat_refresh_interval_variable", tunnel_interface_nat_refresh_interval_variable)
        if tunnel_interface_network_broadcast is not None:
            pulumi.set(__self__, "tunnel_interface_network_broadcast", tunnel_interface_network_broadcast)
        if tunnel_interface_network_broadcast_variable is not None:
            pulumi.set(__self__, "tunnel_interface_network_broadcast_variable", tunnel_interface_network_broadcast_variable)
        if tunnel_interface_port_hop is not None:
            pulumi.set(__self__, "tunnel_interface_port_hop", tunnel_interface_port_hop)
        if tunnel_interface_port_hop_variable is not None:
            pulumi.set(__self__, "tunnel_interface_port_hop_variable", tunnel_interface_port_hop_variable)
        if tunnel_interface_tunnel_tcp_mss is not None:
            pulumi.set(__self__, "tunnel_interface_tunnel_tcp_mss", tunnel_interface_tunnel_tcp_mss)
        if tunnel_interface_tunnel_tcp_mss_variable is not None:
            pulumi.set(__self__, "tunnel_interface_tunnel_tcp_mss_variable", tunnel_interface_tunnel_tcp_mss_variable)
        if tunnel_interface_vbond_as_stun_server is not None:
            pulumi.set(__self__, "tunnel_interface_vbond_as_stun_server", tunnel_interface_vbond_as_stun_server)
        if tunnel_interface_vbond_as_stun_server_variable is not None:
            pulumi.set(__self__, "tunnel_interface_vbond_as_stun_server_variable", tunnel_interface_vbond_as_stun_server_variable)
        if tunnel_interface_vmanage_connection_preference is not None:
            pulumi.set(__self__, "tunnel_interface_vmanage_connection_preference", tunnel_interface_vmanage_connection_preference)
        if tunnel_interface_vmanage_connection_preference_variable is not None:
            pulumi.set(__self__, "tunnel_interface_vmanage_connection_preference_variable", tunnel_interface_vmanage_connection_preference_variable)
        if tunnel_qos_mode is not None:
            pulumi.set(__self__, "tunnel_qos_mode", tunnel_qos_mode)
        if tunnel_qos_mode_variable is not None:
            pulumi.set(__self__, "tunnel_qos_mode_variable", tunnel_qos_mode_variable)

    @property
    @pulumi.getter(name="featureProfileId")
    def feature_profile_id(self) -> pulumi.Input[builtins.str]:
        """
        Feature Profile ID
        """
        return pulumi.get(self, "feature_profile_id")

    @feature_profile_id.setter
    def feature_profile_id(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "feature_profile_id", value)

    @property
    @pulumi.getter(name="transportWanVpnFeatureId")
    def transport_wan_vpn_feature_id(self) -> pulumi.Input[builtins.str]:
        """
        Transport WAN VPN Feature ID
        """
        return pulumi.get(self, "transport_wan_vpn_feature_id")

    @transport_wan_vpn_feature_id.setter
    def transport_wan_vpn_feature_id(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "transport_wan_vpn_feature_id", value)

    @property
    @pulumi.getter(name="aclIpv4EgressFeatureId")
    def acl_ipv4_egress_feature_id(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "acl_ipv4_egress_feature_id")

    @acl_ipv4_egress_feature_id.setter
    def acl_ipv4_egress_feature_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "acl_ipv4_egress_feature_id", value)

    @property
    @pulumi.getter(name="aclIpv4IngressFeatureId")
    def acl_ipv4_ingress_feature_id(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "acl_ipv4_ingress_feature_id")

    @acl_ipv4_ingress_feature_id.setter
    def acl_ipv4_ingress_feature_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "acl_ipv4_ingress_feature_id", value)

    @property
    @pulumi.getter(name="aclIpv6EgressFeatureId")
    def acl_ipv6_egress_feature_id(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "acl_ipv6_egress_feature_id")

    @acl_ipv6_egress_feature_id.setter
    def acl_ipv6_egress_feature_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "acl_ipv6_egress_feature_id", value)

    @property
    @pulumi.getter(name="aclIpv6IngressFeatureId")
    def acl_ipv6_ingress_feature_id(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "acl_ipv6_ingress_feature_id")

    @acl_ipv6_ingress_feature_id.setter
    def acl_ipv6_ingress_feature_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "acl_ipv6_ingress_feature_id", value)

    @property
    @pulumi.getter
    def arps(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['TransportWanVpnInterfaceCellularFeatureArpArgs']]]]:
        """
        Configure ARP entries
        """
        return pulumi.get(self, "arps")

    @arps.setter
    def arps(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['TransportWanVpnInterfaceCellularFeatureArpArgs']]]]):
        pulumi.set(self, "arps", value)

    @property
    @pulumi.getter(name="bandwidthDownstream")
    def bandwidth_downstream(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
        """
        return pulumi.get(self, "bandwidth_downstream")

    @bandwidth_downstream.setter
    def bandwidth_downstream(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "bandwidth_downstream", value)

    @property
    @pulumi.getter(name="bandwidthDownstreamVariable")
    def bandwidth_downstream_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "bandwidth_downstream_variable")

    @bandwidth_downstream_variable.setter
    def bandwidth_downstream_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "bandwidth_downstream_variable", value)

    @property
    @pulumi.getter(name="bandwidthUpstream")
    def bandwidth_upstream(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
        """
        return pulumi.get(self, "bandwidth_upstream")

    @bandwidth_upstream.setter
    def bandwidth_upstream(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "bandwidth_upstream", value)

    @property
    @pulumi.getter(name="bandwidthUpstreamVariable")
    def bandwidth_upstream_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "bandwidth_upstream_variable")

    @bandwidth_upstream_variable.setter
    def bandwidth_upstream_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "bandwidth_upstream_variable", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The description of the Feature
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="interfaceDescription")
    def interface_description(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "interface_description")

    @interface_description.setter
    def interface_description(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "interface_description", value)

    @property
    @pulumi.getter(name="interfaceDescriptionVariable")
    def interface_description_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "interface_description_variable")

    @interface_description_variable.setter
    def interface_description_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "interface_description_variable", value)

    @property
    @pulumi.getter(name="interfaceMtu")
    def interface_mtu(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Interface MTU GigabitEthernet0 <1500..1518>, Other GigabitEthernet <1500..9216> in bytes - Range: `1500`-`9216` -
        Default value: `1500`
        """
        return pulumi.get(self, "interface_mtu")

    @interface_mtu.setter
    def interface_mtu(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "interface_mtu", value)

    @property
    @pulumi.getter(name="interfaceMtuVariable")
    def interface_mtu_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "interface_mtu_variable")

    @interface_mtu_variable.setter
    def interface_mtu_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "interface_mtu_variable", value)

    @property
    @pulumi.getter(name="interfaceName")
    def interface_name(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "interface_name")

    @interface_name.setter
    def interface_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "interface_name", value)

    @property
    @pulumi.getter(name="interfaceNameVariable")
    def interface_name_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "interface_name_variable")

    @interface_name_variable.setter
    def interface_name_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "interface_name_variable", value)

    @property
    @pulumi.getter(name="ipDirectedBroadcast")
    def ip_directed_broadcast(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        IP Directed-Broadcast - Default value: `false`
        """
        return pulumi.get(self, "ip_directed_broadcast")

    @ip_directed_broadcast.setter
    def ip_directed_broadcast(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "ip_directed_broadcast", value)

    @property
    @pulumi.getter(name="ipDirectedBroadcastVariable")
    def ip_directed_broadcast_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ip_directed_broadcast_variable")

    @ip_directed_broadcast_variable.setter
    def ip_directed_broadcast_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ip_directed_broadcast_variable", value)

    @property
    @pulumi.getter(name="ipMtu")
    def ip_mtu(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
        <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
        """
        return pulumi.get(self, "ip_mtu")

    @ip_mtu.setter
    def ip_mtu(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "ip_mtu", value)

    @property
    @pulumi.getter(name="ipMtuVariable")
    def ip_mtu_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ip_mtu_variable")

    @ip_mtu_variable.setter
    def ip_mtu_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ip_mtu_variable", value)

    @property
    @pulumi.getter(name="ipv4DhcpHelperVariable")
    def ipv4_dhcp_helper_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ipv4_dhcp_helper_variable")

    @ipv4_dhcp_helper_variable.setter
    def ipv4_dhcp_helper_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipv4_dhcp_helper_variable", value)

    @property
    @pulumi.getter(name="ipv4DhcpHelpers")
    def ipv4_dhcp_helpers(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]:
        """
        List of DHCP IPv4 helper addresses (min 1, max 8)
        """
        return pulumi.get(self, "ipv4_dhcp_helpers")

    @ipv4_dhcp_helpers.setter
    def ipv4_dhcp_helpers(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "ipv4_dhcp_helpers", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The name of the Feature
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="natIpv4")
    def nat_ipv4(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Network Address Translation on this interface - Default value: `false`
        """
        return pulumi.get(self, "nat_ipv4")

    @nat_ipv4.setter
    def nat_ipv4(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "nat_ipv4", value)

    @property
    @pulumi.getter(name="natIpv4Variable")
    def nat_ipv4_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "nat_ipv4_variable")

    @nat_ipv4_variable.setter
    def nat_ipv4_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "nat_ipv4_variable", value)

    @property
    @pulumi.getter(name="natTcpTimeout")
    def nat_tcp_timeout(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
        """
        return pulumi.get(self, "nat_tcp_timeout")

    @nat_tcp_timeout.setter
    def nat_tcp_timeout(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "nat_tcp_timeout", value)

    @property
    @pulumi.getter(name="natTcpTimeoutVariable")
    def nat_tcp_timeout_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "nat_tcp_timeout_variable")

    @nat_tcp_timeout_variable.setter
    def nat_tcp_timeout_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "nat_tcp_timeout_variable", value)

    @property
    @pulumi.getter(name="natUdpTimeout")
    def nat_udp_timeout(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
        """
        return pulumi.get(self, "nat_udp_timeout")

    @nat_udp_timeout.setter
    def nat_udp_timeout(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "nat_udp_timeout", value)

    @property
    @pulumi.getter(name="natUdpTimeoutVariable")
    def nat_udp_timeout_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "nat_udp_timeout_variable")

    @nat_udp_timeout_variable.setter
    def nat_udp_timeout_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "nat_udp_timeout_variable", value)

    @property
    @pulumi.getter(name="perTunnelQos")
    def per_tunnel_qos(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Per-tunnel Qos - Default value: `false`
        """
        return pulumi.get(self, "per_tunnel_qos")

    @per_tunnel_qos.setter
    def per_tunnel_qos(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "per_tunnel_qos", value)

    @property
    @pulumi.getter(name="perTunnelQosVariable")
    def per_tunnel_qos_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "per_tunnel_qos_variable")

    @per_tunnel_qos_variable.setter
    def per_tunnel_qos_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "per_tunnel_qos_variable", value)

    @property
    @pulumi.getter(name="qosAdaptive")
    def qos_adaptive(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Adaptive QoS - Default value: `false`
        """
        return pulumi.get(self, "qos_adaptive")

    @qos_adaptive.setter
    def qos_adaptive(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "qos_adaptive", value)

    @property
    @pulumi.getter(name="qosAdaptiveBandwidthDownstream")
    def qos_adaptive_bandwidth_downstream(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Shaping Rate Downstream - Default value: `false`
        """
        return pulumi.get(self, "qos_adaptive_bandwidth_downstream")

    @qos_adaptive_bandwidth_downstream.setter
    def qos_adaptive_bandwidth_downstream(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "qos_adaptive_bandwidth_downstream", value)

    @property
    @pulumi.getter(name="qosAdaptiveBandwidthUpstream")
    def qos_adaptive_bandwidth_upstream(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Shaping Rate Upstream - Default value: `false`
        """
        return pulumi.get(self, "qos_adaptive_bandwidth_upstream")

    @qos_adaptive_bandwidth_upstream.setter
    def qos_adaptive_bandwidth_upstream(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "qos_adaptive_bandwidth_upstream", value)

    @property
    @pulumi.getter(name="qosAdaptiveDefaultDownstream")
    def qos_adaptive_default_downstream(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Adaptive QoS default downstream bandwidth (kbps) - Range: `8`-`100000000`
        """
        return pulumi.get(self, "qos_adaptive_default_downstream")

    @qos_adaptive_default_downstream.setter
    def qos_adaptive_default_downstream(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "qos_adaptive_default_downstream", value)

    @property
    @pulumi.getter(name="qosAdaptiveDefaultDownstreamVariable")
    def qos_adaptive_default_downstream_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "qos_adaptive_default_downstream_variable")

    @qos_adaptive_default_downstream_variable.setter
    def qos_adaptive_default_downstream_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "qos_adaptive_default_downstream_variable", value)

    @property
    @pulumi.getter(name="qosAdaptiveDefaultUpstream")
    def qos_adaptive_default_upstream(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Adaptive QoS default upstream bandwidth (kbps) - Range: `8`-`100000000`
        """
        return pulumi.get(self, "qos_adaptive_default_upstream")

    @qos_adaptive_default_upstream.setter
    def qos_adaptive_default_upstream(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "qos_adaptive_default_upstream", value)

    @property
    @pulumi.getter(name="qosAdaptiveDefaultUpstreamVariable")
    def qos_adaptive_default_upstream_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "qos_adaptive_default_upstream_variable")

    @qos_adaptive_default_upstream_variable.setter
    def qos_adaptive_default_upstream_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "qos_adaptive_default_upstream_variable", value)

    @property
    @pulumi.getter(name="qosAdaptiveMaxDownstream")
    def qos_adaptive_max_downstream(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Downstream max bandwidth limit (kbps) - Range: `8`-`100000000`
        """
        return pulumi.get(self, "qos_adaptive_max_downstream")

    @qos_adaptive_max_downstream.setter
    def qos_adaptive_max_downstream(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "qos_adaptive_max_downstream", value)

    @property
    @pulumi.getter(name="qosAdaptiveMaxDownstreamVariable")
    def qos_adaptive_max_downstream_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "qos_adaptive_max_downstream_variable")

    @qos_adaptive_max_downstream_variable.setter
    def qos_adaptive_max_downstream_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "qos_adaptive_max_downstream_variable", value)

    @property
    @pulumi.getter(name="qosAdaptiveMaxUpstream")
    def qos_adaptive_max_upstream(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Upstream max bandwidth limit (kbps) - Range: `8`-`100000000`
        """
        return pulumi.get(self, "qos_adaptive_max_upstream")

    @qos_adaptive_max_upstream.setter
    def qos_adaptive_max_upstream(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "qos_adaptive_max_upstream", value)

    @property
    @pulumi.getter(name="qosAdaptiveMaxUpstreamVariable")
    def qos_adaptive_max_upstream_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "qos_adaptive_max_upstream_variable")

    @qos_adaptive_max_upstream_variable.setter
    def qos_adaptive_max_upstream_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "qos_adaptive_max_upstream_variable", value)

    @property
    @pulumi.getter(name="qosAdaptiveMinDownstream")
    def qos_adaptive_min_downstream(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Downstream min bandwidth limit (kbps) - Range: `8`-`100000000`
        """
        return pulumi.get(self, "qos_adaptive_min_downstream")

    @qos_adaptive_min_downstream.setter
    def qos_adaptive_min_downstream(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "qos_adaptive_min_downstream", value)

    @property
    @pulumi.getter(name="qosAdaptiveMinDownstreamVariable")
    def qos_adaptive_min_downstream_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "qos_adaptive_min_downstream_variable")

    @qos_adaptive_min_downstream_variable.setter
    def qos_adaptive_min_downstream_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "qos_adaptive_min_downstream_variable", value)

    @property
    @pulumi.getter(name="qosAdaptiveMinUpstream")
    def qos_adaptive_min_upstream(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Upstream min bandwidth limit (kbps) - Range: `8`-`100000000`
        """
        return pulumi.get(self, "qos_adaptive_min_upstream")

    @qos_adaptive_min_upstream.setter
    def qos_adaptive_min_upstream(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "qos_adaptive_min_upstream", value)

    @property
    @pulumi.getter(name="qosAdaptiveMinUpstreamVariable")
    def qos_adaptive_min_upstream_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "qos_adaptive_min_upstream_variable")

    @qos_adaptive_min_upstream_variable.setter
    def qos_adaptive_min_upstream_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "qos_adaptive_min_upstream_variable", value)

    @property
    @pulumi.getter(name="qosAdaptivePeriod")
    def qos_adaptive_period(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Adapt Period(Minutes) - Range: `1`-`720` - Default value: `15`
        """
        return pulumi.get(self, "qos_adaptive_period")

    @qos_adaptive_period.setter
    def qos_adaptive_period(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "qos_adaptive_period", value)

    @property
    @pulumi.getter(name="qosAdaptivePeriodVariable")
    def qos_adaptive_period_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "qos_adaptive_period_variable")

    @qos_adaptive_period_variable.setter
    def qos_adaptive_period_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "qos_adaptive_period_variable", value)

    @property
    @pulumi.getter(name="qosShapingRate")
    def qos_shaping_rate(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Shaping Rate (Kbps) - Range: `8`-`100000000`
        """
        return pulumi.get(self, "qos_shaping_rate")

    @qos_shaping_rate.setter
    def qos_shaping_rate(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "qos_shaping_rate", value)

    @property
    @pulumi.getter(name="qosShapingRateVariable")
    def qos_shaping_rate_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "qos_shaping_rate_variable")

    @qos_shaping_rate_variable.setter
    def qos_shaping_rate_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "qos_shaping_rate_variable", value)

    @property
    @pulumi.getter(name="serviceProvider")
    def service_provider(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Service Provider Name
        """
        return pulumi.get(self, "service_provider")

    @service_provider.setter
    def service_provider(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "service_provider", value)

    @property
    @pulumi.getter(name="serviceProviderVariable")
    def service_provider_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "service_provider_variable")

    @service_provider_variable.setter
    def service_provider_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "service_provider_variable", value)

    @property
    @pulumi.getter
    def shutdown(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        - Default value: `true`
        """
        return pulumi.get(self, "shutdown")

    @shutdown.setter
    def shutdown(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "shutdown", value)

    @property
    @pulumi.getter(name="shutdownVariable")
    def shutdown_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "shutdown_variable")

    @shutdown_variable.setter
    def shutdown_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "shutdown_variable", value)

    @property
    @pulumi.getter(name="tcpMss")
    def tcp_mss(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
        """
        return pulumi.get(self, "tcp_mss")

    @tcp_mss.setter
    def tcp_mss(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "tcp_mss", value)

    @property
    @pulumi.getter(name="tcpMssVariable")
    def tcp_mss_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tcp_mss_variable")

    @tcp_mss_variable.setter
    def tcp_mss_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tcp_mss_variable", value)

    @property
    @pulumi.getter(name="tlocExtension")
    def tloc_extension(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Extends a local TLOC to a remote node only for vpn 0
        """
        return pulumi.get(self, "tloc_extension")

    @tloc_extension.setter
    def tloc_extension(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tloc_extension", value)

    @property
    @pulumi.getter(name="tlocExtensionVariable")
    def tloc_extension_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tloc_extension_variable")

    @tloc_extension_variable.setter
    def tloc_extension_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tloc_extension_variable", value)

    @property
    @pulumi.getter
    def tracker(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Enable tracker for this interface
        """
        return pulumi.get(self, "tracker")

    @tracker.setter
    def tracker(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tracker", value)

    @property
    @pulumi.getter(name="trackerVariable")
    def tracker_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tracker_variable")

    @tracker_variable.setter
    def tracker_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tracker_variable", value)

    @property
    @pulumi.getter(name="tunnelBandwidthPercent")
    def tunnel_bandwidth_percent(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Tunnels Bandwidth Percent - Range: `1`-`100` - Default value: `50`
        """
        return pulumi.get(self, "tunnel_bandwidth_percent")

    @tunnel_bandwidth_percent.setter
    def tunnel_bandwidth_percent(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "tunnel_bandwidth_percent", value)

    @property
    @pulumi.getter(name="tunnelBandwidthPercentVariable")
    def tunnel_bandwidth_percent_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_bandwidth_percent_variable")

    @tunnel_bandwidth_percent_variable.setter
    def tunnel_bandwidth_percent_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_bandwidth_percent_variable", value)

    @property
    @pulumi.getter(name="tunnelInterface")
    def tunnel_interface(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Tunnel Interface on/off - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface")

    @tunnel_interface.setter
    def tunnel_interface(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowAll")
    def tunnel_interface_allow_all(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_allow_all")

    @tunnel_interface_allow_all.setter
    def tunnel_interface_allow_all(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_allow_all", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowAllVariable")
    def tunnel_interface_allow_all_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_all_variable")

    @tunnel_interface_allow_all_variable.setter
    def tunnel_interface_allow_all_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_allow_all_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowBfd")
    def tunnel_interface_allow_bfd(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Allow/Deny BFD - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_allow_bfd")

    @tunnel_interface_allow_bfd.setter
    def tunnel_interface_allow_bfd(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_allow_bfd", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowBfdVariable")
    def tunnel_interface_allow_bfd_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_bfd_variable")

    @tunnel_interface_allow_bfd_variable.setter
    def tunnel_interface_allow_bfd_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_allow_bfd_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowBgp")
    def tunnel_interface_allow_bgp(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Allow/deny BGP - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_allow_bgp")

    @tunnel_interface_allow_bgp.setter
    def tunnel_interface_allow_bgp(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_allow_bgp", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowBgpVariable")
    def tunnel_interface_allow_bgp_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_bgp_variable")

    @tunnel_interface_allow_bgp_variable.setter
    def tunnel_interface_allow_bgp_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_allow_bgp_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowDhcp")
    def tunnel_interface_allow_dhcp(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Allow/Deny DHCP - Default value: `true`
        """
        return pulumi.get(self, "tunnel_interface_allow_dhcp")

    @tunnel_interface_allow_dhcp.setter
    def tunnel_interface_allow_dhcp(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_allow_dhcp", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowDhcpVariable")
    def tunnel_interface_allow_dhcp_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_dhcp_variable")

    @tunnel_interface_allow_dhcp_variable.setter
    def tunnel_interface_allow_dhcp_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_allow_dhcp_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowDns")
    def tunnel_interface_allow_dns(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Allow/Deny DNS - Default value: `true`
        """
        return pulumi.get(self, "tunnel_interface_allow_dns")

    @tunnel_interface_allow_dns.setter
    def tunnel_interface_allow_dns(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_allow_dns", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowDnsVariable")
    def tunnel_interface_allow_dns_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_dns_variable")

    @tunnel_interface_allow_dns_variable.setter
    def tunnel_interface_allow_dns_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_allow_dns_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowHttps")
    def tunnel_interface_allow_https(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Allow/Deny HTTPS - Default value: `true`
        """
        return pulumi.get(self, "tunnel_interface_allow_https")

    @tunnel_interface_allow_https.setter
    def tunnel_interface_allow_https(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_allow_https", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowHttpsVariable")
    def tunnel_interface_allow_https_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_https_variable")

    @tunnel_interface_allow_https_variable.setter
    def tunnel_interface_allow_https_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_allow_https_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowIcmp")
    def tunnel_interface_allow_icmp(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Allow/Deny ICMP - Default value: `true`
        """
        return pulumi.get(self, "tunnel_interface_allow_icmp")

    @tunnel_interface_allow_icmp.setter
    def tunnel_interface_allow_icmp(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_allow_icmp", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowIcmpVariable")
    def tunnel_interface_allow_icmp_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_icmp_variable")

    @tunnel_interface_allow_icmp_variable.setter
    def tunnel_interface_allow_icmp_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_allow_icmp_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowNetconf")
    def tunnel_interface_allow_netconf(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Allow/Deny NETCONF - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_allow_netconf")

    @tunnel_interface_allow_netconf.setter
    def tunnel_interface_allow_netconf(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_allow_netconf", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowNetconfVariable")
    def tunnel_interface_allow_netconf_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_netconf_variable")

    @tunnel_interface_allow_netconf_variable.setter
    def tunnel_interface_allow_netconf_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_allow_netconf_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowNtp")
    def tunnel_interface_allow_ntp(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Allow/Deny NTP - Default value: `true`
        """
        return pulumi.get(self, "tunnel_interface_allow_ntp")

    @tunnel_interface_allow_ntp.setter
    def tunnel_interface_allow_ntp(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_allow_ntp", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowNtpVariable")
    def tunnel_interface_allow_ntp_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_ntp_variable")

    @tunnel_interface_allow_ntp_variable.setter
    def tunnel_interface_allow_ntp_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_allow_ntp_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowOspf")
    def tunnel_interface_allow_ospf(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Allow/Deny OSPF - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_allow_ospf")

    @tunnel_interface_allow_ospf.setter
    def tunnel_interface_allow_ospf(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_allow_ospf", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowOspfVariable")
    def tunnel_interface_allow_ospf_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_ospf_variable")

    @tunnel_interface_allow_ospf_variable.setter
    def tunnel_interface_allow_ospf_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_allow_ospf_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowSnmp")
    def tunnel_interface_allow_snmp(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Allow/Deny SNMP - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_allow_snmp")

    @tunnel_interface_allow_snmp.setter
    def tunnel_interface_allow_snmp(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_allow_snmp", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowSnmpVariable")
    def tunnel_interface_allow_snmp_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_snmp_variable")

    @tunnel_interface_allow_snmp_variable.setter
    def tunnel_interface_allow_snmp_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_allow_snmp_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowSsh")
    def tunnel_interface_allow_ssh(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Allow/Deny SSH - Default value: `true`
        """
        return pulumi.get(self, "tunnel_interface_allow_ssh")

    @tunnel_interface_allow_ssh.setter
    def tunnel_interface_allow_ssh(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_allow_ssh", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowSshVariable")
    def tunnel_interface_allow_ssh_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_ssh_variable")

    @tunnel_interface_allow_ssh_variable.setter
    def tunnel_interface_allow_ssh_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_allow_ssh_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowStun")
    def tunnel_interface_allow_stun(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Allow/Deny STUN - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_allow_stun")

    @tunnel_interface_allow_stun.setter
    def tunnel_interface_allow_stun(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_allow_stun", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowStunVariable")
    def tunnel_interface_allow_stun_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_stun_variable")

    @tunnel_interface_allow_stun_variable.setter
    def tunnel_interface_allow_stun_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_allow_stun_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceBindLoopbackTunnel")
    def tunnel_interface_bind_loopback_tunnel(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Bind loopback tunnel interface to a physical interface
        """
        return pulumi.get(self, "tunnel_interface_bind_loopback_tunnel")

    @tunnel_interface_bind_loopback_tunnel.setter
    def tunnel_interface_bind_loopback_tunnel(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_bind_loopback_tunnel", value)

    @property
    @pulumi.getter(name="tunnelInterfaceBindLoopbackTunnelVariable")
    def tunnel_interface_bind_loopback_tunnel_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_bind_loopback_tunnel_variable")

    @tunnel_interface_bind_loopback_tunnel_variable.setter
    def tunnel_interface_bind_loopback_tunnel_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_bind_loopback_tunnel_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceBorder")
    def tunnel_interface_border(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Set TLOC as border TLOC - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_border")

    @tunnel_interface_border.setter
    def tunnel_interface_border(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_border", value)

    @property
    @pulumi.getter(name="tunnelInterfaceBorderVariable")
    def tunnel_interface_border_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_border_variable")

    @tunnel_interface_border_variable.setter
    def tunnel_interface_border_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_border_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceCarrier")
    def tunnel_interface_carrier(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
        `carrier7`, `carrier8` - Default value: `default`
        """
        return pulumi.get(self, "tunnel_interface_carrier")

    @tunnel_interface_carrier.setter
    def tunnel_interface_carrier(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_carrier", value)

    @property
    @pulumi.getter(name="tunnelInterfaceCarrierVariable")
    def tunnel_interface_carrier_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_carrier_variable")

    @tunnel_interface_carrier_variable.setter
    def tunnel_interface_carrier_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_carrier_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceClearDontFragment")
    def tunnel_interface_clear_dont_fragment(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_clear_dont_fragment")

    @tunnel_interface_clear_dont_fragment.setter
    def tunnel_interface_clear_dont_fragment(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_clear_dont_fragment", value)

    @property
    @pulumi.getter(name="tunnelInterfaceClearDontFragmentVariable")
    def tunnel_interface_clear_dont_fragment_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_clear_dont_fragment_variable")

    @tunnel_interface_clear_dont_fragment_variable.setter
    def tunnel_interface_clear_dont_fragment_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_clear_dont_fragment_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceColor")
    def tunnel_interface_color(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Set color for TLOC - Choices: `default`, `mpls`, `metro ethernet`, `biz internet`, `public internet`, `lte`, `3g`,
        `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
        `private4`, `private5`, `private6` - Default value: `mpls`
        """
        return pulumi.get(self, "tunnel_interface_color")

    @tunnel_interface_color.setter
    def tunnel_interface_color(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_color", value)

    @property
    @pulumi.getter(name="tunnelInterfaceColorRestrict")
    def tunnel_interface_color_restrict(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Restrict this TLOC behavior - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_color_restrict")

    @tunnel_interface_color_restrict.setter
    def tunnel_interface_color_restrict(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_color_restrict", value)

    @property
    @pulumi.getter(name="tunnelInterfaceColorRestrictVariable")
    def tunnel_interface_color_restrict_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_color_restrict_variable")

    @tunnel_interface_color_restrict_variable.setter
    def tunnel_interface_color_restrict_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_color_restrict_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceColorVariable")
    def tunnel_interface_color_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_color_variable")

    @tunnel_interface_color_variable.setter
    def tunnel_interface_color_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_color_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceEncapsulations")
    def tunnel_interface_encapsulations(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['TransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulationArgs']]]]:
        """
        Encapsulation for TLOC
        """
        return pulumi.get(self, "tunnel_interface_encapsulations")

    @tunnel_interface_encapsulations.setter
    def tunnel_interface_encapsulations(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['TransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulationArgs']]]]):
        pulumi.set(self, "tunnel_interface_encapsulations", value)

    @property
    @pulumi.getter(name="tunnelInterfaceExcludeControllerGroupListVariable")
    def tunnel_interface_exclude_controller_group_list_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_exclude_controller_group_list_variable")

    @tunnel_interface_exclude_controller_group_list_variable.setter
    def tunnel_interface_exclude_controller_group_list_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_exclude_controller_group_list_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceExcludeControllerGroupLists")
    def tunnel_interface_exclude_controller_group_lists(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.int]]]]:
        """
        Exclude the following controller groups defined in this list.
        """
        return pulumi.get(self, "tunnel_interface_exclude_controller_group_lists")

    @tunnel_interface_exclude_controller_group_lists.setter
    def tunnel_interface_exclude_controller_group_lists(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.int]]]]):
        pulumi.set(self, "tunnel_interface_exclude_controller_group_lists", value)

    @property
    @pulumi.getter(name="tunnelInterfaceGroups")
    def tunnel_interface_groups(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        List of groups - Range: `1`-`4294967295`
        """
        return pulumi.get(self, "tunnel_interface_groups")

    @tunnel_interface_groups.setter
    def tunnel_interface_groups(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "tunnel_interface_groups", value)

    @property
    @pulumi.getter(name="tunnelInterfaceGroupsVariable")
    def tunnel_interface_groups_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_groups_variable")

    @tunnel_interface_groups_variable.setter
    def tunnel_interface_groups_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_groups_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceHelloInterval")
    def tunnel_interface_hello_interval(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
        """
        return pulumi.get(self, "tunnel_interface_hello_interval")

    @tunnel_interface_hello_interval.setter
    def tunnel_interface_hello_interval(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "tunnel_interface_hello_interval", value)

    @property
    @pulumi.getter(name="tunnelInterfaceHelloIntervalVariable")
    def tunnel_interface_hello_interval_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_hello_interval_variable")

    @tunnel_interface_hello_interval_variable.setter
    def tunnel_interface_hello_interval_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_hello_interval_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceHelloTolerance")
    def tunnel_interface_hello_tolerance(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
        """
        return pulumi.get(self, "tunnel_interface_hello_tolerance")

    @tunnel_interface_hello_tolerance.setter
    def tunnel_interface_hello_tolerance(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "tunnel_interface_hello_tolerance", value)

    @property
    @pulumi.getter(name="tunnelInterfaceHelloToleranceVariable")
    def tunnel_interface_hello_tolerance_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_hello_tolerance_variable")

    @tunnel_interface_hello_tolerance_variable.setter
    def tunnel_interface_hello_tolerance_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_hello_tolerance_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceLastResortCircuit")
    def tunnel_interface_last_resort_circuit(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Set TLOC as last resort - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_last_resort_circuit")

    @tunnel_interface_last_resort_circuit.setter
    def tunnel_interface_last_resort_circuit(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_last_resort_circuit", value)

    @property
    @pulumi.getter(name="tunnelInterfaceLastResortCircuitVariable")
    def tunnel_interface_last_resort_circuit_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_last_resort_circuit_variable")

    @tunnel_interface_last_resort_circuit_variable.setter
    def tunnel_interface_last_resort_circuit_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_last_resort_circuit_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceLowBandwidthLink")
    def tunnel_interface_low_bandwidth_link(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Set the interface as a low-bandwidth circuit - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_low_bandwidth_link")

    @tunnel_interface_low_bandwidth_link.setter
    def tunnel_interface_low_bandwidth_link(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_low_bandwidth_link", value)

    @property
    @pulumi.getter(name="tunnelInterfaceLowBandwidthLinkVariable")
    def tunnel_interface_low_bandwidth_link_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_low_bandwidth_link_variable")

    @tunnel_interface_low_bandwidth_link_variable.setter
    def tunnel_interface_low_bandwidth_link_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_low_bandwidth_link_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceMaxControlConnections")
    def tunnel_interface_max_control_connections(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Maximum Control Connections - Range: `0`-`100`
        """
        return pulumi.get(self, "tunnel_interface_max_control_connections")

    @tunnel_interface_max_control_connections.setter
    def tunnel_interface_max_control_connections(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "tunnel_interface_max_control_connections", value)

    @property
    @pulumi.getter(name="tunnelInterfaceMaxControlConnectionsVariable")
    def tunnel_interface_max_control_connections_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_max_control_connections_variable")

    @tunnel_interface_max_control_connections_variable.setter
    def tunnel_interface_max_control_connections_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_max_control_connections_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceNatRefreshInterval")
    def tunnel_interface_nat_refresh_interval(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
        """
        return pulumi.get(self, "tunnel_interface_nat_refresh_interval")

    @tunnel_interface_nat_refresh_interval.setter
    def tunnel_interface_nat_refresh_interval(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "tunnel_interface_nat_refresh_interval", value)

    @property
    @pulumi.getter(name="tunnelInterfaceNatRefreshIntervalVariable")
    def tunnel_interface_nat_refresh_interval_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_nat_refresh_interval_variable")

    @tunnel_interface_nat_refresh_interval_variable.setter
    def tunnel_interface_nat_refresh_interval_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_nat_refresh_interval_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceNetworkBroadcast")
    def tunnel_interface_network_broadcast(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Accept and respond to network-prefix-directed broadcasts - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_network_broadcast")

    @tunnel_interface_network_broadcast.setter
    def tunnel_interface_network_broadcast(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_network_broadcast", value)

    @property
    @pulumi.getter(name="tunnelInterfaceNetworkBroadcastVariable")
    def tunnel_interface_network_broadcast_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_network_broadcast_variable")

    @tunnel_interface_network_broadcast_variable.setter
    def tunnel_interface_network_broadcast_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_network_broadcast_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfacePortHop")
    def tunnel_interface_port_hop(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Disallow port hopping on the tunnel interface - Default value: `true`
        """
        return pulumi.get(self, "tunnel_interface_port_hop")

    @tunnel_interface_port_hop.setter
    def tunnel_interface_port_hop(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_port_hop", value)

    @property
    @pulumi.getter(name="tunnelInterfacePortHopVariable")
    def tunnel_interface_port_hop_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_port_hop_variable")

    @tunnel_interface_port_hop_variable.setter
    def tunnel_interface_port_hop_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_port_hop_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceTunnelTcpMss")
    def tunnel_interface_tunnel_tcp_mss(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
        """
        return pulumi.get(self, "tunnel_interface_tunnel_tcp_mss")

    @tunnel_interface_tunnel_tcp_mss.setter
    def tunnel_interface_tunnel_tcp_mss(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "tunnel_interface_tunnel_tcp_mss", value)

    @property
    @pulumi.getter(name="tunnelInterfaceTunnelTcpMssVariable")
    def tunnel_interface_tunnel_tcp_mss_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_tunnel_tcp_mss_variable")

    @tunnel_interface_tunnel_tcp_mss_variable.setter
    def tunnel_interface_tunnel_tcp_mss_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_tunnel_tcp_mss_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceVbondAsStunServer")
    def tunnel_interface_vbond_as_stun_server(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Put this wan interface in STUN mode only - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_vbond_as_stun_server")

    @tunnel_interface_vbond_as_stun_server.setter
    def tunnel_interface_vbond_as_stun_server(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_vbond_as_stun_server", value)

    @property
    @pulumi.getter(name="tunnelInterfaceVbondAsStunServerVariable")
    def tunnel_interface_vbond_as_stun_server_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_vbond_as_stun_server_variable")

    @tunnel_interface_vbond_as_stun_server_variable.setter
    def tunnel_interface_vbond_as_stun_server_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_vbond_as_stun_server_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceVmanageConnectionPreference")
    def tunnel_interface_vmanage_connection_preference(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
        """
        return pulumi.get(self, "tunnel_interface_vmanage_connection_preference")

    @tunnel_interface_vmanage_connection_preference.setter
    def tunnel_interface_vmanage_connection_preference(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "tunnel_interface_vmanage_connection_preference", value)

    @property
    @pulumi.getter(name="tunnelInterfaceVmanageConnectionPreferenceVariable")
    def tunnel_interface_vmanage_connection_preference_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_vmanage_connection_preference_variable")

    @tunnel_interface_vmanage_connection_preference_variable.setter
    def tunnel_interface_vmanage_connection_preference_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_vmanage_connection_preference_variable", value)

    @property
    @pulumi.getter(name="tunnelQosMode")
    def tunnel_qos_mode(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Set tunnel QoS mode - Choices: `hub`, `spoke`
        """
        return pulumi.get(self, "tunnel_qos_mode")

    @tunnel_qos_mode.setter
    def tunnel_qos_mode(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_qos_mode", value)

    @property
    @pulumi.getter(name="tunnelQosModeVariable")
    def tunnel_qos_mode_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_qos_mode_variable")

    @tunnel_qos_mode_variable.setter
    def tunnel_qos_mode_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_qos_mode_variable", value)


@pulumi.input_type
class _TransportWanVpnInterfaceCellularFeatureState:
    def __init__(__self__, *,
                 acl_ipv4_egress_feature_id: Optional[pulumi.Input[builtins.str]] = None,
                 acl_ipv4_ingress_feature_id: Optional[pulumi.Input[builtins.str]] = None,
                 acl_ipv6_egress_feature_id: Optional[pulumi.Input[builtins.str]] = None,
                 acl_ipv6_ingress_feature_id: Optional[pulumi.Input[builtins.str]] = None,
                 arps: Optional[pulumi.Input[Sequence[pulumi.Input['TransportWanVpnInterfaceCellularFeatureArpArgs']]]] = None,
                 bandwidth_downstream: Optional[pulumi.Input[builtins.int]] = None,
                 bandwidth_downstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 bandwidth_upstream: Optional[pulumi.Input[builtins.int]] = None,
                 bandwidth_upstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 feature_profile_id: Optional[pulumi.Input[builtins.str]] = None,
                 interface_description: Optional[pulumi.Input[builtins.str]] = None,
                 interface_description_variable: Optional[pulumi.Input[builtins.str]] = None,
                 interface_mtu: Optional[pulumi.Input[builtins.int]] = None,
                 interface_mtu_variable: Optional[pulumi.Input[builtins.str]] = None,
                 interface_name: Optional[pulumi.Input[builtins.str]] = None,
                 interface_name_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ip_directed_broadcast: Optional[pulumi.Input[builtins.bool]] = None,
                 ip_directed_broadcast_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ip_mtu: Optional[pulumi.Input[builtins.int]] = None,
                 ip_mtu_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipv4_dhcp_helper_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipv4_dhcp_helpers: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 nat_ipv4: Optional[pulumi.Input[builtins.bool]] = None,
                 nat_ipv4_variable: Optional[pulumi.Input[builtins.str]] = None,
                 nat_tcp_timeout: Optional[pulumi.Input[builtins.int]] = None,
                 nat_tcp_timeout_variable: Optional[pulumi.Input[builtins.str]] = None,
                 nat_udp_timeout: Optional[pulumi.Input[builtins.int]] = None,
                 nat_udp_timeout_variable: Optional[pulumi.Input[builtins.str]] = None,
                 per_tunnel_qos: Optional[pulumi.Input[builtins.bool]] = None,
                 per_tunnel_qos_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_adaptive: Optional[pulumi.Input[builtins.bool]] = None,
                 qos_adaptive_bandwidth_downstream: Optional[pulumi.Input[builtins.bool]] = None,
                 qos_adaptive_bandwidth_upstream: Optional[pulumi.Input[builtins.bool]] = None,
                 qos_adaptive_default_downstream: Optional[pulumi.Input[builtins.int]] = None,
                 qos_adaptive_default_downstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_adaptive_default_upstream: Optional[pulumi.Input[builtins.int]] = None,
                 qos_adaptive_default_upstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_adaptive_max_downstream: Optional[pulumi.Input[builtins.int]] = None,
                 qos_adaptive_max_downstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_adaptive_max_upstream: Optional[pulumi.Input[builtins.int]] = None,
                 qos_adaptive_max_upstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_adaptive_min_downstream: Optional[pulumi.Input[builtins.int]] = None,
                 qos_adaptive_min_downstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_adaptive_min_upstream: Optional[pulumi.Input[builtins.int]] = None,
                 qos_adaptive_min_upstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_adaptive_period: Optional[pulumi.Input[builtins.int]] = None,
                 qos_adaptive_period_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_shaping_rate: Optional[pulumi.Input[builtins.int]] = None,
                 qos_shaping_rate_variable: Optional[pulumi.Input[builtins.str]] = None,
                 service_provider: Optional[pulumi.Input[builtins.str]] = None,
                 service_provider_variable: Optional[pulumi.Input[builtins.str]] = None,
                 shutdown: Optional[pulumi.Input[builtins.bool]] = None,
                 shutdown_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tcp_mss: Optional[pulumi.Input[builtins.int]] = None,
                 tcp_mss_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tloc_extension: Optional[pulumi.Input[builtins.str]] = None,
                 tloc_extension_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tracker: Optional[pulumi.Input[builtins.str]] = None,
                 tracker_variable: Optional[pulumi.Input[builtins.str]] = None,
                 transport_wan_vpn_feature_id: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_bandwidth_percent: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_bandwidth_percent_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_all: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_all_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_bfd: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_bfd_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_bgp: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_bgp_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_dhcp: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_dhcp_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_dns: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_dns_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_https: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_https_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_icmp: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_icmp_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_netconf: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_netconf_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_ntp: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_ntp_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_ospf: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_ospf_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_snmp: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_snmp_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_ssh: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_ssh_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_stun: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_stun_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_bind_loopback_tunnel: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_bind_loopback_tunnel_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_border: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_border_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_carrier: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_carrier_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_clear_dont_fragment: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_clear_dont_fragment_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_color: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_color_restrict: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_color_restrict_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_color_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_encapsulations: Optional[pulumi.Input[Sequence[pulumi.Input['TransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulationArgs']]]] = None,
                 tunnel_interface_exclude_controller_group_list_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_exclude_controller_group_lists: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.int]]]] = None,
                 tunnel_interface_groups: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_interface_groups_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_hello_interval: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_interface_hello_interval_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_hello_tolerance: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_interface_hello_tolerance_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_last_resort_circuit: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_last_resort_circuit_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_low_bandwidth_link: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_low_bandwidth_link_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_max_control_connections: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_interface_max_control_connections_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_nat_refresh_interval: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_interface_nat_refresh_interval_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_network_broadcast: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_network_broadcast_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_port_hop: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_port_hop_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_tunnel_tcp_mss: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_interface_tunnel_tcp_mss_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_vbond_as_stun_server: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_vbond_as_stun_server_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_vmanage_connection_preference: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_interface_vmanage_connection_preference_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_qos_mode: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_qos_mode_variable: Optional[pulumi.Input[builtins.str]] = None,
                 version: Optional[pulumi.Input[builtins.int]] = None):
        """
        Input properties used for looking up and filtering TransportWanVpnInterfaceCellularFeature resources.
        :param pulumi.Input[Sequence[pulumi.Input['TransportWanVpnInterfaceCellularFeatureArpArgs']]] arps: Configure ARP entries
        :param pulumi.Input[builtins.int] bandwidth_downstream: Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
        :param pulumi.Input[builtins.str] bandwidth_downstream_variable: Variable name
        :param pulumi.Input[builtins.int] bandwidth_upstream: Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
        :param pulumi.Input[builtins.str] bandwidth_upstream_variable: Variable name
        :param pulumi.Input[builtins.str] description: The description of the Feature
        :param pulumi.Input[builtins.str] feature_profile_id: Feature Profile ID
        :param pulumi.Input[builtins.str] interface_description_variable: Variable name
        :param pulumi.Input[builtins.int] interface_mtu: Interface MTU GigabitEthernet0 <1500..1518>, Other GigabitEthernet <1500..9216> in bytes - Range: `1500`-`9216` -
               Default value: `1500`
        :param pulumi.Input[builtins.str] interface_mtu_variable: Variable name
        :param pulumi.Input[builtins.str] interface_name_variable: Variable name
        :param pulumi.Input[builtins.bool] ip_directed_broadcast: IP Directed-Broadcast - Default value: `false`
        :param pulumi.Input[builtins.str] ip_directed_broadcast_variable: Variable name
        :param pulumi.Input[builtins.int] ip_mtu: IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
               <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
        :param pulumi.Input[builtins.str] ip_mtu_variable: Variable name
        :param pulumi.Input[builtins.str] ipv4_dhcp_helper_variable: Variable name
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] ipv4_dhcp_helpers: List of DHCP IPv4 helper addresses (min 1, max 8)
        :param pulumi.Input[builtins.str] name: The name of the Feature
        :param pulumi.Input[builtins.bool] nat_ipv4: Network Address Translation on this interface - Default value: `false`
        :param pulumi.Input[builtins.str] nat_ipv4_variable: Variable name
        :param pulumi.Input[builtins.int] nat_tcp_timeout: Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
        :param pulumi.Input[builtins.str] nat_tcp_timeout_variable: Variable name
        :param pulumi.Input[builtins.int] nat_udp_timeout: Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
        :param pulumi.Input[builtins.str] nat_udp_timeout_variable: Variable name
        :param pulumi.Input[builtins.bool] per_tunnel_qos: Per-tunnel Qos - Default value: `false`
        :param pulumi.Input[builtins.str] per_tunnel_qos_variable: Variable name
        :param pulumi.Input[builtins.bool] qos_adaptive: Adaptive QoS - Default value: `false`
        :param pulumi.Input[builtins.bool] qos_adaptive_bandwidth_downstream: Shaping Rate Downstream - Default value: `false`
        :param pulumi.Input[builtins.bool] qos_adaptive_bandwidth_upstream: Shaping Rate Upstream - Default value: `false`
        :param pulumi.Input[builtins.int] qos_adaptive_default_downstream: Adaptive QoS default downstream bandwidth (kbps) - Range: `8`-`100000000`
        :param pulumi.Input[builtins.str] qos_adaptive_default_downstream_variable: Variable name
        :param pulumi.Input[builtins.int] qos_adaptive_default_upstream: Adaptive QoS default upstream bandwidth (kbps) - Range: `8`-`100000000`
        :param pulumi.Input[builtins.str] qos_adaptive_default_upstream_variable: Variable name
        :param pulumi.Input[builtins.int] qos_adaptive_max_downstream: Downstream max bandwidth limit (kbps) - Range: `8`-`100000000`
        :param pulumi.Input[builtins.str] qos_adaptive_max_downstream_variable: Variable name
        :param pulumi.Input[builtins.int] qos_adaptive_max_upstream: Upstream max bandwidth limit (kbps) - Range: `8`-`100000000`
        :param pulumi.Input[builtins.str] qos_adaptive_max_upstream_variable: Variable name
        :param pulumi.Input[builtins.int] qos_adaptive_min_downstream: Downstream min bandwidth limit (kbps) - Range: `8`-`100000000`
        :param pulumi.Input[builtins.str] qos_adaptive_min_downstream_variable: Variable name
        :param pulumi.Input[builtins.int] qos_adaptive_min_upstream: Upstream min bandwidth limit (kbps) - Range: `8`-`100000000`
        :param pulumi.Input[builtins.str] qos_adaptive_min_upstream_variable: Variable name
        :param pulumi.Input[builtins.int] qos_adaptive_period: Adapt Period(Minutes) - Range: `1`-`720` - Default value: `15`
        :param pulumi.Input[builtins.str] qos_adaptive_period_variable: Variable name
        :param pulumi.Input[builtins.int] qos_shaping_rate: Shaping Rate (Kbps) - Range: `8`-`100000000`
        :param pulumi.Input[builtins.str] qos_shaping_rate_variable: Variable name
        :param pulumi.Input[builtins.str] service_provider: Service Provider Name
        :param pulumi.Input[builtins.str] service_provider_variable: Variable name
        :param pulumi.Input[builtins.bool] shutdown: - Default value: `true`
        :param pulumi.Input[builtins.str] shutdown_variable: Variable name
        :param pulumi.Input[builtins.int] tcp_mss: TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
        :param pulumi.Input[builtins.str] tcp_mss_variable: Variable name
        :param pulumi.Input[builtins.str] tloc_extension: Extends a local TLOC to a remote node only for vpn 0
        :param pulumi.Input[builtins.str] tloc_extension_variable: Variable name
        :param pulumi.Input[builtins.str] tracker: Enable tracker for this interface
        :param pulumi.Input[builtins.str] tracker_variable: Variable name
        :param pulumi.Input[builtins.str] transport_wan_vpn_feature_id: Transport WAN VPN Feature ID
        :param pulumi.Input[builtins.int] tunnel_bandwidth_percent: Tunnels Bandwidth Percent - Range: `1`-`100` - Default value: `50`
        :param pulumi.Input[builtins.str] tunnel_bandwidth_percent_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface: Tunnel Interface on/off - Default value: `false`
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_all: Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_all_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_bfd: Allow/Deny BFD - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_bfd_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_bgp: Allow/deny BGP - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_bgp_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_dhcp: Allow/Deny DHCP - Default value: `true`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_dhcp_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_dns: Allow/Deny DNS - Default value: `true`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_dns_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_https: Allow/Deny HTTPS - Default value: `true`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_https_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_icmp: Allow/Deny ICMP - Default value: `true`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_icmp_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_netconf: Allow/Deny NETCONF - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_netconf_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_ntp: Allow/Deny NTP - Default value: `true`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_ntp_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_ospf: Allow/Deny OSPF - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_ospf_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_snmp: Allow/Deny SNMP - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_snmp_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_ssh: Allow/Deny SSH - Default value: `true`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_ssh_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_stun: Allow/Deny STUN - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_stun_variable: Variable name
        :param pulumi.Input[builtins.str] tunnel_interface_bind_loopback_tunnel: Bind loopback tunnel interface to a physical interface
        :param pulumi.Input[builtins.str] tunnel_interface_bind_loopback_tunnel_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_border: Set TLOC as border TLOC - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_border_variable: Variable name
        :param pulumi.Input[builtins.str] tunnel_interface_carrier: Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
               `carrier7`, `carrier8` - Default value: `default`
        :param pulumi.Input[builtins.str] tunnel_interface_carrier_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_clear_dont_fragment: Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_clear_dont_fragment_variable: Variable name
        :param pulumi.Input[builtins.str] tunnel_interface_color: Set color for TLOC - Choices: `default`, `mpls`, `metro ethernet`, `biz internet`, `public internet`, `lte`, `3g`,
               `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
               `private4`, `private5`, `private6` - Default value: `mpls`
        :param pulumi.Input[builtins.bool] tunnel_interface_color_restrict: Restrict this TLOC behavior - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_color_restrict_variable: Variable name
        :param pulumi.Input[builtins.str] tunnel_interface_color_variable: Variable name
        :param pulumi.Input[Sequence[pulumi.Input['TransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulationArgs']]] tunnel_interface_encapsulations: Encapsulation for TLOC
        :param pulumi.Input[builtins.str] tunnel_interface_exclude_controller_group_list_variable: Variable name
        :param pulumi.Input[Sequence[pulumi.Input[builtins.int]]] tunnel_interface_exclude_controller_group_lists: Exclude the following controller groups defined in this list.
        :param pulumi.Input[builtins.int] tunnel_interface_groups: List of groups - Range: `1`-`4294967295`
        :param pulumi.Input[builtins.str] tunnel_interface_groups_variable: Variable name
        :param pulumi.Input[builtins.int] tunnel_interface_hello_interval: Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
        :param pulumi.Input[builtins.str] tunnel_interface_hello_interval_variable: Variable name
        :param pulumi.Input[builtins.int] tunnel_interface_hello_tolerance: Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
        :param pulumi.Input[builtins.str] tunnel_interface_hello_tolerance_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_last_resort_circuit: Set TLOC as last resort - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_last_resort_circuit_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_low_bandwidth_link: Set the interface as a low-bandwidth circuit - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_low_bandwidth_link_variable: Variable name
        :param pulumi.Input[builtins.int] tunnel_interface_max_control_connections: Maximum Control Connections - Range: `0`-`100`
        :param pulumi.Input[builtins.str] tunnel_interface_max_control_connections_variable: Variable name
        :param pulumi.Input[builtins.int] tunnel_interface_nat_refresh_interval: Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
        :param pulumi.Input[builtins.str] tunnel_interface_nat_refresh_interval_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_network_broadcast: Accept and respond to network-prefix-directed broadcasts - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_network_broadcast_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_port_hop: Disallow port hopping on the tunnel interface - Default value: `true`
        :param pulumi.Input[builtins.str] tunnel_interface_port_hop_variable: Variable name
        :param pulumi.Input[builtins.int] tunnel_interface_tunnel_tcp_mss: Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
        :param pulumi.Input[builtins.str] tunnel_interface_tunnel_tcp_mss_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_vbond_as_stun_server: Put this wan interface in STUN mode only - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_vbond_as_stun_server_variable: Variable name
        :param pulumi.Input[builtins.int] tunnel_interface_vmanage_connection_preference: Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
        :param pulumi.Input[builtins.str] tunnel_interface_vmanage_connection_preference_variable: Variable name
        :param pulumi.Input[builtins.str] tunnel_qos_mode: Set tunnel QoS mode - Choices: `hub`, `spoke`
        :param pulumi.Input[builtins.str] tunnel_qos_mode_variable: Variable name
        :param pulumi.Input[builtins.int] version: The version of the Feature
        """
        if acl_ipv4_egress_feature_id is not None:
            pulumi.set(__self__, "acl_ipv4_egress_feature_id", acl_ipv4_egress_feature_id)
        if acl_ipv4_ingress_feature_id is not None:
            pulumi.set(__self__, "acl_ipv4_ingress_feature_id", acl_ipv4_ingress_feature_id)
        if acl_ipv6_egress_feature_id is not None:
            pulumi.set(__self__, "acl_ipv6_egress_feature_id", acl_ipv6_egress_feature_id)
        if acl_ipv6_ingress_feature_id is not None:
            pulumi.set(__self__, "acl_ipv6_ingress_feature_id", acl_ipv6_ingress_feature_id)
        if arps is not None:
            pulumi.set(__self__, "arps", arps)
        if bandwidth_downstream is not None:
            pulumi.set(__self__, "bandwidth_downstream", bandwidth_downstream)
        if bandwidth_downstream_variable is not None:
            pulumi.set(__self__, "bandwidth_downstream_variable", bandwidth_downstream_variable)
        if bandwidth_upstream is not None:
            pulumi.set(__self__, "bandwidth_upstream", bandwidth_upstream)
        if bandwidth_upstream_variable is not None:
            pulumi.set(__self__, "bandwidth_upstream_variable", bandwidth_upstream_variable)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if feature_profile_id is not None:
            pulumi.set(__self__, "feature_profile_id", feature_profile_id)
        if interface_description is not None:
            pulumi.set(__self__, "interface_description", interface_description)
        if interface_description_variable is not None:
            pulumi.set(__self__, "interface_description_variable", interface_description_variable)
        if interface_mtu is not None:
            pulumi.set(__self__, "interface_mtu", interface_mtu)
        if interface_mtu_variable is not None:
            pulumi.set(__self__, "interface_mtu_variable", interface_mtu_variable)
        if interface_name is not None:
            pulumi.set(__self__, "interface_name", interface_name)
        if interface_name_variable is not None:
            pulumi.set(__self__, "interface_name_variable", interface_name_variable)
        if ip_directed_broadcast is not None:
            pulumi.set(__self__, "ip_directed_broadcast", ip_directed_broadcast)
        if ip_directed_broadcast_variable is not None:
            pulumi.set(__self__, "ip_directed_broadcast_variable", ip_directed_broadcast_variable)
        if ip_mtu is not None:
            pulumi.set(__self__, "ip_mtu", ip_mtu)
        if ip_mtu_variable is not None:
            pulumi.set(__self__, "ip_mtu_variable", ip_mtu_variable)
        if ipv4_dhcp_helper_variable is not None:
            pulumi.set(__self__, "ipv4_dhcp_helper_variable", ipv4_dhcp_helper_variable)
        if ipv4_dhcp_helpers is not None:
            pulumi.set(__self__, "ipv4_dhcp_helpers", ipv4_dhcp_helpers)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if nat_ipv4 is not None:
            pulumi.set(__self__, "nat_ipv4", nat_ipv4)
        if nat_ipv4_variable is not None:
            pulumi.set(__self__, "nat_ipv4_variable", nat_ipv4_variable)
        if nat_tcp_timeout is not None:
            pulumi.set(__self__, "nat_tcp_timeout", nat_tcp_timeout)
        if nat_tcp_timeout_variable is not None:
            pulumi.set(__self__, "nat_tcp_timeout_variable", nat_tcp_timeout_variable)
        if nat_udp_timeout is not None:
            pulumi.set(__self__, "nat_udp_timeout", nat_udp_timeout)
        if nat_udp_timeout_variable is not None:
            pulumi.set(__self__, "nat_udp_timeout_variable", nat_udp_timeout_variable)
        if per_tunnel_qos is not None:
            pulumi.set(__self__, "per_tunnel_qos", per_tunnel_qos)
        if per_tunnel_qos_variable is not None:
            pulumi.set(__self__, "per_tunnel_qos_variable", per_tunnel_qos_variable)
        if qos_adaptive is not None:
            pulumi.set(__self__, "qos_adaptive", qos_adaptive)
        if qos_adaptive_bandwidth_downstream is not None:
            pulumi.set(__self__, "qos_adaptive_bandwidth_downstream", qos_adaptive_bandwidth_downstream)
        if qos_adaptive_bandwidth_upstream is not None:
            pulumi.set(__self__, "qos_adaptive_bandwidth_upstream", qos_adaptive_bandwidth_upstream)
        if qos_adaptive_default_downstream is not None:
            pulumi.set(__self__, "qos_adaptive_default_downstream", qos_adaptive_default_downstream)
        if qos_adaptive_default_downstream_variable is not None:
            pulumi.set(__self__, "qos_adaptive_default_downstream_variable", qos_adaptive_default_downstream_variable)
        if qos_adaptive_default_upstream is not None:
            pulumi.set(__self__, "qos_adaptive_default_upstream", qos_adaptive_default_upstream)
        if qos_adaptive_default_upstream_variable is not None:
            pulumi.set(__self__, "qos_adaptive_default_upstream_variable", qos_adaptive_default_upstream_variable)
        if qos_adaptive_max_downstream is not None:
            pulumi.set(__self__, "qos_adaptive_max_downstream", qos_adaptive_max_downstream)
        if qos_adaptive_max_downstream_variable is not None:
            pulumi.set(__self__, "qos_adaptive_max_downstream_variable", qos_adaptive_max_downstream_variable)
        if qos_adaptive_max_upstream is not None:
            pulumi.set(__self__, "qos_adaptive_max_upstream", qos_adaptive_max_upstream)
        if qos_adaptive_max_upstream_variable is not None:
            pulumi.set(__self__, "qos_adaptive_max_upstream_variable", qos_adaptive_max_upstream_variable)
        if qos_adaptive_min_downstream is not None:
            pulumi.set(__self__, "qos_adaptive_min_downstream", qos_adaptive_min_downstream)
        if qos_adaptive_min_downstream_variable is not None:
            pulumi.set(__self__, "qos_adaptive_min_downstream_variable", qos_adaptive_min_downstream_variable)
        if qos_adaptive_min_upstream is not None:
            pulumi.set(__self__, "qos_adaptive_min_upstream", qos_adaptive_min_upstream)
        if qos_adaptive_min_upstream_variable is not None:
            pulumi.set(__self__, "qos_adaptive_min_upstream_variable", qos_adaptive_min_upstream_variable)
        if qos_adaptive_period is not None:
            pulumi.set(__self__, "qos_adaptive_period", qos_adaptive_period)
        if qos_adaptive_period_variable is not None:
            pulumi.set(__self__, "qos_adaptive_period_variable", qos_adaptive_period_variable)
        if qos_shaping_rate is not None:
            pulumi.set(__self__, "qos_shaping_rate", qos_shaping_rate)
        if qos_shaping_rate_variable is not None:
            pulumi.set(__self__, "qos_shaping_rate_variable", qos_shaping_rate_variable)
        if service_provider is not None:
            pulumi.set(__self__, "service_provider", service_provider)
        if service_provider_variable is not None:
            pulumi.set(__self__, "service_provider_variable", service_provider_variable)
        if shutdown is not None:
            pulumi.set(__self__, "shutdown", shutdown)
        if shutdown_variable is not None:
            pulumi.set(__self__, "shutdown_variable", shutdown_variable)
        if tcp_mss is not None:
            pulumi.set(__self__, "tcp_mss", tcp_mss)
        if tcp_mss_variable is not None:
            pulumi.set(__self__, "tcp_mss_variable", tcp_mss_variable)
        if tloc_extension is not None:
            pulumi.set(__self__, "tloc_extension", tloc_extension)
        if tloc_extension_variable is not None:
            pulumi.set(__self__, "tloc_extension_variable", tloc_extension_variable)
        if tracker is not None:
            pulumi.set(__self__, "tracker", tracker)
        if tracker_variable is not None:
            pulumi.set(__self__, "tracker_variable", tracker_variable)
        if transport_wan_vpn_feature_id is not None:
            pulumi.set(__self__, "transport_wan_vpn_feature_id", transport_wan_vpn_feature_id)
        if tunnel_bandwidth_percent is not None:
            pulumi.set(__self__, "tunnel_bandwidth_percent", tunnel_bandwidth_percent)
        if tunnel_bandwidth_percent_variable is not None:
            pulumi.set(__self__, "tunnel_bandwidth_percent_variable", tunnel_bandwidth_percent_variable)
        if tunnel_interface is not None:
            pulumi.set(__self__, "tunnel_interface", tunnel_interface)
        if tunnel_interface_allow_all is not None:
            pulumi.set(__self__, "tunnel_interface_allow_all", tunnel_interface_allow_all)
        if tunnel_interface_allow_all_variable is not None:
            pulumi.set(__self__, "tunnel_interface_allow_all_variable", tunnel_interface_allow_all_variable)
        if tunnel_interface_allow_bfd is not None:
            pulumi.set(__self__, "tunnel_interface_allow_bfd", tunnel_interface_allow_bfd)
        if tunnel_interface_allow_bfd_variable is not None:
            pulumi.set(__self__, "tunnel_interface_allow_bfd_variable", tunnel_interface_allow_bfd_variable)
        if tunnel_interface_allow_bgp is not None:
            pulumi.set(__self__, "tunnel_interface_allow_bgp", tunnel_interface_allow_bgp)
        if tunnel_interface_allow_bgp_variable is not None:
            pulumi.set(__self__, "tunnel_interface_allow_bgp_variable", tunnel_interface_allow_bgp_variable)
        if tunnel_interface_allow_dhcp is not None:
            pulumi.set(__self__, "tunnel_interface_allow_dhcp", tunnel_interface_allow_dhcp)
        if tunnel_interface_allow_dhcp_variable is not None:
            pulumi.set(__self__, "tunnel_interface_allow_dhcp_variable", tunnel_interface_allow_dhcp_variable)
        if tunnel_interface_allow_dns is not None:
            pulumi.set(__self__, "tunnel_interface_allow_dns", tunnel_interface_allow_dns)
        if tunnel_interface_allow_dns_variable is not None:
            pulumi.set(__self__, "tunnel_interface_allow_dns_variable", tunnel_interface_allow_dns_variable)
        if tunnel_interface_allow_https is not None:
            pulumi.set(__self__, "tunnel_interface_allow_https", tunnel_interface_allow_https)
        if tunnel_interface_allow_https_variable is not None:
            pulumi.set(__self__, "tunnel_interface_allow_https_variable", tunnel_interface_allow_https_variable)
        if tunnel_interface_allow_icmp is not None:
            pulumi.set(__self__, "tunnel_interface_allow_icmp", tunnel_interface_allow_icmp)
        if tunnel_interface_allow_icmp_variable is not None:
            pulumi.set(__self__, "tunnel_interface_allow_icmp_variable", tunnel_interface_allow_icmp_variable)
        if tunnel_interface_allow_netconf is not None:
            pulumi.set(__self__, "tunnel_interface_allow_netconf", tunnel_interface_allow_netconf)
        if tunnel_interface_allow_netconf_variable is not None:
            pulumi.set(__self__, "tunnel_interface_allow_netconf_variable", tunnel_interface_allow_netconf_variable)
        if tunnel_interface_allow_ntp is not None:
            pulumi.set(__self__, "tunnel_interface_allow_ntp", tunnel_interface_allow_ntp)
        if tunnel_interface_allow_ntp_variable is not None:
            pulumi.set(__self__, "tunnel_interface_allow_ntp_variable", tunnel_interface_allow_ntp_variable)
        if tunnel_interface_allow_ospf is not None:
            pulumi.set(__self__, "tunnel_interface_allow_ospf", tunnel_interface_allow_ospf)
        if tunnel_interface_allow_ospf_variable is not None:
            pulumi.set(__self__, "tunnel_interface_allow_ospf_variable", tunnel_interface_allow_ospf_variable)
        if tunnel_interface_allow_snmp is not None:
            pulumi.set(__self__, "tunnel_interface_allow_snmp", tunnel_interface_allow_snmp)
        if tunnel_interface_allow_snmp_variable is not None:
            pulumi.set(__self__, "tunnel_interface_allow_snmp_variable", tunnel_interface_allow_snmp_variable)
        if tunnel_interface_allow_ssh is not None:
            pulumi.set(__self__, "tunnel_interface_allow_ssh", tunnel_interface_allow_ssh)
        if tunnel_interface_allow_ssh_variable is not None:
            pulumi.set(__self__, "tunnel_interface_allow_ssh_variable", tunnel_interface_allow_ssh_variable)
        if tunnel_interface_allow_stun is not None:
            pulumi.set(__self__, "tunnel_interface_allow_stun", tunnel_interface_allow_stun)
        if tunnel_interface_allow_stun_variable is not None:
            pulumi.set(__self__, "tunnel_interface_allow_stun_variable", tunnel_interface_allow_stun_variable)
        if tunnel_interface_bind_loopback_tunnel is not None:
            pulumi.set(__self__, "tunnel_interface_bind_loopback_tunnel", tunnel_interface_bind_loopback_tunnel)
        if tunnel_interface_bind_loopback_tunnel_variable is not None:
            pulumi.set(__self__, "tunnel_interface_bind_loopback_tunnel_variable", tunnel_interface_bind_loopback_tunnel_variable)
        if tunnel_interface_border is not None:
            pulumi.set(__self__, "tunnel_interface_border", tunnel_interface_border)
        if tunnel_interface_border_variable is not None:
            pulumi.set(__self__, "tunnel_interface_border_variable", tunnel_interface_border_variable)
        if tunnel_interface_carrier is not None:
            pulumi.set(__self__, "tunnel_interface_carrier", tunnel_interface_carrier)
        if tunnel_interface_carrier_variable is not None:
            pulumi.set(__self__, "tunnel_interface_carrier_variable", tunnel_interface_carrier_variable)
        if tunnel_interface_clear_dont_fragment is not None:
            pulumi.set(__self__, "tunnel_interface_clear_dont_fragment", tunnel_interface_clear_dont_fragment)
        if tunnel_interface_clear_dont_fragment_variable is not None:
            pulumi.set(__self__, "tunnel_interface_clear_dont_fragment_variable", tunnel_interface_clear_dont_fragment_variable)
        if tunnel_interface_color is not None:
            pulumi.set(__self__, "tunnel_interface_color", tunnel_interface_color)
        if tunnel_interface_color_restrict is not None:
            pulumi.set(__self__, "tunnel_interface_color_restrict", tunnel_interface_color_restrict)
        if tunnel_interface_color_restrict_variable is not None:
            pulumi.set(__self__, "tunnel_interface_color_restrict_variable", tunnel_interface_color_restrict_variable)
        if tunnel_interface_color_variable is not None:
            pulumi.set(__self__, "tunnel_interface_color_variable", tunnel_interface_color_variable)
        if tunnel_interface_encapsulations is not None:
            pulumi.set(__self__, "tunnel_interface_encapsulations", tunnel_interface_encapsulations)
        if tunnel_interface_exclude_controller_group_list_variable is not None:
            pulumi.set(__self__, "tunnel_interface_exclude_controller_group_list_variable", tunnel_interface_exclude_controller_group_list_variable)
        if tunnel_interface_exclude_controller_group_lists is not None:
            pulumi.set(__self__, "tunnel_interface_exclude_controller_group_lists", tunnel_interface_exclude_controller_group_lists)
        if tunnel_interface_groups is not None:
            pulumi.set(__self__, "tunnel_interface_groups", tunnel_interface_groups)
        if tunnel_interface_groups_variable is not None:
            pulumi.set(__self__, "tunnel_interface_groups_variable", tunnel_interface_groups_variable)
        if tunnel_interface_hello_interval is not None:
            pulumi.set(__self__, "tunnel_interface_hello_interval", tunnel_interface_hello_interval)
        if tunnel_interface_hello_interval_variable is not None:
            pulumi.set(__self__, "tunnel_interface_hello_interval_variable", tunnel_interface_hello_interval_variable)
        if tunnel_interface_hello_tolerance is not None:
            pulumi.set(__self__, "tunnel_interface_hello_tolerance", tunnel_interface_hello_tolerance)
        if tunnel_interface_hello_tolerance_variable is not None:
            pulumi.set(__self__, "tunnel_interface_hello_tolerance_variable", tunnel_interface_hello_tolerance_variable)
        if tunnel_interface_last_resort_circuit is not None:
            pulumi.set(__self__, "tunnel_interface_last_resort_circuit", tunnel_interface_last_resort_circuit)
        if tunnel_interface_last_resort_circuit_variable is not None:
            pulumi.set(__self__, "tunnel_interface_last_resort_circuit_variable", tunnel_interface_last_resort_circuit_variable)
        if tunnel_interface_low_bandwidth_link is not None:
            pulumi.set(__self__, "tunnel_interface_low_bandwidth_link", tunnel_interface_low_bandwidth_link)
        if tunnel_interface_low_bandwidth_link_variable is not None:
            pulumi.set(__self__, "tunnel_interface_low_bandwidth_link_variable", tunnel_interface_low_bandwidth_link_variable)
        if tunnel_interface_max_control_connections is not None:
            pulumi.set(__self__, "tunnel_interface_max_control_connections", tunnel_interface_max_control_connections)
        if tunnel_interface_max_control_connections_variable is not None:
            pulumi.set(__self__, "tunnel_interface_max_control_connections_variable", tunnel_interface_max_control_connections_variable)
        if tunnel_interface_nat_refresh_interval is not None:
            pulumi.set(__self__, "tunnel_interface_nat_refresh_interval", tunnel_interface_nat_refresh_interval)
        if tunnel_interface_nat_refresh_interval_variable is not None:
            pulumi.set(__self__, "tunnel_interface_nat_refresh_interval_variable", tunnel_interface_nat_refresh_interval_variable)
        if tunnel_interface_network_broadcast is not None:
            pulumi.set(__self__, "tunnel_interface_network_broadcast", tunnel_interface_network_broadcast)
        if tunnel_interface_network_broadcast_variable is not None:
            pulumi.set(__self__, "tunnel_interface_network_broadcast_variable", tunnel_interface_network_broadcast_variable)
        if tunnel_interface_port_hop is not None:
            pulumi.set(__self__, "tunnel_interface_port_hop", tunnel_interface_port_hop)
        if tunnel_interface_port_hop_variable is not None:
            pulumi.set(__self__, "tunnel_interface_port_hop_variable", tunnel_interface_port_hop_variable)
        if tunnel_interface_tunnel_tcp_mss is not None:
            pulumi.set(__self__, "tunnel_interface_tunnel_tcp_mss", tunnel_interface_tunnel_tcp_mss)
        if tunnel_interface_tunnel_tcp_mss_variable is not None:
            pulumi.set(__self__, "tunnel_interface_tunnel_tcp_mss_variable", tunnel_interface_tunnel_tcp_mss_variable)
        if tunnel_interface_vbond_as_stun_server is not None:
            pulumi.set(__self__, "tunnel_interface_vbond_as_stun_server", tunnel_interface_vbond_as_stun_server)
        if tunnel_interface_vbond_as_stun_server_variable is not None:
            pulumi.set(__self__, "tunnel_interface_vbond_as_stun_server_variable", tunnel_interface_vbond_as_stun_server_variable)
        if tunnel_interface_vmanage_connection_preference is not None:
            pulumi.set(__self__, "tunnel_interface_vmanage_connection_preference", tunnel_interface_vmanage_connection_preference)
        if tunnel_interface_vmanage_connection_preference_variable is not None:
            pulumi.set(__self__, "tunnel_interface_vmanage_connection_preference_variable", tunnel_interface_vmanage_connection_preference_variable)
        if tunnel_qos_mode is not None:
            pulumi.set(__self__, "tunnel_qos_mode", tunnel_qos_mode)
        if tunnel_qos_mode_variable is not None:
            pulumi.set(__self__, "tunnel_qos_mode_variable", tunnel_qos_mode_variable)
        if version is not None:
            pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter(name="aclIpv4EgressFeatureId")
    def acl_ipv4_egress_feature_id(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "acl_ipv4_egress_feature_id")

    @acl_ipv4_egress_feature_id.setter
    def acl_ipv4_egress_feature_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "acl_ipv4_egress_feature_id", value)

    @property
    @pulumi.getter(name="aclIpv4IngressFeatureId")
    def acl_ipv4_ingress_feature_id(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "acl_ipv4_ingress_feature_id")

    @acl_ipv4_ingress_feature_id.setter
    def acl_ipv4_ingress_feature_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "acl_ipv4_ingress_feature_id", value)

    @property
    @pulumi.getter(name="aclIpv6EgressFeatureId")
    def acl_ipv6_egress_feature_id(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "acl_ipv6_egress_feature_id")

    @acl_ipv6_egress_feature_id.setter
    def acl_ipv6_egress_feature_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "acl_ipv6_egress_feature_id", value)

    @property
    @pulumi.getter(name="aclIpv6IngressFeatureId")
    def acl_ipv6_ingress_feature_id(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "acl_ipv6_ingress_feature_id")

    @acl_ipv6_ingress_feature_id.setter
    def acl_ipv6_ingress_feature_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "acl_ipv6_ingress_feature_id", value)

    @property
    @pulumi.getter
    def arps(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['TransportWanVpnInterfaceCellularFeatureArpArgs']]]]:
        """
        Configure ARP entries
        """
        return pulumi.get(self, "arps")

    @arps.setter
    def arps(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['TransportWanVpnInterfaceCellularFeatureArpArgs']]]]):
        pulumi.set(self, "arps", value)

    @property
    @pulumi.getter(name="bandwidthDownstream")
    def bandwidth_downstream(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
        """
        return pulumi.get(self, "bandwidth_downstream")

    @bandwidth_downstream.setter
    def bandwidth_downstream(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "bandwidth_downstream", value)

    @property
    @pulumi.getter(name="bandwidthDownstreamVariable")
    def bandwidth_downstream_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "bandwidth_downstream_variable")

    @bandwidth_downstream_variable.setter
    def bandwidth_downstream_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "bandwidth_downstream_variable", value)

    @property
    @pulumi.getter(name="bandwidthUpstream")
    def bandwidth_upstream(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
        """
        return pulumi.get(self, "bandwidth_upstream")

    @bandwidth_upstream.setter
    def bandwidth_upstream(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "bandwidth_upstream", value)

    @property
    @pulumi.getter(name="bandwidthUpstreamVariable")
    def bandwidth_upstream_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "bandwidth_upstream_variable")

    @bandwidth_upstream_variable.setter
    def bandwidth_upstream_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "bandwidth_upstream_variable", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The description of the Feature
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="featureProfileId")
    def feature_profile_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Feature Profile ID
        """
        return pulumi.get(self, "feature_profile_id")

    @feature_profile_id.setter
    def feature_profile_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "feature_profile_id", value)

    @property
    @pulumi.getter(name="interfaceDescription")
    def interface_description(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "interface_description")

    @interface_description.setter
    def interface_description(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "interface_description", value)

    @property
    @pulumi.getter(name="interfaceDescriptionVariable")
    def interface_description_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "interface_description_variable")

    @interface_description_variable.setter
    def interface_description_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "interface_description_variable", value)

    @property
    @pulumi.getter(name="interfaceMtu")
    def interface_mtu(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Interface MTU GigabitEthernet0 <1500..1518>, Other GigabitEthernet <1500..9216> in bytes - Range: `1500`-`9216` -
        Default value: `1500`
        """
        return pulumi.get(self, "interface_mtu")

    @interface_mtu.setter
    def interface_mtu(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "interface_mtu", value)

    @property
    @pulumi.getter(name="interfaceMtuVariable")
    def interface_mtu_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "interface_mtu_variable")

    @interface_mtu_variable.setter
    def interface_mtu_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "interface_mtu_variable", value)

    @property
    @pulumi.getter(name="interfaceName")
    def interface_name(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "interface_name")

    @interface_name.setter
    def interface_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "interface_name", value)

    @property
    @pulumi.getter(name="interfaceNameVariable")
    def interface_name_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "interface_name_variable")

    @interface_name_variable.setter
    def interface_name_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "interface_name_variable", value)

    @property
    @pulumi.getter(name="ipDirectedBroadcast")
    def ip_directed_broadcast(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        IP Directed-Broadcast - Default value: `false`
        """
        return pulumi.get(self, "ip_directed_broadcast")

    @ip_directed_broadcast.setter
    def ip_directed_broadcast(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "ip_directed_broadcast", value)

    @property
    @pulumi.getter(name="ipDirectedBroadcastVariable")
    def ip_directed_broadcast_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ip_directed_broadcast_variable")

    @ip_directed_broadcast_variable.setter
    def ip_directed_broadcast_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ip_directed_broadcast_variable", value)

    @property
    @pulumi.getter(name="ipMtu")
    def ip_mtu(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
        <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
        """
        return pulumi.get(self, "ip_mtu")

    @ip_mtu.setter
    def ip_mtu(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "ip_mtu", value)

    @property
    @pulumi.getter(name="ipMtuVariable")
    def ip_mtu_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ip_mtu_variable")

    @ip_mtu_variable.setter
    def ip_mtu_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ip_mtu_variable", value)

    @property
    @pulumi.getter(name="ipv4DhcpHelperVariable")
    def ipv4_dhcp_helper_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ipv4_dhcp_helper_variable")

    @ipv4_dhcp_helper_variable.setter
    def ipv4_dhcp_helper_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipv4_dhcp_helper_variable", value)

    @property
    @pulumi.getter(name="ipv4DhcpHelpers")
    def ipv4_dhcp_helpers(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]:
        """
        List of DHCP IPv4 helper addresses (min 1, max 8)
        """
        return pulumi.get(self, "ipv4_dhcp_helpers")

    @ipv4_dhcp_helpers.setter
    def ipv4_dhcp_helpers(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "ipv4_dhcp_helpers", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The name of the Feature
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="natIpv4")
    def nat_ipv4(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Network Address Translation on this interface - Default value: `false`
        """
        return pulumi.get(self, "nat_ipv4")

    @nat_ipv4.setter
    def nat_ipv4(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "nat_ipv4", value)

    @property
    @pulumi.getter(name="natIpv4Variable")
    def nat_ipv4_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "nat_ipv4_variable")

    @nat_ipv4_variable.setter
    def nat_ipv4_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "nat_ipv4_variable", value)

    @property
    @pulumi.getter(name="natTcpTimeout")
    def nat_tcp_timeout(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
        """
        return pulumi.get(self, "nat_tcp_timeout")

    @nat_tcp_timeout.setter
    def nat_tcp_timeout(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "nat_tcp_timeout", value)

    @property
    @pulumi.getter(name="natTcpTimeoutVariable")
    def nat_tcp_timeout_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "nat_tcp_timeout_variable")

    @nat_tcp_timeout_variable.setter
    def nat_tcp_timeout_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "nat_tcp_timeout_variable", value)

    @property
    @pulumi.getter(name="natUdpTimeout")
    def nat_udp_timeout(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
        """
        return pulumi.get(self, "nat_udp_timeout")

    @nat_udp_timeout.setter
    def nat_udp_timeout(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "nat_udp_timeout", value)

    @property
    @pulumi.getter(name="natUdpTimeoutVariable")
    def nat_udp_timeout_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "nat_udp_timeout_variable")

    @nat_udp_timeout_variable.setter
    def nat_udp_timeout_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "nat_udp_timeout_variable", value)

    @property
    @pulumi.getter(name="perTunnelQos")
    def per_tunnel_qos(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Per-tunnel Qos - Default value: `false`
        """
        return pulumi.get(self, "per_tunnel_qos")

    @per_tunnel_qos.setter
    def per_tunnel_qos(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "per_tunnel_qos", value)

    @property
    @pulumi.getter(name="perTunnelQosVariable")
    def per_tunnel_qos_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "per_tunnel_qos_variable")

    @per_tunnel_qos_variable.setter
    def per_tunnel_qos_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "per_tunnel_qos_variable", value)

    @property
    @pulumi.getter(name="qosAdaptive")
    def qos_adaptive(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Adaptive QoS - Default value: `false`
        """
        return pulumi.get(self, "qos_adaptive")

    @qos_adaptive.setter
    def qos_adaptive(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "qos_adaptive", value)

    @property
    @pulumi.getter(name="qosAdaptiveBandwidthDownstream")
    def qos_adaptive_bandwidth_downstream(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Shaping Rate Downstream - Default value: `false`
        """
        return pulumi.get(self, "qos_adaptive_bandwidth_downstream")

    @qos_adaptive_bandwidth_downstream.setter
    def qos_adaptive_bandwidth_downstream(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "qos_adaptive_bandwidth_downstream", value)

    @property
    @pulumi.getter(name="qosAdaptiveBandwidthUpstream")
    def qos_adaptive_bandwidth_upstream(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Shaping Rate Upstream - Default value: `false`
        """
        return pulumi.get(self, "qos_adaptive_bandwidth_upstream")

    @qos_adaptive_bandwidth_upstream.setter
    def qos_adaptive_bandwidth_upstream(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "qos_adaptive_bandwidth_upstream", value)

    @property
    @pulumi.getter(name="qosAdaptiveDefaultDownstream")
    def qos_adaptive_default_downstream(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Adaptive QoS default downstream bandwidth (kbps) - Range: `8`-`100000000`
        """
        return pulumi.get(self, "qos_adaptive_default_downstream")

    @qos_adaptive_default_downstream.setter
    def qos_adaptive_default_downstream(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "qos_adaptive_default_downstream", value)

    @property
    @pulumi.getter(name="qosAdaptiveDefaultDownstreamVariable")
    def qos_adaptive_default_downstream_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "qos_adaptive_default_downstream_variable")

    @qos_adaptive_default_downstream_variable.setter
    def qos_adaptive_default_downstream_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "qos_adaptive_default_downstream_variable", value)

    @property
    @pulumi.getter(name="qosAdaptiveDefaultUpstream")
    def qos_adaptive_default_upstream(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Adaptive QoS default upstream bandwidth (kbps) - Range: `8`-`100000000`
        """
        return pulumi.get(self, "qos_adaptive_default_upstream")

    @qos_adaptive_default_upstream.setter
    def qos_adaptive_default_upstream(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "qos_adaptive_default_upstream", value)

    @property
    @pulumi.getter(name="qosAdaptiveDefaultUpstreamVariable")
    def qos_adaptive_default_upstream_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "qos_adaptive_default_upstream_variable")

    @qos_adaptive_default_upstream_variable.setter
    def qos_adaptive_default_upstream_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "qos_adaptive_default_upstream_variable", value)

    @property
    @pulumi.getter(name="qosAdaptiveMaxDownstream")
    def qos_adaptive_max_downstream(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Downstream max bandwidth limit (kbps) - Range: `8`-`100000000`
        """
        return pulumi.get(self, "qos_adaptive_max_downstream")

    @qos_adaptive_max_downstream.setter
    def qos_adaptive_max_downstream(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "qos_adaptive_max_downstream", value)

    @property
    @pulumi.getter(name="qosAdaptiveMaxDownstreamVariable")
    def qos_adaptive_max_downstream_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "qos_adaptive_max_downstream_variable")

    @qos_adaptive_max_downstream_variable.setter
    def qos_adaptive_max_downstream_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "qos_adaptive_max_downstream_variable", value)

    @property
    @pulumi.getter(name="qosAdaptiveMaxUpstream")
    def qos_adaptive_max_upstream(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Upstream max bandwidth limit (kbps) - Range: `8`-`100000000`
        """
        return pulumi.get(self, "qos_adaptive_max_upstream")

    @qos_adaptive_max_upstream.setter
    def qos_adaptive_max_upstream(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "qos_adaptive_max_upstream", value)

    @property
    @pulumi.getter(name="qosAdaptiveMaxUpstreamVariable")
    def qos_adaptive_max_upstream_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "qos_adaptive_max_upstream_variable")

    @qos_adaptive_max_upstream_variable.setter
    def qos_adaptive_max_upstream_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "qos_adaptive_max_upstream_variable", value)

    @property
    @pulumi.getter(name="qosAdaptiveMinDownstream")
    def qos_adaptive_min_downstream(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Downstream min bandwidth limit (kbps) - Range: `8`-`100000000`
        """
        return pulumi.get(self, "qos_adaptive_min_downstream")

    @qos_adaptive_min_downstream.setter
    def qos_adaptive_min_downstream(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "qos_adaptive_min_downstream", value)

    @property
    @pulumi.getter(name="qosAdaptiveMinDownstreamVariable")
    def qos_adaptive_min_downstream_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "qos_adaptive_min_downstream_variable")

    @qos_adaptive_min_downstream_variable.setter
    def qos_adaptive_min_downstream_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "qos_adaptive_min_downstream_variable", value)

    @property
    @pulumi.getter(name="qosAdaptiveMinUpstream")
    def qos_adaptive_min_upstream(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Upstream min bandwidth limit (kbps) - Range: `8`-`100000000`
        """
        return pulumi.get(self, "qos_adaptive_min_upstream")

    @qos_adaptive_min_upstream.setter
    def qos_adaptive_min_upstream(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "qos_adaptive_min_upstream", value)

    @property
    @pulumi.getter(name="qosAdaptiveMinUpstreamVariable")
    def qos_adaptive_min_upstream_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "qos_adaptive_min_upstream_variable")

    @qos_adaptive_min_upstream_variable.setter
    def qos_adaptive_min_upstream_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "qos_adaptive_min_upstream_variable", value)

    @property
    @pulumi.getter(name="qosAdaptivePeriod")
    def qos_adaptive_period(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Adapt Period(Minutes) - Range: `1`-`720` - Default value: `15`
        """
        return pulumi.get(self, "qos_adaptive_period")

    @qos_adaptive_period.setter
    def qos_adaptive_period(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "qos_adaptive_period", value)

    @property
    @pulumi.getter(name="qosAdaptivePeriodVariable")
    def qos_adaptive_period_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "qos_adaptive_period_variable")

    @qos_adaptive_period_variable.setter
    def qos_adaptive_period_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "qos_adaptive_period_variable", value)

    @property
    @pulumi.getter(name="qosShapingRate")
    def qos_shaping_rate(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Shaping Rate (Kbps) - Range: `8`-`100000000`
        """
        return pulumi.get(self, "qos_shaping_rate")

    @qos_shaping_rate.setter
    def qos_shaping_rate(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "qos_shaping_rate", value)

    @property
    @pulumi.getter(name="qosShapingRateVariable")
    def qos_shaping_rate_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "qos_shaping_rate_variable")

    @qos_shaping_rate_variable.setter
    def qos_shaping_rate_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "qos_shaping_rate_variable", value)

    @property
    @pulumi.getter(name="serviceProvider")
    def service_provider(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Service Provider Name
        """
        return pulumi.get(self, "service_provider")

    @service_provider.setter
    def service_provider(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "service_provider", value)

    @property
    @pulumi.getter(name="serviceProviderVariable")
    def service_provider_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "service_provider_variable")

    @service_provider_variable.setter
    def service_provider_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "service_provider_variable", value)

    @property
    @pulumi.getter
    def shutdown(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        - Default value: `true`
        """
        return pulumi.get(self, "shutdown")

    @shutdown.setter
    def shutdown(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "shutdown", value)

    @property
    @pulumi.getter(name="shutdownVariable")
    def shutdown_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "shutdown_variable")

    @shutdown_variable.setter
    def shutdown_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "shutdown_variable", value)

    @property
    @pulumi.getter(name="tcpMss")
    def tcp_mss(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
        """
        return pulumi.get(self, "tcp_mss")

    @tcp_mss.setter
    def tcp_mss(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "tcp_mss", value)

    @property
    @pulumi.getter(name="tcpMssVariable")
    def tcp_mss_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tcp_mss_variable")

    @tcp_mss_variable.setter
    def tcp_mss_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tcp_mss_variable", value)

    @property
    @pulumi.getter(name="tlocExtension")
    def tloc_extension(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Extends a local TLOC to a remote node only for vpn 0
        """
        return pulumi.get(self, "tloc_extension")

    @tloc_extension.setter
    def tloc_extension(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tloc_extension", value)

    @property
    @pulumi.getter(name="tlocExtensionVariable")
    def tloc_extension_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tloc_extension_variable")

    @tloc_extension_variable.setter
    def tloc_extension_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tloc_extension_variable", value)

    @property
    @pulumi.getter
    def tracker(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Enable tracker for this interface
        """
        return pulumi.get(self, "tracker")

    @tracker.setter
    def tracker(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tracker", value)

    @property
    @pulumi.getter(name="trackerVariable")
    def tracker_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tracker_variable")

    @tracker_variable.setter
    def tracker_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tracker_variable", value)

    @property
    @pulumi.getter(name="transportWanVpnFeatureId")
    def transport_wan_vpn_feature_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Transport WAN VPN Feature ID
        """
        return pulumi.get(self, "transport_wan_vpn_feature_id")

    @transport_wan_vpn_feature_id.setter
    def transport_wan_vpn_feature_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "transport_wan_vpn_feature_id", value)

    @property
    @pulumi.getter(name="tunnelBandwidthPercent")
    def tunnel_bandwidth_percent(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Tunnels Bandwidth Percent - Range: `1`-`100` - Default value: `50`
        """
        return pulumi.get(self, "tunnel_bandwidth_percent")

    @tunnel_bandwidth_percent.setter
    def tunnel_bandwidth_percent(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "tunnel_bandwidth_percent", value)

    @property
    @pulumi.getter(name="tunnelBandwidthPercentVariable")
    def tunnel_bandwidth_percent_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_bandwidth_percent_variable")

    @tunnel_bandwidth_percent_variable.setter
    def tunnel_bandwidth_percent_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_bandwidth_percent_variable", value)

    @property
    @pulumi.getter(name="tunnelInterface")
    def tunnel_interface(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Tunnel Interface on/off - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface")

    @tunnel_interface.setter
    def tunnel_interface(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowAll")
    def tunnel_interface_allow_all(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_allow_all")

    @tunnel_interface_allow_all.setter
    def tunnel_interface_allow_all(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_allow_all", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowAllVariable")
    def tunnel_interface_allow_all_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_all_variable")

    @tunnel_interface_allow_all_variable.setter
    def tunnel_interface_allow_all_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_allow_all_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowBfd")
    def tunnel_interface_allow_bfd(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Allow/Deny BFD - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_allow_bfd")

    @tunnel_interface_allow_bfd.setter
    def tunnel_interface_allow_bfd(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_allow_bfd", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowBfdVariable")
    def tunnel_interface_allow_bfd_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_bfd_variable")

    @tunnel_interface_allow_bfd_variable.setter
    def tunnel_interface_allow_bfd_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_allow_bfd_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowBgp")
    def tunnel_interface_allow_bgp(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Allow/deny BGP - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_allow_bgp")

    @tunnel_interface_allow_bgp.setter
    def tunnel_interface_allow_bgp(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_allow_bgp", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowBgpVariable")
    def tunnel_interface_allow_bgp_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_bgp_variable")

    @tunnel_interface_allow_bgp_variable.setter
    def tunnel_interface_allow_bgp_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_allow_bgp_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowDhcp")
    def tunnel_interface_allow_dhcp(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Allow/Deny DHCP - Default value: `true`
        """
        return pulumi.get(self, "tunnel_interface_allow_dhcp")

    @tunnel_interface_allow_dhcp.setter
    def tunnel_interface_allow_dhcp(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_allow_dhcp", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowDhcpVariable")
    def tunnel_interface_allow_dhcp_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_dhcp_variable")

    @tunnel_interface_allow_dhcp_variable.setter
    def tunnel_interface_allow_dhcp_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_allow_dhcp_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowDns")
    def tunnel_interface_allow_dns(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Allow/Deny DNS - Default value: `true`
        """
        return pulumi.get(self, "tunnel_interface_allow_dns")

    @tunnel_interface_allow_dns.setter
    def tunnel_interface_allow_dns(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_allow_dns", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowDnsVariable")
    def tunnel_interface_allow_dns_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_dns_variable")

    @tunnel_interface_allow_dns_variable.setter
    def tunnel_interface_allow_dns_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_allow_dns_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowHttps")
    def tunnel_interface_allow_https(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Allow/Deny HTTPS - Default value: `true`
        """
        return pulumi.get(self, "tunnel_interface_allow_https")

    @tunnel_interface_allow_https.setter
    def tunnel_interface_allow_https(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_allow_https", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowHttpsVariable")
    def tunnel_interface_allow_https_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_https_variable")

    @tunnel_interface_allow_https_variable.setter
    def tunnel_interface_allow_https_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_allow_https_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowIcmp")
    def tunnel_interface_allow_icmp(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Allow/Deny ICMP - Default value: `true`
        """
        return pulumi.get(self, "tunnel_interface_allow_icmp")

    @tunnel_interface_allow_icmp.setter
    def tunnel_interface_allow_icmp(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_allow_icmp", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowIcmpVariable")
    def tunnel_interface_allow_icmp_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_icmp_variable")

    @tunnel_interface_allow_icmp_variable.setter
    def tunnel_interface_allow_icmp_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_allow_icmp_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowNetconf")
    def tunnel_interface_allow_netconf(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Allow/Deny NETCONF - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_allow_netconf")

    @tunnel_interface_allow_netconf.setter
    def tunnel_interface_allow_netconf(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_allow_netconf", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowNetconfVariable")
    def tunnel_interface_allow_netconf_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_netconf_variable")

    @tunnel_interface_allow_netconf_variable.setter
    def tunnel_interface_allow_netconf_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_allow_netconf_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowNtp")
    def tunnel_interface_allow_ntp(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Allow/Deny NTP - Default value: `true`
        """
        return pulumi.get(self, "tunnel_interface_allow_ntp")

    @tunnel_interface_allow_ntp.setter
    def tunnel_interface_allow_ntp(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_allow_ntp", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowNtpVariable")
    def tunnel_interface_allow_ntp_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_ntp_variable")

    @tunnel_interface_allow_ntp_variable.setter
    def tunnel_interface_allow_ntp_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_allow_ntp_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowOspf")
    def tunnel_interface_allow_ospf(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Allow/Deny OSPF - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_allow_ospf")

    @tunnel_interface_allow_ospf.setter
    def tunnel_interface_allow_ospf(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_allow_ospf", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowOspfVariable")
    def tunnel_interface_allow_ospf_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_ospf_variable")

    @tunnel_interface_allow_ospf_variable.setter
    def tunnel_interface_allow_ospf_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_allow_ospf_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowSnmp")
    def tunnel_interface_allow_snmp(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Allow/Deny SNMP - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_allow_snmp")

    @tunnel_interface_allow_snmp.setter
    def tunnel_interface_allow_snmp(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_allow_snmp", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowSnmpVariable")
    def tunnel_interface_allow_snmp_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_snmp_variable")

    @tunnel_interface_allow_snmp_variable.setter
    def tunnel_interface_allow_snmp_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_allow_snmp_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowSsh")
    def tunnel_interface_allow_ssh(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Allow/Deny SSH - Default value: `true`
        """
        return pulumi.get(self, "tunnel_interface_allow_ssh")

    @tunnel_interface_allow_ssh.setter
    def tunnel_interface_allow_ssh(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_allow_ssh", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowSshVariable")
    def tunnel_interface_allow_ssh_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_ssh_variable")

    @tunnel_interface_allow_ssh_variable.setter
    def tunnel_interface_allow_ssh_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_allow_ssh_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowStun")
    def tunnel_interface_allow_stun(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Allow/Deny STUN - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_allow_stun")

    @tunnel_interface_allow_stun.setter
    def tunnel_interface_allow_stun(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_allow_stun", value)

    @property
    @pulumi.getter(name="tunnelInterfaceAllowStunVariable")
    def tunnel_interface_allow_stun_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_stun_variable")

    @tunnel_interface_allow_stun_variable.setter
    def tunnel_interface_allow_stun_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_allow_stun_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceBindLoopbackTunnel")
    def tunnel_interface_bind_loopback_tunnel(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Bind loopback tunnel interface to a physical interface
        """
        return pulumi.get(self, "tunnel_interface_bind_loopback_tunnel")

    @tunnel_interface_bind_loopback_tunnel.setter
    def tunnel_interface_bind_loopback_tunnel(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_bind_loopback_tunnel", value)

    @property
    @pulumi.getter(name="tunnelInterfaceBindLoopbackTunnelVariable")
    def tunnel_interface_bind_loopback_tunnel_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_bind_loopback_tunnel_variable")

    @tunnel_interface_bind_loopback_tunnel_variable.setter
    def tunnel_interface_bind_loopback_tunnel_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_bind_loopback_tunnel_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceBorder")
    def tunnel_interface_border(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Set TLOC as border TLOC - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_border")

    @tunnel_interface_border.setter
    def tunnel_interface_border(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_border", value)

    @property
    @pulumi.getter(name="tunnelInterfaceBorderVariable")
    def tunnel_interface_border_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_border_variable")

    @tunnel_interface_border_variable.setter
    def tunnel_interface_border_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_border_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceCarrier")
    def tunnel_interface_carrier(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
        `carrier7`, `carrier8` - Default value: `default`
        """
        return pulumi.get(self, "tunnel_interface_carrier")

    @tunnel_interface_carrier.setter
    def tunnel_interface_carrier(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_carrier", value)

    @property
    @pulumi.getter(name="tunnelInterfaceCarrierVariable")
    def tunnel_interface_carrier_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_carrier_variable")

    @tunnel_interface_carrier_variable.setter
    def tunnel_interface_carrier_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_carrier_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceClearDontFragment")
    def tunnel_interface_clear_dont_fragment(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_clear_dont_fragment")

    @tunnel_interface_clear_dont_fragment.setter
    def tunnel_interface_clear_dont_fragment(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_clear_dont_fragment", value)

    @property
    @pulumi.getter(name="tunnelInterfaceClearDontFragmentVariable")
    def tunnel_interface_clear_dont_fragment_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_clear_dont_fragment_variable")

    @tunnel_interface_clear_dont_fragment_variable.setter
    def tunnel_interface_clear_dont_fragment_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_clear_dont_fragment_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceColor")
    def tunnel_interface_color(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Set color for TLOC - Choices: `default`, `mpls`, `metro ethernet`, `biz internet`, `public internet`, `lte`, `3g`,
        `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
        `private4`, `private5`, `private6` - Default value: `mpls`
        """
        return pulumi.get(self, "tunnel_interface_color")

    @tunnel_interface_color.setter
    def tunnel_interface_color(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_color", value)

    @property
    @pulumi.getter(name="tunnelInterfaceColorRestrict")
    def tunnel_interface_color_restrict(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Restrict this TLOC behavior - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_color_restrict")

    @tunnel_interface_color_restrict.setter
    def tunnel_interface_color_restrict(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_color_restrict", value)

    @property
    @pulumi.getter(name="tunnelInterfaceColorRestrictVariable")
    def tunnel_interface_color_restrict_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_color_restrict_variable")

    @tunnel_interface_color_restrict_variable.setter
    def tunnel_interface_color_restrict_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_color_restrict_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceColorVariable")
    def tunnel_interface_color_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_color_variable")

    @tunnel_interface_color_variable.setter
    def tunnel_interface_color_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_color_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceEncapsulations")
    def tunnel_interface_encapsulations(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['TransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulationArgs']]]]:
        """
        Encapsulation for TLOC
        """
        return pulumi.get(self, "tunnel_interface_encapsulations")

    @tunnel_interface_encapsulations.setter
    def tunnel_interface_encapsulations(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['TransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulationArgs']]]]):
        pulumi.set(self, "tunnel_interface_encapsulations", value)

    @property
    @pulumi.getter(name="tunnelInterfaceExcludeControllerGroupListVariable")
    def tunnel_interface_exclude_controller_group_list_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_exclude_controller_group_list_variable")

    @tunnel_interface_exclude_controller_group_list_variable.setter
    def tunnel_interface_exclude_controller_group_list_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_exclude_controller_group_list_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceExcludeControllerGroupLists")
    def tunnel_interface_exclude_controller_group_lists(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.int]]]]:
        """
        Exclude the following controller groups defined in this list.
        """
        return pulumi.get(self, "tunnel_interface_exclude_controller_group_lists")

    @tunnel_interface_exclude_controller_group_lists.setter
    def tunnel_interface_exclude_controller_group_lists(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.int]]]]):
        pulumi.set(self, "tunnel_interface_exclude_controller_group_lists", value)

    @property
    @pulumi.getter(name="tunnelInterfaceGroups")
    def tunnel_interface_groups(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        List of groups - Range: `1`-`4294967295`
        """
        return pulumi.get(self, "tunnel_interface_groups")

    @tunnel_interface_groups.setter
    def tunnel_interface_groups(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "tunnel_interface_groups", value)

    @property
    @pulumi.getter(name="tunnelInterfaceGroupsVariable")
    def tunnel_interface_groups_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_groups_variable")

    @tunnel_interface_groups_variable.setter
    def tunnel_interface_groups_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_groups_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceHelloInterval")
    def tunnel_interface_hello_interval(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
        """
        return pulumi.get(self, "tunnel_interface_hello_interval")

    @tunnel_interface_hello_interval.setter
    def tunnel_interface_hello_interval(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "tunnel_interface_hello_interval", value)

    @property
    @pulumi.getter(name="tunnelInterfaceHelloIntervalVariable")
    def tunnel_interface_hello_interval_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_hello_interval_variable")

    @tunnel_interface_hello_interval_variable.setter
    def tunnel_interface_hello_interval_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_hello_interval_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceHelloTolerance")
    def tunnel_interface_hello_tolerance(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
        """
        return pulumi.get(self, "tunnel_interface_hello_tolerance")

    @tunnel_interface_hello_tolerance.setter
    def tunnel_interface_hello_tolerance(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "tunnel_interface_hello_tolerance", value)

    @property
    @pulumi.getter(name="tunnelInterfaceHelloToleranceVariable")
    def tunnel_interface_hello_tolerance_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_hello_tolerance_variable")

    @tunnel_interface_hello_tolerance_variable.setter
    def tunnel_interface_hello_tolerance_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_hello_tolerance_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceLastResortCircuit")
    def tunnel_interface_last_resort_circuit(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Set TLOC as last resort - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_last_resort_circuit")

    @tunnel_interface_last_resort_circuit.setter
    def tunnel_interface_last_resort_circuit(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_last_resort_circuit", value)

    @property
    @pulumi.getter(name="tunnelInterfaceLastResortCircuitVariable")
    def tunnel_interface_last_resort_circuit_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_last_resort_circuit_variable")

    @tunnel_interface_last_resort_circuit_variable.setter
    def tunnel_interface_last_resort_circuit_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_last_resort_circuit_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceLowBandwidthLink")
    def tunnel_interface_low_bandwidth_link(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Set the interface as a low-bandwidth circuit - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_low_bandwidth_link")

    @tunnel_interface_low_bandwidth_link.setter
    def tunnel_interface_low_bandwidth_link(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_low_bandwidth_link", value)

    @property
    @pulumi.getter(name="tunnelInterfaceLowBandwidthLinkVariable")
    def tunnel_interface_low_bandwidth_link_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_low_bandwidth_link_variable")

    @tunnel_interface_low_bandwidth_link_variable.setter
    def tunnel_interface_low_bandwidth_link_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_low_bandwidth_link_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceMaxControlConnections")
    def tunnel_interface_max_control_connections(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Maximum Control Connections - Range: `0`-`100`
        """
        return pulumi.get(self, "tunnel_interface_max_control_connections")

    @tunnel_interface_max_control_connections.setter
    def tunnel_interface_max_control_connections(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "tunnel_interface_max_control_connections", value)

    @property
    @pulumi.getter(name="tunnelInterfaceMaxControlConnectionsVariable")
    def tunnel_interface_max_control_connections_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_max_control_connections_variable")

    @tunnel_interface_max_control_connections_variable.setter
    def tunnel_interface_max_control_connections_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_max_control_connections_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceNatRefreshInterval")
    def tunnel_interface_nat_refresh_interval(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
        """
        return pulumi.get(self, "tunnel_interface_nat_refresh_interval")

    @tunnel_interface_nat_refresh_interval.setter
    def tunnel_interface_nat_refresh_interval(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "tunnel_interface_nat_refresh_interval", value)

    @property
    @pulumi.getter(name="tunnelInterfaceNatRefreshIntervalVariable")
    def tunnel_interface_nat_refresh_interval_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_nat_refresh_interval_variable")

    @tunnel_interface_nat_refresh_interval_variable.setter
    def tunnel_interface_nat_refresh_interval_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_nat_refresh_interval_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceNetworkBroadcast")
    def tunnel_interface_network_broadcast(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Accept and respond to network-prefix-directed broadcasts - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_network_broadcast")

    @tunnel_interface_network_broadcast.setter
    def tunnel_interface_network_broadcast(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_network_broadcast", value)

    @property
    @pulumi.getter(name="tunnelInterfaceNetworkBroadcastVariable")
    def tunnel_interface_network_broadcast_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_network_broadcast_variable")

    @tunnel_interface_network_broadcast_variable.setter
    def tunnel_interface_network_broadcast_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_network_broadcast_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfacePortHop")
    def tunnel_interface_port_hop(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Disallow port hopping on the tunnel interface - Default value: `true`
        """
        return pulumi.get(self, "tunnel_interface_port_hop")

    @tunnel_interface_port_hop.setter
    def tunnel_interface_port_hop(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_port_hop", value)

    @property
    @pulumi.getter(name="tunnelInterfacePortHopVariable")
    def tunnel_interface_port_hop_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_port_hop_variable")

    @tunnel_interface_port_hop_variable.setter
    def tunnel_interface_port_hop_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_port_hop_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceTunnelTcpMss")
    def tunnel_interface_tunnel_tcp_mss(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
        """
        return pulumi.get(self, "tunnel_interface_tunnel_tcp_mss")

    @tunnel_interface_tunnel_tcp_mss.setter
    def tunnel_interface_tunnel_tcp_mss(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "tunnel_interface_tunnel_tcp_mss", value)

    @property
    @pulumi.getter(name="tunnelInterfaceTunnelTcpMssVariable")
    def tunnel_interface_tunnel_tcp_mss_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_tunnel_tcp_mss_variable")

    @tunnel_interface_tunnel_tcp_mss_variable.setter
    def tunnel_interface_tunnel_tcp_mss_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_tunnel_tcp_mss_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceVbondAsStunServer")
    def tunnel_interface_vbond_as_stun_server(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Put this wan interface in STUN mode only - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_vbond_as_stun_server")

    @tunnel_interface_vbond_as_stun_server.setter
    def tunnel_interface_vbond_as_stun_server(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "tunnel_interface_vbond_as_stun_server", value)

    @property
    @pulumi.getter(name="tunnelInterfaceVbondAsStunServerVariable")
    def tunnel_interface_vbond_as_stun_server_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_vbond_as_stun_server_variable")

    @tunnel_interface_vbond_as_stun_server_variable.setter
    def tunnel_interface_vbond_as_stun_server_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_vbond_as_stun_server_variable", value)

    @property
    @pulumi.getter(name="tunnelInterfaceVmanageConnectionPreference")
    def tunnel_interface_vmanage_connection_preference(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
        """
        return pulumi.get(self, "tunnel_interface_vmanage_connection_preference")

    @tunnel_interface_vmanage_connection_preference.setter
    def tunnel_interface_vmanage_connection_preference(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "tunnel_interface_vmanage_connection_preference", value)

    @property
    @pulumi.getter(name="tunnelInterfaceVmanageConnectionPreferenceVariable")
    def tunnel_interface_vmanage_connection_preference_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_vmanage_connection_preference_variable")

    @tunnel_interface_vmanage_connection_preference_variable.setter
    def tunnel_interface_vmanage_connection_preference_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_interface_vmanage_connection_preference_variable", value)

    @property
    @pulumi.getter(name="tunnelQosMode")
    def tunnel_qos_mode(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Set tunnel QoS mode - Choices: `hub`, `spoke`
        """
        return pulumi.get(self, "tunnel_qos_mode")

    @tunnel_qos_mode.setter
    def tunnel_qos_mode(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_qos_mode", value)

    @property
    @pulumi.getter(name="tunnelQosModeVariable")
    def tunnel_qos_mode_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_qos_mode_variable")

    @tunnel_qos_mode_variable.setter
    def tunnel_qos_mode_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "tunnel_qos_mode_variable", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        The version of the Feature
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "version", value)


@pulumi.type_token("sdwan:index/transportWanVpnInterfaceCellularFeature:TransportWanVpnInterfaceCellularFeature")
class TransportWanVpnInterfaceCellularFeature(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 acl_ipv4_egress_feature_id: Optional[pulumi.Input[builtins.str]] = None,
                 acl_ipv4_ingress_feature_id: Optional[pulumi.Input[builtins.str]] = None,
                 acl_ipv6_egress_feature_id: Optional[pulumi.Input[builtins.str]] = None,
                 acl_ipv6_ingress_feature_id: Optional[pulumi.Input[builtins.str]] = None,
                 arps: Optional[pulumi.Input[Sequence[pulumi.Input[Union['TransportWanVpnInterfaceCellularFeatureArpArgs', 'TransportWanVpnInterfaceCellularFeatureArpArgsDict']]]]] = None,
                 bandwidth_downstream: Optional[pulumi.Input[builtins.int]] = None,
                 bandwidth_downstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 bandwidth_upstream: Optional[pulumi.Input[builtins.int]] = None,
                 bandwidth_upstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 feature_profile_id: Optional[pulumi.Input[builtins.str]] = None,
                 interface_description: Optional[pulumi.Input[builtins.str]] = None,
                 interface_description_variable: Optional[pulumi.Input[builtins.str]] = None,
                 interface_mtu: Optional[pulumi.Input[builtins.int]] = None,
                 interface_mtu_variable: Optional[pulumi.Input[builtins.str]] = None,
                 interface_name: Optional[pulumi.Input[builtins.str]] = None,
                 interface_name_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ip_directed_broadcast: Optional[pulumi.Input[builtins.bool]] = None,
                 ip_directed_broadcast_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ip_mtu: Optional[pulumi.Input[builtins.int]] = None,
                 ip_mtu_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipv4_dhcp_helper_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipv4_dhcp_helpers: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 nat_ipv4: Optional[pulumi.Input[builtins.bool]] = None,
                 nat_ipv4_variable: Optional[pulumi.Input[builtins.str]] = None,
                 nat_tcp_timeout: Optional[pulumi.Input[builtins.int]] = None,
                 nat_tcp_timeout_variable: Optional[pulumi.Input[builtins.str]] = None,
                 nat_udp_timeout: Optional[pulumi.Input[builtins.int]] = None,
                 nat_udp_timeout_variable: Optional[pulumi.Input[builtins.str]] = None,
                 per_tunnel_qos: Optional[pulumi.Input[builtins.bool]] = None,
                 per_tunnel_qos_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_adaptive: Optional[pulumi.Input[builtins.bool]] = None,
                 qos_adaptive_bandwidth_downstream: Optional[pulumi.Input[builtins.bool]] = None,
                 qos_adaptive_bandwidth_upstream: Optional[pulumi.Input[builtins.bool]] = None,
                 qos_adaptive_default_downstream: Optional[pulumi.Input[builtins.int]] = None,
                 qos_adaptive_default_downstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_adaptive_default_upstream: Optional[pulumi.Input[builtins.int]] = None,
                 qos_adaptive_default_upstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_adaptive_max_downstream: Optional[pulumi.Input[builtins.int]] = None,
                 qos_adaptive_max_downstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_adaptive_max_upstream: Optional[pulumi.Input[builtins.int]] = None,
                 qos_adaptive_max_upstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_adaptive_min_downstream: Optional[pulumi.Input[builtins.int]] = None,
                 qos_adaptive_min_downstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_adaptive_min_upstream: Optional[pulumi.Input[builtins.int]] = None,
                 qos_adaptive_min_upstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_adaptive_period: Optional[pulumi.Input[builtins.int]] = None,
                 qos_adaptive_period_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_shaping_rate: Optional[pulumi.Input[builtins.int]] = None,
                 qos_shaping_rate_variable: Optional[pulumi.Input[builtins.str]] = None,
                 service_provider: Optional[pulumi.Input[builtins.str]] = None,
                 service_provider_variable: Optional[pulumi.Input[builtins.str]] = None,
                 shutdown: Optional[pulumi.Input[builtins.bool]] = None,
                 shutdown_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tcp_mss: Optional[pulumi.Input[builtins.int]] = None,
                 tcp_mss_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tloc_extension: Optional[pulumi.Input[builtins.str]] = None,
                 tloc_extension_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tracker: Optional[pulumi.Input[builtins.str]] = None,
                 tracker_variable: Optional[pulumi.Input[builtins.str]] = None,
                 transport_wan_vpn_feature_id: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_bandwidth_percent: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_bandwidth_percent_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_all: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_all_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_bfd: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_bfd_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_bgp: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_bgp_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_dhcp: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_dhcp_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_dns: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_dns_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_https: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_https_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_icmp: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_icmp_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_netconf: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_netconf_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_ntp: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_ntp_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_ospf: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_ospf_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_snmp: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_snmp_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_ssh: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_ssh_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_stun: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_stun_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_bind_loopback_tunnel: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_bind_loopback_tunnel_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_border: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_border_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_carrier: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_carrier_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_clear_dont_fragment: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_clear_dont_fragment_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_color: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_color_restrict: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_color_restrict_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_color_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_encapsulations: Optional[pulumi.Input[Sequence[pulumi.Input[Union['TransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulationArgs', 'TransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulationArgsDict']]]]] = None,
                 tunnel_interface_exclude_controller_group_list_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_exclude_controller_group_lists: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.int]]]] = None,
                 tunnel_interface_groups: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_interface_groups_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_hello_interval: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_interface_hello_interval_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_hello_tolerance: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_interface_hello_tolerance_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_last_resort_circuit: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_last_resort_circuit_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_low_bandwidth_link: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_low_bandwidth_link_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_max_control_connections: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_interface_max_control_connections_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_nat_refresh_interval: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_interface_nat_refresh_interval_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_network_broadcast: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_network_broadcast_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_port_hop: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_port_hop_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_tunnel_tcp_mss: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_interface_tunnel_tcp_mss_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_vbond_as_stun_server: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_vbond_as_stun_server_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_vmanage_connection_preference: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_interface_vmanage_connection_preference_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_qos_mode: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_qos_mode_variable: Optional[pulumi.Input[builtins.str]] = None,
                 __props__=None):
        """
        This resource can manage a Transport WAN VPN Interface Cellular Feature.
          - Minimum SD-WAN Manager version: `20.12.0`

        ## Import

        The `pulumi import` command can be used, for example:

        Expected import identifier with the format: "transport_wan_vpn_interface_cellular_feature_id,feature_profile_id,transport_wan_vpn_feature_id"

        ```sh
        $ pulumi import sdwan:index/transportWanVpnInterfaceCellularFeature:TransportWanVpnInterfaceCellularFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac,140331f6-5418-4755-a059-13c77eb96037"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['TransportWanVpnInterfaceCellularFeatureArpArgs', 'TransportWanVpnInterfaceCellularFeatureArpArgsDict']]]] arps: Configure ARP entries
        :param pulumi.Input[builtins.int] bandwidth_downstream: Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
        :param pulumi.Input[builtins.str] bandwidth_downstream_variable: Variable name
        :param pulumi.Input[builtins.int] bandwidth_upstream: Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
        :param pulumi.Input[builtins.str] bandwidth_upstream_variable: Variable name
        :param pulumi.Input[builtins.str] description: The description of the Feature
        :param pulumi.Input[builtins.str] feature_profile_id: Feature Profile ID
        :param pulumi.Input[builtins.str] interface_description_variable: Variable name
        :param pulumi.Input[builtins.int] interface_mtu: Interface MTU GigabitEthernet0 <1500..1518>, Other GigabitEthernet <1500..9216> in bytes - Range: `1500`-`9216` -
               Default value: `1500`
        :param pulumi.Input[builtins.str] interface_mtu_variable: Variable name
        :param pulumi.Input[builtins.str] interface_name_variable: Variable name
        :param pulumi.Input[builtins.bool] ip_directed_broadcast: IP Directed-Broadcast - Default value: `false`
        :param pulumi.Input[builtins.str] ip_directed_broadcast_variable: Variable name
        :param pulumi.Input[builtins.int] ip_mtu: IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
               <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
        :param pulumi.Input[builtins.str] ip_mtu_variable: Variable name
        :param pulumi.Input[builtins.str] ipv4_dhcp_helper_variable: Variable name
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] ipv4_dhcp_helpers: List of DHCP IPv4 helper addresses (min 1, max 8)
        :param pulumi.Input[builtins.str] name: The name of the Feature
        :param pulumi.Input[builtins.bool] nat_ipv4: Network Address Translation on this interface - Default value: `false`
        :param pulumi.Input[builtins.str] nat_ipv4_variable: Variable name
        :param pulumi.Input[builtins.int] nat_tcp_timeout: Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
        :param pulumi.Input[builtins.str] nat_tcp_timeout_variable: Variable name
        :param pulumi.Input[builtins.int] nat_udp_timeout: Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
        :param pulumi.Input[builtins.str] nat_udp_timeout_variable: Variable name
        :param pulumi.Input[builtins.bool] per_tunnel_qos: Per-tunnel Qos - Default value: `false`
        :param pulumi.Input[builtins.str] per_tunnel_qos_variable: Variable name
        :param pulumi.Input[builtins.bool] qos_adaptive: Adaptive QoS - Default value: `false`
        :param pulumi.Input[builtins.bool] qos_adaptive_bandwidth_downstream: Shaping Rate Downstream - Default value: `false`
        :param pulumi.Input[builtins.bool] qos_adaptive_bandwidth_upstream: Shaping Rate Upstream - Default value: `false`
        :param pulumi.Input[builtins.int] qos_adaptive_default_downstream: Adaptive QoS default downstream bandwidth (kbps) - Range: `8`-`100000000`
        :param pulumi.Input[builtins.str] qos_adaptive_default_downstream_variable: Variable name
        :param pulumi.Input[builtins.int] qos_adaptive_default_upstream: Adaptive QoS default upstream bandwidth (kbps) - Range: `8`-`100000000`
        :param pulumi.Input[builtins.str] qos_adaptive_default_upstream_variable: Variable name
        :param pulumi.Input[builtins.int] qos_adaptive_max_downstream: Downstream max bandwidth limit (kbps) - Range: `8`-`100000000`
        :param pulumi.Input[builtins.str] qos_adaptive_max_downstream_variable: Variable name
        :param pulumi.Input[builtins.int] qos_adaptive_max_upstream: Upstream max bandwidth limit (kbps) - Range: `8`-`100000000`
        :param pulumi.Input[builtins.str] qos_adaptive_max_upstream_variable: Variable name
        :param pulumi.Input[builtins.int] qos_adaptive_min_downstream: Downstream min bandwidth limit (kbps) - Range: `8`-`100000000`
        :param pulumi.Input[builtins.str] qos_adaptive_min_downstream_variable: Variable name
        :param pulumi.Input[builtins.int] qos_adaptive_min_upstream: Upstream min bandwidth limit (kbps) - Range: `8`-`100000000`
        :param pulumi.Input[builtins.str] qos_adaptive_min_upstream_variable: Variable name
        :param pulumi.Input[builtins.int] qos_adaptive_period: Adapt Period(Minutes) - Range: `1`-`720` - Default value: `15`
        :param pulumi.Input[builtins.str] qos_adaptive_period_variable: Variable name
        :param pulumi.Input[builtins.int] qos_shaping_rate: Shaping Rate (Kbps) - Range: `8`-`100000000`
        :param pulumi.Input[builtins.str] qos_shaping_rate_variable: Variable name
        :param pulumi.Input[builtins.str] service_provider: Service Provider Name
        :param pulumi.Input[builtins.str] service_provider_variable: Variable name
        :param pulumi.Input[builtins.bool] shutdown: - Default value: `true`
        :param pulumi.Input[builtins.str] shutdown_variable: Variable name
        :param pulumi.Input[builtins.int] tcp_mss: TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
        :param pulumi.Input[builtins.str] tcp_mss_variable: Variable name
        :param pulumi.Input[builtins.str] tloc_extension: Extends a local TLOC to a remote node only for vpn 0
        :param pulumi.Input[builtins.str] tloc_extension_variable: Variable name
        :param pulumi.Input[builtins.str] tracker: Enable tracker for this interface
        :param pulumi.Input[builtins.str] tracker_variable: Variable name
        :param pulumi.Input[builtins.str] transport_wan_vpn_feature_id: Transport WAN VPN Feature ID
        :param pulumi.Input[builtins.int] tunnel_bandwidth_percent: Tunnels Bandwidth Percent - Range: `1`-`100` - Default value: `50`
        :param pulumi.Input[builtins.str] tunnel_bandwidth_percent_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface: Tunnel Interface on/off - Default value: `false`
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_all: Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_all_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_bfd: Allow/Deny BFD - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_bfd_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_bgp: Allow/deny BGP - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_bgp_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_dhcp: Allow/Deny DHCP - Default value: `true`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_dhcp_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_dns: Allow/Deny DNS - Default value: `true`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_dns_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_https: Allow/Deny HTTPS - Default value: `true`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_https_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_icmp: Allow/Deny ICMP - Default value: `true`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_icmp_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_netconf: Allow/Deny NETCONF - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_netconf_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_ntp: Allow/Deny NTP - Default value: `true`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_ntp_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_ospf: Allow/Deny OSPF - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_ospf_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_snmp: Allow/Deny SNMP - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_snmp_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_ssh: Allow/Deny SSH - Default value: `true`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_ssh_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_stun: Allow/Deny STUN - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_stun_variable: Variable name
        :param pulumi.Input[builtins.str] tunnel_interface_bind_loopback_tunnel: Bind loopback tunnel interface to a physical interface
        :param pulumi.Input[builtins.str] tunnel_interface_bind_loopback_tunnel_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_border: Set TLOC as border TLOC - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_border_variable: Variable name
        :param pulumi.Input[builtins.str] tunnel_interface_carrier: Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
               `carrier7`, `carrier8` - Default value: `default`
        :param pulumi.Input[builtins.str] tunnel_interface_carrier_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_clear_dont_fragment: Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_clear_dont_fragment_variable: Variable name
        :param pulumi.Input[builtins.str] tunnel_interface_color: Set color for TLOC - Choices: `default`, `mpls`, `metro ethernet`, `biz internet`, `public internet`, `lte`, `3g`,
               `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
               `private4`, `private5`, `private6` - Default value: `mpls`
        :param pulumi.Input[builtins.bool] tunnel_interface_color_restrict: Restrict this TLOC behavior - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_color_restrict_variable: Variable name
        :param pulumi.Input[builtins.str] tunnel_interface_color_variable: Variable name
        :param pulumi.Input[Sequence[pulumi.Input[Union['TransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulationArgs', 'TransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulationArgsDict']]]] tunnel_interface_encapsulations: Encapsulation for TLOC
        :param pulumi.Input[builtins.str] tunnel_interface_exclude_controller_group_list_variable: Variable name
        :param pulumi.Input[Sequence[pulumi.Input[builtins.int]]] tunnel_interface_exclude_controller_group_lists: Exclude the following controller groups defined in this list.
        :param pulumi.Input[builtins.int] tunnel_interface_groups: List of groups - Range: `1`-`4294967295`
        :param pulumi.Input[builtins.str] tunnel_interface_groups_variable: Variable name
        :param pulumi.Input[builtins.int] tunnel_interface_hello_interval: Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
        :param pulumi.Input[builtins.str] tunnel_interface_hello_interval_variable: Variable name
        :param pulumi.Input[builtins.int] tunnel_interface_hello_tolerance: Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
        :param pulumi.Input[builtins.str] tunnel_interface_hello_tolerance_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_last_resort_circuit: Set TLOC as last resort - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_last_resort_circuit_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_low_bandwidth_link: Set the interface as a low-bandwidth circuit - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_low_bandwidth_link_variable: Variable name
        :param pulumi.Input[builtins.int] tunnel_interface_max_control_connections: Maximum Control Connections - Range: `0`-`100`
        :param pulumi.Input[builtins.str] tunnel_interface_max_control_connections_variable: Variable name
        :param pulumi.Input[builtins.int] tunnel_interface_nat_refresh_interval: Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
        :param pulumi.Input[builtins.str] tunnel_interface_nat_refresh_interval_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_network_broadcast: Accept and respond to network-prefix-directed broadcasts - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_network_broadcast_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_port_hop: Disallow port hopping on the tunnel interface - Default value: `true`
        :param pulumi.Input[builtins.str] tunnel_interface_port_hop_variable: Variable name
        :param pulumi.Input[builtins.int] tunnel_interface_tunnel_tcp_mss: Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
        :param pulumi.Input[builtins.str] tunnel_interface_tunnel_tcp_mss_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_vbond_as_stun_server: Put this wan interface in STUN mode only - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_vbond_as_stun_server_variable: Variable name
        :param pulumi.Input[builtins.int] tunnel_interface_vmanage_connection_preference: Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
        :param pulumi.Input[builtins.str] tunnel_interface_vmanage_connection_preference_variable: Variable name
        :param pulumi.Input[builtins.str] tunnel_qos_mode: Set tunnel QoS mode - Choices: `hub`, `spoke`
        :param pulumi.Input[builtins.str] tunnel_qos_mode_variable: Variable name
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: TransportWanVpnInterfaceCellularFeatureArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        This resource can manage a Transport WAN VPN Interface Cellular Feature.
          - Minimum SD-WAN Manager version: `20.12.0`

        ## Import

        The `pulumi import` command can be used, for example:

        Expected import identifier with the format: "transport_wan_vpn_interface_cellular_feature_id,feature_profile_id,transport_wan_vpn_feature_id"

        ```sh
        $ pulumi import sdwan:index/transportWanVpnInterfaceCellularFeature:TransportWanVpnInterfaceCellularFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac,140331f6-5418-4755-a059-13c77eb96037"
        ```

        :param str resource_name: The name of the resource.
        :param TransportWanVpnInterfaceCellularFeatureArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(TransportWanVpnInterfaceCellularFeatureArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 acl_ipv4_egress_feature_id: Optional[pulumi.Input[builtins.str]] = None,
                 acl_ipv4_ingress_feature_id: Optional[pulumi.Input[builtins.str]] = None,
                 acl_ipv6_egress_feature_id: Optional[pulumi.Input[builtins.str]] = None,
                 acl_ipv6_ingress_feature_id: Optional[pulumi.Input[builtins.str]] = None,
                 arps: Optional[pulumi.Input[Sequence[pulumi.Input[Union['TransportWanVpnInterfaceCellularFeatureArpArgs', 'TransportWanVpnInterfaceCellularFeatureArpArgsDict']]]]] = None,
                 bandwidth_downstream: Optional[pulumi.Input[builtins.int]] = None,
                 bandwidth_downstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 bandwidth_upstream: Optional[pulumi.Input[builtins.int]] = None,
                 bandwidth_upstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 feature_profile_id: Optional[pulumi.Input[builtins.str]] = None,
                 interface_description: Optional[pulumi.Input[builtins.str]] = None,
                 interface_description_variable: Optional[pulumi.Input[builtins.str]] = None,
                 interface_mtu: Optional[pulumi.Input[builtins.int]] = None,
                 interface_mtu_variable: Optional[pulumi.Input[builtins.str]] = None,
                 interface_name: Optional[pulumi.Input[builtins.str]] = None,
                 interface_name_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ip_directed_broadcast: Optional[pulumi.Input[builtins.bool]] = None,
                 ip_directed_broadcast_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ip_mtu: Optional[pulumi.Input[builtins.int]] = None,
                 ip_mtu_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipv4_dhcp_helper_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipv4_dhcp_helpers: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 nat_ipv4: Optional[pulumi.Input[builtins.bool]] = None,
                 nat_ipv4_variable: Optional[pulumi.Input[builtins.str]] = None,
                 nat_tcp_timeout: Optional[pulumi.Input[builtins.int]] = None,
                 nat_tcp_timeout_variable: Optional[pulumi.Input[builtins.str]] = None,
                 nat_udp_timeout: Optional[pulumi.Input[builtins.int]] = None,
                 nat_udp_timeout_variable: Optional[pulumi.Input[builtins.str]] = None,
                 per_tunnel_qos: Optional[pulumi.Input[builtins.bool]] = None,
                 per_tunnel_qos_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_adaptive: Optional[pulumi.Input[builtins.bool]] = None,
                 qos_adaptive_bandwidth_downstream: Optional[pulumi.Input[builtins.bool]] = None,
                 qos_adaptive_bandwidth_upstream: Optional[pulumi.Input[builtins.bool]] = None,
                 qos_adaptive_default_downstream: Optional[pulumi.Input[builtins.int]] = None,
                 qos_adaptive_default_downstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_adaptive_default_upstream: Optional[pulumi.Input[builtins.int]] = None,
                 qos_adaptive_default_upstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_adaptive_max_downstream: Optional[pulumi.Input[builtins.int]] = None,
                 qos_adaptive_max_downstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_adaptive_max_upstream: Optional[pulumi.Input[builtins.int]] = None,
                 qos_adaptive_max_upstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_adaptive_min_downstream: Optional[pulumi.Input[builtins.int]] = None,
                 qos_adaptive_min_downstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_adaptive_min_upstream: Optional[pulumi.Input[builtins.int]] = None,
                 qos_adaptive_min_upstream_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_adaptive_period: Optional[pulumi.Input[builtins.int]] = None,
                 qos_adaptive_period_variable: Optional[pulumi.Input[builtins.str]] = None,
                 qos_shaping_rate: Optional[pulumi.Input[builtins.int]] = None,
                 qos_shaping_rate_variable: Optional[pulumi.Input[builtins.str]] = None,
                 service_provider: Optional[pulumi.Input[builtins.str]] = None,
                 service_provider_variable: Optional[pulumi.Input[builtins.str]] = None,
                 shutdown: Optional[pulumi.Input[builtins.bool]] = None,
                 shutdown_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tcp_mss: Optional[pulumi.Input[builtins.int]] = None,
                 tcp_mss_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tloc_extension: Optional[pulumi.Input[builtins.str]] = None,
                 tloc_extension_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tracker: Optional[pulumi.Input[builtins.str]] = None,
                 tracker_variable: Optional[pulumi.Input[builtins.str]] = None,
                 transport_wan_vpn_feature_id: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_bandwidth_percent: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_bandwidth_percent_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_all: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_all_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_bfd: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_bfd_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_bgp: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_bgp_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_dhcp: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_dhcp_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_dns: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_dns_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_https: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_https_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_icmp: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_icmp_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_netconf: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_netconf_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_ntp: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_ntp_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_ospf: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_ospf_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_snmp: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_snmp_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_ssh: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_ssh_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_allow_stun: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_allow_stun_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_bind_loopback_tunnel: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_bind_loopback_tunnel_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_border: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_border_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_carrier: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_carrier_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_clear_dont_fragment: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_clear_dont_fragment_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_color: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_color_restrict: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_color_restrict_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_color_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_encapsulations: Optional[pulumi.Input[Sequence[pulumi.Input[Union['TransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulationArgs', 'TransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulationArgsDict']]]]] = None,
                 tunnel_interface_exclude_controller_group_list_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_exclude_controller_group_lists: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.int]]]] = None,
                 tunnel_interface_groups: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_interface_groups_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_hello_interval: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_interface_hello_interval_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_hello_tolerance: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_interface_hello_tolerance_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_last_resort_circuit: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_last_resort_circuit_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_low_bandwidth_link: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_low_bandwidth_link_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_max_control_connections: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_interface_max_control_connections_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_nat_refresh_interval: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_interface_nat_refresh_interval_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_network_broadcast: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_network_broadcast_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_port_hop: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_port_hop_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_tunnel_tcp_mss: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_interface_tunnel_tcp_mss_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_vbond_as_stun_server: Optional[pulumi.Input[builtins.bool]] = None,
                 tunnel_interface_vbond_as_stun_server_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_interface_vmanage_connection_preference: Optional[pulumi.Input[builtins.int]] = None,
                 tunnel_interface_vmanage_connection_preference_variable: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_qos_mode: Optional[pulumi.Input[builtins.str]] = None,
                 tunnel_qos_mode_variable: Optional[pulumi.Input[builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = TransportWanVpnInterfaceCellularFeatureArgs.__new__(TransportWanVpnInterfaceCellularFeatureArgs)

            __props__.__dict__["acl_ipv4_egress_feature_id"] = acl_ipv4_egress_feature_id
            __props__.__dict__["acl_ipv4_ingress_feature_id"] = acl_ipv4_ingress_feature_id
            __props__.__dict__["acl_ipv6_egress_feature_id"] = acl_ipv6_egress_feature_id
            __props__.__dict__["acl_ipv6_ingress_feature_id"] = acl_ipv6_ingress_feature_id
            __props__.__dict__["arps"] = arps
            __props__.__dict__["bandwidth_downstream"] = bandwidth_downstream
            __props__.__dict__["bandwidth_downstream_variable"] = bandwidth_downstream_variable
            __props__.__dict__["bandwidth_upstream"] = bandwidth_upstream
            __props__.__dict__["bandwidth_upstream_variable"] = bandwidth_upstream_variable
            __props__.__dict__["description"] = description
            if feature_profile_id is None and not opts.urn:
                raise TypeError("Missing required property 'feature_profile_id'")
            __props__.__dict__["feature_profile_id"] = feature_profile_id
            __props__.__dict__["interface_description"] = interface_description
            __props__.__dict__["interface_description_variable"] = interface_description_variable
            __props__.__dict__["interface_mtu"] = interface_mtu
            __props__.__dict__["interface_mtu_variable"] = interface_mtu_variable
            __props__.__dict__["interface_name"] = interface_name
            __props__.__dict__["interface_name_variable"] = interface_name_variable
            __props__.__dict__["ip_directed_broadcast"] = ip_directed_broadcast
            __props__.__dict__["ip_directed_broadcast_variable"] = ip_directed_broadcast_variable
            __props__.__dict__["ip_mtu"] = ip_mtu
            __props__.__dict__["ip_mtu_variable"] = ip_mtu_variable
            __props__.__dict__["ipv4_dhcp_helper_variable"] = ipv4_dhcp_helper_variable
            __props__.__dict__["ipv4_dhcp_helpers"] = ipv4_dhcp_helpers
            __props__.__dict__["name"] = name
            __props__.__dict__["nat_ipv4"] = nat_ipv4
            __props__.__dict__["nat_ipv4_variable"] = nat_ipv4_variable
            __props__.__dict__["nat_tcp_timeout"] = nat_tcp_timeout
            __props__.__dict__["nat_tcp_timeout_variable"] = nat_tcp_timeout_variable
            __props__.__dict__["nat_udp_timeout"] = nat_udp_timeout
            __props__.__dict__["nat_udp_timeout_variable"] = nat_udp_timeout_variable
            __props__.__dict__["per_tunnel_qos"] = per_tunnel_qos
            __props__.__dict__["per_tunnel_qos_variable"] = per_tunnel_qos_variable
            __props__.__dict__["qos_adaptive"] = qos_adaptive
            __props__.__dict__["qos_adaptive_bandwidth_downstream"] = qos_adaptive_bandwidth_downstream
            __props__.__dict__["qos_adaptive_bandwidth_upstream"] = qos_adaptive_bandwidth_upstream
            __props__.__dict__["qos_adaptive_default_downstream"] = qos_adaptive_default_downstream
            __props__.__dict__["qos_adaptive_default_downstream_variable"] = qos_adaptive_default_downstream_variable
            __props__.__dict__["qos_adaptive_default_upstream"] = qos_adaptive_default_upstream
            __props__.__dict__["qos_adaptive_default_upstream_variable"] = qos_adaptive_default_upstream_variable
            __props__.__dict__["qos_adaptive_max_downstream"] = qos_adaptive_max_downstream
            __props__.__dict__["qos_adaptive_max_downstream_variable"] = qos_adaptive_max_downstream_variable
            __props__.__dict__["qos_adaptive_max_upstream"] = qos_adaptive_max_upstream
            __props__.__dict__["qos_adaptive_max_upstream_variable"] = qos_adaptive_max_upstream_variable
            __props__.__dict__["qos_adaptive_min_downstream"] = qos_adaptive_min_downstream
            __props__.__dict__["qos_adaptive_min_downstream_variable"] = qos_adaptive_min_downstream_variable
            __props__.__dict__["qos_adaptive_min_upstream"] = qos_adaptive_min_upstream
            __props__.__dict__["qos_adaptive_min_upstream_variable"] = qos_adaptive_min_upstream_variable
            __props__.__dict__["qos_adaptive_period"] = qos_adaptive_period
            __props__.__dict__["qos_adaptive_period_variable"] = qos_adaptive_period_variable
            __props__.__dict__["qos_shaping_rate"] = qos_shaping_rate
            __props__.__dict__["qos_shaping_rate_variable"] = qos_shaping_rate_variable
            __props__.__dict__["service_provider"] = service_provider
            __props__.__dict__["service_provider_variable"] = service_provider_variable
            __props__.__dict__["shutdown"] = shutdown
            __props__.__dict__["shutdown_variable"] = shutdown_variable
            __props__.__dict__["tcp_mss"] = tcp_mss
            __props__.__dict__["tcp_mss_variable"] = tcp_mss_variable
            __props__.__dict__["tloc_extension"] = tloc_extension
            __props__.__dict__["tloc_extension_variable"] = tloc_extension_variable
            __props__.__dict__["tracker"] = tracker
            __props__.__dict__["tracker_variable"] = tracker_variable
            if transport_wan_vpn_feature_id is None and not opts.urn:
                raise TypeError("Missing required property 'transport_wan_vpn_feature_id'")
            __props__.__dict__["transport_wan_vpn_feature_id"] = transport_wan_vpn_feature_id
            __props__.__dict__["tunnel_bandwidth_percent"] = tunnel_bandwidth_percent
            __props__.__dict__["tunnel_bandwidth_percent_variable"] = tunnel_bandwidth_percent_variable
            __props__.__dict__["tunnel_interface"] = tunnel_interface
            __props__.__dict__["tunnel_interface_allow_all"] = tunnel_interface_allow_all
            __props__.__dict__["tunnel_interface_allow_all_variable"] = tunnel_interface_allow_all_variable
            __props__.__dict__["tunnel_interface_allow_bfd"] = tunnel_interface_allow_bfd
            __props__.__dict__["tunnel_interface_allow_bfd_variable"] = tunnel_interface_allow_bfd_variable
            __props__.__dict__["tunnel_interface_allow_bgp"] = tunnel_interface_allow_bgp
            __props__.__dict__["tunnel_interface_allow_bgp_variable"] = tunnel_interface_allow_bgp_variable
            __props__.__dict__["tunnel_interface_allow_dhcp"] = tunnel_interface_allow_dhcp
            __props__.__dict__["tunnel_interface_allow_dhcp_variable"] = tunnel_interface_allow_dhcp_variable
            __props__.__dict__["tunnel_interface_allow_dns"] = tunnel_interface_allow_dns
            __props__.__dict__["tunnel_interface_allow_dns_variable"] = tunnel_interface_allow_dns_variable
            __props__.__dict__["tunnel_interface_allow_https"] = tunnel_interface_allow_https
            __props__.__dict__["tunnel_interface_allow_https_variable"] = tunnel_interface_allow_https_variable
            __props__.__dict__["tunnel_interface_allow_icmp"] = tunnel_interface_allow_icmp
            __props__.__dict__["tunnel_interface_allow_icmp_variable"] = tunnel_interface_allow_icmp_variable
            __props__.__dict__["tunnel_interface_allow_netconf"] = tunnel_interface_allow_netconf
            __props__.__dict__["tunnel_interface_allow_netconf_variable"] = tunnel_interface_allow_netconf_variable
            __props__.__dict__["tunnel_interface_allow_ntp"] = tunnel_interface_allow_ntp
            __props__.__dict__["tunnel_interface_allow_ntp_variable"] = tunnel_interface_allow_ntp_variable
            __props__.__dict__["tunnel_interface_allow_ospf"] = tunnel_interface_allow_ospf
            __props__.__dict__["tunnel_interface_allow_ospf_variable"] = tunnel_interface_allow_ospf_variable
            __props__.__dict__["tunnel_interface_allow_snmp"] = tunnel_interface_allow_snmp
            __props__.__dict__["tunnel_interface_allow_snmp_variable"] = tunnel_interface_allow_snmp_variable
            __props__.__dict__["tunnel_interface_allow_ssh"] = tunnel_interface_allow_ssh
            __props__.__dict__["tunnel_interface_allow_ssh_variable"] = tunnel_interface_allow_ssh_variable
            __props__.__dict__["tunnel_interface_allow_stun"] = tunnel_interface_allow_stun
            __props__.__dict__["tunnel_interface_allow_stun_variable"] = tunnel_interface_allow_stun_variable
            __props__.__dict__["tunnel_interface_bind_loopback_tunnel"] = tunnel_interface_bind_loopback_tunnel
            __props__.__dict__["tunnel_interface_bind_loopback_tunnel_variable"] = tunnel_interface_bind_loopback_tunnel_variable
            __props__.__dict__["tunnel_interface_border"] = tunnel_interface_border
            __props__.__dict__["tunnel_interface_border_variable"] = tunnel_interface_border_variable
            __props__.__dict__["tunnel_interface_carrier"] = tunnel_interface_carrier
            __props__.__dict__["tunnel_interface_carrier_variable"] = tunnel_interface_carrier_variable
            __props__.__dict__["tunnel_interface_clear_dont_fragment"] = tunnel_interface_clear_dont_fragment
            __props__.__dict__["tunnel_interface_clear_dont_fragment_variable"] = tunnel_interface_clear_dont_fragment_variable
            __props__.__dict__["tunnel_interface_color"] = tunnel_interface_color
            __props__.__dict__["tunnel_interface_color_restrict"] = tunnel_interface_color_restrict
            __props__.__dict__["tunnel_interface_color_restrict_variable"] = tunnel_interface_color_restrict_variable
            __props__.__dict__["tunnel_interface_color_variable"] = tunnel_interface_color_variable
            __props__.__dict__["tunnel_interface_encapsulations"] = tunnel_interface_encapsulations
            __props__.__dict__["tunnel_interface_exclude_controller_group_list_variable"] = tunnel_interface_exclude_controller_group_list_variable
            __props__.__dict__["tunnel_interface_exclude_controller_group_lists"] = tunnel_interface_exclude_controller_group_lists
            __props__.__dict__["tunnel_interface_groups"] = tunnel_interface_groups
            __props__.__dict__["tunnel_interface_groups_variable"] = tunnel_interface_groups_variable
            __props__.__dict__["tunnel_interface_hello_interval"] = tunnel_interface_hello_interval
            __props__.__dict__["tunnel_interface_hello_interval_variable"] = tunnel_interface_hello_interval_variable
            __props__.__dict__["tunnel_interface_hello_tolerance"] = tunnel_interface_hello_tolerance
            __props__.__dict__["tunnel_interface_hello_tolerance_variable"] = tunnel_interface_hello_tolerance_variable
            __props__.__dict__["tunnel_interface_last_resort_circuit"] = tunnel_interface_last_resort_circuit
            __props__.__dict__["tunnel_interface_last_resort_circuit_variable"] = tunnel_interface_last_resort_circuit_variable
            __props__.__dict__["tunnel_interface_low_bandwidth_link"] = tunnel_interface_low_bandwidth_link
            __props__.__dict__["tunnel_interface_low_bandwidth_link_variable"] = tunnel_interface_low_bandwidth_link_variable
            __props__.__dict__["tunnel_interface_max_control_connections"] = tunnel_interface_max_control_connections
            __props__.__dict__["tunnel_interface_max_control_connections_variable"] = tunnel_interface_max_control_connections_variable
            __props__.__dict__["tunnel_interface_nat_refresh_interval"] = tunnel_interface_nat_refresh_interval
            __props__.__dict__["tunnel_interface_nat_refresh_interval_variable"] = tunnel_interface_nat_refresh_interval_variable
            __props__.__dict__["tunnel_interface_network_broadcast"] = tunnel_interface_network_broadcast
            __props__.__dict__["tunnel_interface_network_broadcast_variable"] = tunnel_interface_network_broadcast_variable
            __props__.__dict__["tunnel_interface_port_hop"] = tunnel_interface_port_hop
            __props__.__dict__["tunnel_interface_port_hop_variable"] = tunnel_interface_port_hop_variable
            __props__.__dict__["tunnel_interface_tunnel_tcp_mss"] = tunnel_interface_tunnel_tcp_mss
            __props__.__dict__["tunnel_interface_tunnel_tcp_mss_variable"] = tunnel_interface_tunnel_tcp_mss_variable
            __props__.__dict__["tunnel_interface_vbond_as_stun_server"] = tunnel_interface_vbond_as_stun_server
            __props__.__dict__["tunnel_interface_vbond_as_stun_server_variable"] = tunnel_interface_vbond_as_stun_server_variable
            __props__.__dict__["tunnel_interface_vmanage_connection_preference"] = tunnel_interface_vmanage_connection_preference
            __props__.__dict__["tunnel_interface_vmanage_connection_preference_variable"] = tunnel_interface_vmanage_connection_preference_variable
            __props__.__dict__["tunnel_qos_mode"] = tunnel_qos_mode
            __props__.__dict__["tunnel_qos_mode_variable"] = tunnel_qos_mode_variable
            __props__.__dict__["version"] = None
        super(TransportWanVpnInterfaceCellularFeature, __self__).__init__(
            'sdwan:index/transportWanVpnInterfaceCellularFeature:TransportWanVpnInterfaceCellularFeature',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            acl_ipv4_egress_feature_id: Optional[pulumi.Input[builtins.str]] = None,
            acl_ipv4_ingress_feature_id: Optional[pulumi.Input[builtins.str]] = None,
            acl_ipv6_egress_feature_id: Optional[pulumi.Input[builtins.str]] = None,
            acl_ipv6_ingress_feature_id: Optional[pulumi.Input[builtins.str]] = None,
            arps: Optional[pulumi.Input[Sequence[pulumi.Input[Union['TransportWanVpnInterfaceCellularFeatureArpArgs', 'TransportWanVpnInterfaceCellularFeatureArpArgsDict']]]]] = None,
            bandwidth_downstream: Optional[pulumi.Input[builtins.int]] = None,
            bandwidth_downstream_variable: Optional[pulumi.Input[builtins.str]] = None,
            bandwidth_upstream: Optional[pulumi.Input[builtins.int]] = None,
            bandwidth_upstream_variable: Optional[pulumi.Input[builtins.str]] = None,
            description: Optional[pulumi.Input[builtins.str]] = None,
            feature_profile_id: Optional[pulumi.Input[builtins.str]] = None,
            interface_description: Optional[pulumi.Input[builtins.str]] = None,
            interface_description_variable: Optional[pulumi.Input[builtins.str]] = None,
            interface_mtu: Optional[pulumi.Input[builtins.int]] = None,
            interface_mtu_variable: Optional[pulumi.Input[builtins.str]] = None,
            interface_name: Optional[pulumi.Input[builtins.str]] = None,
            interface_name_variable: Optional[pulumi.Input[builtins.str]] = None,
            ip_directed_broadcast: Optional[pulumi.Input[builtins.bool]] = None,
            ip_directed_broadcast_variable: Optional[pulumi.Input[builtins.str]] = None,
            ip_mtu: Optional[pulumi.Input[builtins.int]] = None,
            ip_mtu_variable: Optional[pulumi.Input[builtins.str]] = None,
            ipv4_dhcp_helper_variable: Optional[pulumi.Input[builtins.str]] = None,
            ipv4_dhcp_helpers: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
            name: Optional[pulumi.Input[builtins.str]] = None,
            nat_ipv4: Optional[pulumi.Input[builtins.bool]] = None,
            nat_ipv4_variable: Optional[pulumi.Input[builtins.str]] = None,
            nat_tcp_timeout: Optional[pulumi.Input[builtins.int]] = None,
            nat_tcp_timeout_variable: Optional[pulumi.Input[builtins.str]] = None,
            nat_udp_timeout: Optional[pulumi.Input[builtins.int]] = None,
            nat_udp_timeout_variable: Optional[pulumi.Input[builtins.str]] = None,
            per_tunnel_qos: Optional[pulumi.Input[builtins.bool]] = None,
            per_tunnel_qos_variable: Optional[pulumi.Input[builtins.str]] = None,
            qos_adaptive: Optional[pulumi.Input[builtins.bool]] = None,
            qos_adaptive_bandwidth_downstream: Optional[pulumi.Input[builtins.bool]] = None,
            qos_adaptive_bandwidth_upstream: Optional[pulumi.Input[builtins.bool]] = None,
            qos_adaptive_default_downstream: Optional[pulumi.Input[builtins.int]] = None,
            qos_adaptive_default_downstream_variable: Optional[pulumi.Input[builtins.str]] = None,
            qos_adaptive_default_upstream: Optional[pulumi.Input[builtins.int]] = None,
            qos_adaptive_default_upstream_variable: Optional[pulumi.Input[builtins.str]] = None,
            qos_adaptive_max_downstream: Optional[pulumi.Input[builtins.int]] = None,
            qos_adaptive_max_downstream_variable: Optional[pulumi.Input[builtins.str]] = None,
            qos_adaptive_max_upstream: Optional[pulumi.Input[builtins.int]] = None,
            qos_adaptive_max_upstream_variable: Optional[pulumi.Input[builtins.str]] = None,
            qos_adaptive_min_downstream: Optional[pulumi.Input[builtins.int]] = None,
            qos_adaptive_min_downstream_variable: Optional[pulumi.Input[builtins.str]] = None,
            qos_adaptive_min_upstream: Optional[pulumi.Input[builtins.int]] = None,
            qos_adaptive_min_upstream_variable: Optional[pulumi.Input[builtins.str]] = None,
            qos_adaptive_period: Optional[pulumi.Input[builtins.int]] = None,
            qos_adaptive_period_variable: Optional[pulumi.Input[builtins.str]] = None,
            qos_shaping_rate: Optional[pulumi.Input[builtins.int]] = None,
            qos_shaping_rate_variable: Optional[pulumi.Input[builtins.str]] = None,
            service_provider: Optional[pulumi.Input[builtins.str]] = None,
            service_provider_variable: Optional[pulumi.Input[builtins.str]] = None,
            shutdown: Optional[pulumi.Input[builtins.bool]] = None,
            shutdown_variable: Optional[pulumi.Input[builtins.str]] = None,
            tcp_mss: Optional[pulumi.Input[builtins.int]] = None,
            tcp_mss_variable: Optional[pulumi.Input[builtins.str]] = None,
            tloc_extension: Optional[pulumi.Input[builtins.str]] = None,
            tloc_extension_variable: Optional[pulumi.Input[builtins.str]] = None,
            tracker: Optional[pulumi.Input[builtins.str]] = None,
            tracker_variable: Optional[pulumi.Input[builtins.str]] = None,
            transport_wan_vpn_feature_id: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_bandwidth_percent: Optional[pulumi.Input[builtins.int]] = None,
            tunnel_bandwidth_percent_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface: Optional[pulumi.Input[builtins.bool]] = None,
            tunnel_interface_allow_all: Optional[pulumi.Input[builtins.bool]] = None,
            tunnel_interface_allow_all_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_allow_bfd: Optional[pulumi.Input[builtins.bool]] = None,
            tunnel_interface_allow_bfd_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_allow_bgp: Optional[pulumi.Input[builtins.bool]] = None,
            tunnel_interface_allow_bgp_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_allow_dhcp: Optional[pulumi.Input[builtins.bool]] = None,
            tunnel_interface_allow_dhcp_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_allow_dns: Optional[pulumi.Input[builtins.bool]] = None,
            tunnel_interface_allow_dns_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_allow_https: Optional[pulumi.Input[builtins.bool]] = None,
            tunnel_interface_allow_https_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_allow_icmp: Optional[pulumi.Input[builtins.bool]] = None,
            tunnel_interface_allow_icmp_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_allow_netconf: Optional[pulumi.Input[builtins.bool]] = None,
            tunnel_interface_allow_netconf_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_allow_ntp: Optional[pulumi.Input[builtins.bool]] = None,
            tunnel_interface_allow_ntp_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_allow_ospf: Optional[pulumi.Input[builtins.bool]] = None,
            tunnel_interface_allow_ospf_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_allow_snmp: Optional[pulumi.Input[builtins.bool]] = None,
            tunnel_interface_allow_snmp_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_allow_ssh: Optional[pulumi.Input[builtins.bool]] = None,
            tunnel_interface_allow_ssh_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_allow_stun: Optional[pulumi.Input[builtins.bool]] = None,
            tunnel_interface_allow_stun_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_bind_loopback_tunnel: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_bind_loopback_tunnel_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_border: Optional[pulumi.Input[builtins.bool]] = None,
            tunnel_interface_border_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_carrier: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_carrier_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_clear_dont_fragment: Optional[pulumi.Input[builtins.bool]] = None,
            tunnel_interface_clear_dont_fragment_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_color: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_color_restrict: Optional[pulumi.Input[builtins.bool]] = None,
            tunnel_interface_color_restrict_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_color_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_encapsulations: Optional[pulumi.Input[Sequence[pulumi.Input[Union['TransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulationArgs', 'TransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulationArgsDict']]]]] = None,
            tunnel_interface_exclude_controller_group_list_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_exclude_controller_group_lists: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.int]]]] = None,
            tunnel_interface_groups: Optional[pulumi.Input[builtins.int]] = None,
            tunnel_interface_groups_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_hello_interval: Optional[pulumi.Input[builtins.int]] = None,
            tunnel_interface_hello_interval_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_hello_tolerance: Optional[pulumi.Input[builtins.int]] = None,
            tunnel_interface_hello_tolerance_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_last_resort_circuit: Optional[pulumi.Input[builtins.bool]] = None,
            tunnel_interface_last_resort_circuit_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_low_bandwidth_link: Optional[pulumi.Input[builtins.bool]] = None,
            tunnel_interface_low_bandwidth_link_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_max_control_connections: Optional[pulumi.Input[builtins.int]] = None,
            tunnel_interface_max_control_connections_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_nat_refresh_interval: Optional[pulumi.Input[builtins.int]] = None,
            tunnel_interface_nat_refresh_interval_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_network_broadcast: Optional[pulumi.Input[builtins.bool]] = None,
            tunnel_interface_network_broadcast_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_port_hop: Optional[pulumi.Input[builtins.bool]] = None,
            tunnel_interface_port_hop_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_tunnel_tcp_mss: Optional[pulumi.Input[builtins.int]] = None,
            tunnel_interface_tunnel_tcp_mss_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_vbond_as_stun_server: Optional[pulumi.Input[builtins.bool]] = None,
            tunnel_interface_vbond_as_stun_server_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_interface_vmanage_connection_preference: Optional[pulumi.Input[builtins.int]] = None,
            tunnel_interface_vmanage_connection_preference_variable: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_qos_mode: Optional[pulumi.Input[builtins.str]] = None,
            tunnel_qos_mode_variable: Optional[pulumi.Input[builtins.str]] = None,
            version: Optional[pulumi.Input[builtins.int]] = None) -> 'TransportWanVpnInterfaceCellularFeature':
        """
        Get an existing TransportWanVpnInterfaceCellularFeature resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['TransportWanVpnInterfaceCellularFeatureArpArgs', 'TransportWanVpnInterfaceCellularFeatureArpArgsDict']]]] arps: Configure ARP entries
        :param pulumi.Input[builtins.int] bandwidth_downstream: Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
        :param pulumi.Input[builtins.str] bandwidth_downstream_variable: Variable name
        :param pulumi.Input[builtins.int] bandwidth_upstream: Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
        :param pulumi.Input[builtins.str] bandwidth_upstream_variable: Variable name
        :param pulumi.Input[builtins.str] description: The description of the Feature
        :param pulumi.Input[builtins.str] feature_profile_id: Feature Profile ID
        :param pulumi.Input[builtins.str] interface_description_variable: Variable name
        :param pulumi.Input[builtins.int] interface_mtu: Interface MTU GigabitEthernet0 <1500..1518>, Other GigabitEthernet <1500..9216> in bytes - Range: `1500`-`9216` -
               Default value: `1500`
        :param pulumi.Input[builtins.str] interface_mtu_variable: Variable name
        :param pulumi.Input[builtins.str] interface_name_variable: Variable name
        :param pulumi.Input[builtins.bool] ip_directed_broadcast: IP Directed-Broadcast - Default value: `false`
        :param pulumi.Input[builtins.str] ip_directed_broadcast_variable: Variable name
        :param pulumi.Input[builtins.int] ip_mtu: IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
               <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
        :param pulumi.Input[builtins.str] ip_mtu_variable: Variable name
        :param pulumi.Input[builtins.str] ipv4_dhcp_helper_variable: Variable name
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] ipv4_dhcp_helpers: List of DHCP IPv4 helper addresses (min 1, max 8)
        :param pulumi.Input[builtins.str] name: The name of the Feature
        :param pulumi.Input[builtins.bool] nat_ipv4: Network Address Translation on this interface - Default value: `false`
        :param pulumi.Input[builtins.str] nat_ipv4_variable: Variable name
        :param pulumi.Input[builtins.int] nat_tcp_timeout: Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
        :param pulumi.Input[builtins.str] nat_tcp_timeout_variable: Variable name
        :param pulumi.Input[builtins.int] nat_udp_timeout: Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
        :param pulumi.Input[builtins.str] nat_udp_timeout_variable: Variable name
        :param pulumi.Input[builtins.bool] per_tunnel_qos: Per-tunnel Qos - Default value: `false`
        :param pulumi.Input[builtins.str] per_tunnel_qos_variable: Variable name
        :param pulumi.Input[builtins.bool] qos_adaptive: Adaptive QoS - Default value: `false`
        :param pulumi.Input[builtins.bool] qos_adaptive_bandwidth_downstream: Shaping Rate Downstream - Default value: `false`
        :param pulumi.Input[builtins.bool] qos_adaptive_bandwidth_upstream: Shaping Rate Upstream - Default value: `false`
        :param pulumi.Input[builtins.int] qos_adaptive_default_downstream: Adaptive QoS default downstream bandwidth (kbps) - Range: `8`-`100000000`
        :param pulumi.Input[builtins.str] qos_adaptive_default_downstream_variable: Variable name
        :param pulumi.Input[builtins.int] qos_adaptive_default_upstream: Adaptive QoS default upstream bandwidth (kbps) - Range: `8`-`100000000`
        :param pulumi.Input[builtins.str] qos_adaptive_default_upstream_variable: Variable name
        :param pulumi.Input[builtins.int] qos_adaptive_max_downstream: Downstream max bandwidth limit (kbps) - Range: `8`-`100000000`
        :param pulumi.Input[builtins.str] qos_adaptive_max_downstream_variable: Variable name
        :param pulumi.Input[builtins.int] qos_adaptive_max_upstream: Upstream max bandwidth limit (kbps) - Range: `8`-`100000000`
        :param pulumi.Input[builtins.str] qos_adaptive_max_upstream_variable: Variable name
        :param pulumi.Input[builtins.int] qos_adaptive_min_downstream: Downstream min bandwidth limit (kbps) - Range: `8`-`100000000`
        :param pulumi.Input[builtins.str] qos_adaptive_min_downstream_variable: Variable name
        :param pulumi.Input[builtins.int] qos_adaptive_min_upstream: Upstream min bandwidth limit (kbps) - Range: `8`-`100000000`
        :param pulumi.Input[builtins.str] qos_adaptive_min_upstream_variable: Variable name
        :param pulumi.Input[builtins.int] qos_adaptive_period: Adapt Period(Minutes) - Range: `1`-`720` - Default value: `15`
        :param pulumi.Input[builtins.str] qos_adaptive_period_variable: Variable name
        :param pulumi.Input[builtins.int] qos_shaping_rate: Shaping Rate (Kbps) - Range: `8`-`100000000`
        :param pulumi.Input[builtins.str] qos_shaping_rate_variable: Variable name
        :param pulumi.Input[builtins.str] service_provider: Service Provider Name
        :param pulumi.Input[builtins.str] service_provider_variable: Variable name
        :param pulumi.Input[builtins.bool] shutdown: - Default value: `true`
        :param pulumi.Input[builtins.str] shutdown_variable: Variable name
        :param pulumi.Input[builtins.int] tcp_mss: TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
        :param pulumi.Input[builtins.str] tcp_mss_variable: Variable name
        :param pulumi.Input[builtins.str] tloc_extension: Extends a local TLOC to a remote node only for vpn 0
        :param pulumi.Input[builtins.str] tloc_extension_variable: Variable name
        :param pulumi.Input[builtins.str] tracker: Enable tracker for this interface
        :param pulumi.Input[builtins.str] tracker_variable: Variable name
        :param pulumi.Input[builtins.str] transport_wan_vpn_feature_id: Transport WAN VPN Feature ID
        :param pulumi.Input[builtins.int] tunnel_bandwidth_percent: Tunnels Bandwidth Percent - Range: `1`-`100` - Default value: `50`
        :param pulumi.Input[builtins.str] tunnel_bandwidth_percent_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface: Tunnel Interface on/off - Default value: `false`
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_all: Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_all_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_bfd: Allow/Deny BFD - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_bfd_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_bgp: Allow/deny BGP - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_bgp_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_dhcp: Allow/Deny DHCP - Default value: `true`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_dhcp_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_dns: Allow/Deny DNS - Default value: `true`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_dns_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_https: Allow/Deny HTTPS - Default value: `true`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_https_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_icmp: Allow/Deny ICMP - Default value: `true`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_icmp_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_netconf: Allow/Deny NETCONF - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_netconf_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_ntp: Allow/Deny NTP - Default value: `true`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_ntp_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_ospf: Allow/Deny OSPF - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_ospf_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_snmp: Allow/Deny SNMP - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_snmp_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_ssh: Allow/Deny SSH - Default value: `true`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_ssh_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_allow_stun: Allow/Deny STUN - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_allow_stun_variable: Variable name
        :param pulumi.Input[builtins.str] tunnel_interface_bind_loopback_tunnel: Bind loopback tunnel interface to a physical interface
        :param pulumi.Input[builtins.str] tunnel_interface_bind_loopback_tunnel_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_border: Set TLOC as border TLOC - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_border_variable: Variable name
        :param pulumi.Input[builtins.str] tunnel_interface_carrier: Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
               `carrier7`, `carrier8` - Default value: `default`
        :param pulumi.Input[builtins.str] tunnel_interface_carrier_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_clear_dont_fragment: Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_clear_dont_fragment_variable: Variable name
        :param pulumi.Input[builtins.str] tunnel_interface_color: Set color for TLOC - Choices: `default`, `mpls`, `metro ethernet`, `biz internet`, `public internet`, `lte`, `3g`,
               `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
               `private4`, `private5`, `private6` - Default value: `mpls`
        :param pulumi.Input[builtins.bool] tunnel_interface_color_restrict: Restrict this TLOC behavior - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_color_restrict_variable: Variable name
        :param pulumi.Input[builtins.str] tunnel_interface_color_variable: Variable name
        :param pulumi.Input[Sequence[pulumi.Input[Union['TransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulationArgs', 'TransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulationArgsDict']]]] tunnel_interface_encapsulations: Encapsulation for TLOC
        :param pulumi.Input[builtins.str] tunnel_interface_exclude_controller_group_list_variable: Variable name
        :param pulumi.Input[Sequence[pulumi.Input[builtins.int]]] tunnel_interface_exclude_controller_group_lists: Exclude the following controller groups defined in this list.
        :param pulumi.Input[builtins.int] tunnel_interface_groups: List of groups - Range: `1`-`4294967295`
        :param pulumi.Input[builtins.str] tunnel_interface_groups_variable: Variable name
        :param pulumi.Input[builtins.int] tunnel_interface_hello_interval: Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
        :param pulumi.Input[builtins.str] tunnel_interface_hello_interval_variable: Variable name
        :param pulumi.Input[builtins.int] tunnel_interface_hello_tolerance: Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
        :param pulumi.Input[builtins.str] tunnel_interface_hello_tolerance_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_last_resort_circuit: Set TLOC as last resort - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_last_resort_circuit_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_low_bandwidth_link: Set the interface as a low-bandwidth circuit - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_low_bandwidth_link_variable: Variable name
        :param pulumi.Input[builtins.int] tunnel_interface_max_control_connections: Maximum Control Connections - Range: `0`-`100`
        :param pulumi.Input[builtins.str] tunnel_interface_max_control_connections_variable: Variable name
        :param pulumi.Input[builtins.int] tunnel_interface_nat_refresh_interval: Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
        :param pulumi.Input[builtins.str] tunnel_interface_nat_refresh_interval_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_network_broadcast: Accept and respond to network-prefix-directed broadcasts - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_network_broadcast_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_port_hop: Disallow port hopping on the tunnel interface - Default value: `true`
        :param pulumi.Input[builtins.str] tunnel_interface_port_hop_variable: Variable name
        :param pulumi.Input[builtins.int] tunnel_interface_tunnel_tcp_mss: Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
        :param pulumi.Input[builtins.str] tunnel_interface_tunnel_tcp_mss_variable: Variable name
        :param pulumi.Input[builtins.bool] tunnel_interface_vbond_as_stun_server: Put this wan interface in STUN mode only - Default value: `false`
        :param pulumi.Input[builtins.str] tunnel_interface_vbond_as_stun_server_variable: Variable name
        :param pulumi.Input[builtins.int] tunnel_interface_vmanage_connection_preference: Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
        :param pulumi.Input[builtins.str] tunnel_interface_vmanage_connection_preference_variable: Variable name
        :param pulumi.Input[builtins.str] tunnel_qos_mode: Set tunnel QoS mode - Choices: `hub`, `spoke`
        :param pulumi.Input[builtins.str] tunnel_qos_mode_variable: Variable name
        :param pulumi.Input[builtins.int] version: The version of the Feature
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _TransportWanVpnInterfaceCellularFeatureState.__new__(_TransportWanVpnInterfaceCellularFeatureState)

        __props__.__dict__["acl_ipv4_egress_feature_id"] = acl_ipv4_egress_feature_id
        __props__.__dict__["acl_ipv4_ingress_feature_id"] = acl_ipv4_ingress_feature_id
        __props__.__dict__["acl_ipv6_egress_feature_id"] = acl_ipv6_egress_feature_id
        __props__.__dict__["acl_ipv6_ingress_feature_id"] = acl_ipv6_ingress_feature_id
        __props__.__dict__["arps"] = arps
        __props__.__dict__["bandwidth_downstream"] = bandwidth_downstream
        __props__.__dict__["bandwidth_downstream_variable"] = bandwidth_downstream_variable
        __props__.__dict__["bandwidth_upstream"] = bandwidth_upstream
        __props__.__dict__["bandwidth_upstream_variable"] = bandwidth_upstream_variable
        __props__.__dict__["description"] = description
        __props__.__dict__["feature_profile_id"] = feature_profile_id
        __props__.__dict__["interface_description"] = interface_description
        __props__.__dict__["interface_description_variable"] = interface_description_variable
        __props__.__dict__["interface_mtu"] = interface_mtu
        __props__.__dict__["interface_mtu_variable"] = interface_mtu_variable
        __props__.__dict__["interface_name"] = interface_name
        __props__.__dict__["interface_name_variable"] = interface_name_variable
        __props__.__dict__["ip_directed_broadcast"] = ip_directed_broadcast
        __props__.__dict__["ip_directed_broadcast_variable"] = ip_directed_broadcast_variable
        __props__.__dict__["ip_mtu"] = ip_mtu
        __props__.__dict__["ip_mtu_variable"] = ip_mtu_variable
        __props__.__dict__["ipv4_dhcp_helper_variable"] = ipv4_dhcp_helper_variable
        __props__.__dict__["ipv4_dhcp_helpers"] = ipv4_dhcp_helpers
        __props__.__dict__["name"] = name
        __props__.__dict__["nat_ipv4"] = nat_ipv4
        __props__.__dict__["nat_ipv4_variable"] = nat_ipv4_variable
        __props__.__dict__["nat_tcp_timeout"] = nat_tcp_timeout
        __props__.__dict__["nat_tcp_timeout_variable"] = nat_tcp_timeout_variable
        __props__.__dict__["nat_udp_timeout"] = nat_udp_timeout
        __props__.__dict__["nat_udp_timeout_variable"] = nat_udp_timeout_variable
        __props__.__dict__["per_tunnel_qos"] = per_tunnel_qos
        __props__.__dict__["per_tunnel_qos_variable"] = per_tunnel_qos_variable
        __props__.__dict__["qos_adaptive"] = qos_adaptive
        __props__.__dict__["qos_adaptive_bandwidth_downstream"] = qos_adaptive_bandwidth_downstream
        __props__.__dict__["qos_adaptive_bandwidth_upstream"] = qos_adaptive_bandwidth_upstream
        __props__.__dict__["qos_adaptive_default_downstream"] = qos_adaptive_default_downstream
        __props__.__dict__["qos_adaptive_default_downstream_variable"] = qos_adaptive_default_downstream_variable
        __props__.__dict__["qos_adaptive_default_upstream"] = qos_adaptive_default_upstream
        __props__.__dict__["qos_adaptive_default_upstream_variable"] = qos_adaptive_default_upstream_variable
        __props__.__dict__["qos_adaptive_max_downstream"] = qos_adaptive_max_downstream
        __props__.__dict__["qos_adaptive_max_downstream_variable"] = qos_adaptive_max_downstream_variable
        __props__.__dict__["qos_adaptive_max_upstream"] = qos_adaptive_max_upstream
        __props__.__dict__["qos_adaptive_max_upstream_variable"] = qos_adaptive_max_upstream_variable
        __props__.__dict__["qos_adaptive_min_downstream"] = qos_adaptive_min_downstream
        __props__.__dict__["qos_adaptive_min_downstream_variable"] = qos_adaptive_min_downstream_variable
        __props__.__dict__["qos_adaptive_min_upstream"] = qos_adaptive_min_upstream
        __props__.__dict__["qos_adaptive_min_upstream_variable"] = qos_adaptive_min_upstream_variable
        __props__.__dict__["qos_adaptive_period"] = qos_adaptive_period
        __props__.__dict__["qos_adaptive_period_variable"] = qos_adaptive_period_variable
        __props__.__dict__["qos_shaping_rate"] = qos_shaping_rate
        __props__.__dict__["qos_shaping_rate_variable"] = qos_shaping_rate_variable
        __props__.__dict__["service_provider"] = service_provider
        __props__.__dict__["service_provider_variable"] = service_provider_variable
        __props__.__dict__["shutdown"] = shutdown
        __props__.__dict__["shutdown_variable"] = shutdown_variable
        __props__.__dict__["tcp_mss"] = tcp_mss
        __props__.__dict__["tcp_mss_variable"] = tcp_mss_variable
        __props__.__dict__["tloc_extension"] = tloc_extension
        __props__.__dict__["tloc_extension_variable"] = tloc_extension_variable
        __props__.__dict__["tracker"] = tracker
        __props__.__dict__["tracker_variable"] = tracker_variable
        __props__.__dict__["transport_wan_vpn_feature_id"] = transport_wan_vpn_feature_id
        __props__.__dict__["tunnel_bandwidth_percent"] = tunnel_bandwidth_percent
        __props__.__dict__["tunnel_bandwidth_percent_variable"] = tunnel_bandwidth_percent_variable
        __props__.__dict__["tunnel_interface"] = tunnel_interface
        __props__.__dict__["tunnel_interface_allow_all"] = tunnel_interface_allow_all
        __props__.__dict__["tunnel_interface_allow_all_variable"] = tunnel_interface_allow_all_variable
        __props__.__dict__["tunnel_interface_allow_bfd"] = tunnel_interface_allow_bfd
        __props__.__dict__["tunnel_interface_allow_bfd_variable"] = tunnel_interface_allow_bfd_variable
        __props__.__dict__["tunnel_interface_allow_bgp"] = tunnel_interface_allow_bgp
        __props__.__dict__["tunnel_interface_allow_bgp_variable"] = tunnel_interface_allow_bgp_variable
        __props__.__dict__["tunnel_interface_allow_dhcp"] = tunnel_interface_allow_dhcp
        __props__.__dict__["tunnel_interface_allow_dhcp_variable"] = tunnel_interface_allow_dhcp_variable
        __props__.__dict__["tunnel_interface_allow_dns"] = tunnel_interface_allow_dns
        __props__.__dict__["tunnel_interface_allow_dns_variable"] = tunnel_interface_allow_dns_variable
        __props__.__dict__["tunnel_interface_allow_https"] = tunnel_interface_allow_https
        __props__.__dict__["tunnel_interface_allow_https_variable"] = tunnel_interface_allow_https_variable
        __props__.__dict__["tunnel_interface_allow_icmp"] = tunnel_interface_allow_icmp
        __props__.__dict__["tunnel_interface_allow_icmp_variable"] = tunnel_interface_allow_icmp_variable
        __props__.__dict__["tunnel_interface_allow_netconf"] = tunnel_interface_allow_netconf
        __props__.__dict__["tunnel_interface_allow_netconf_variable"] = tunnel_interface_allow_netconf_variable
        __props__.__dict__["tunnel_interface_allow_ntp"] = tunnel_interface_allow_ntp
        __props__.__dict__["tunnel_interface_allow_ntp_variable"] = tunnel_interface_allow_ntp_variable
        __props__.__dict__["tunnel_interface_allow_ospf"] = tunnel_interface_allow_ospf
        __props__.__dict__["tunnel_interface_allow_ospf_variable"] = tunnel_interface_allow_ospf_variable
        __props__.__dict__["tunnel_interface_allow_snmp"] = tunnel_interface_allow_snmp
        __props__.__dict__["tunnel_interface_allow_snmp_variable"] = tunnel_interface_allow_snmp_variable
        __props__.__dict__["tunnel_interface_allow_ssh"] = tunnel_interface_allow_ssh
        __props__.__dict__["tunnel_interface_allow_ssh_variable"] = tunnel_interface_allow_ssh_variable
        __props__.__dict__["tunnel_interface_allow_stun"] = tunnel_interface_allow_stun
        __props__.__dict__["tunnel_interface_allow_stun_variable"] = tunnel_interface_allow_stun_variable
        __props__.__dict__["tunnel_interface_bind_loopback_tunnel"] = tunnel_interface_bind_loopback_tunnel
        __props__.__dict__["tunnel_interface_bind_loopback_tunnel_variable"] = tunnel_interface_bind_loopback_tunnel_variable
        __props__.__dict__["tunnel_interface_border"] = tunnel_interface_border
        __props__.__dict__["tunnel_interface_border_variable"] = tunnel_interface_border_variable
        __props__.__dict__["tunnel_interface_carrier"] = tunnel_interface_carrier
        __props__.__dict__["tunnel_interface_carrier_variable"] = tunnel_interface_carrier_variable
        __props__.__dict__["tunnel_interface_clear_dont_fragment"] = tunnel_interface_clear_dont_fragment
        __props__.__dict__["tunnel_interface_clear_dont_fragment_variable"] = tunnel_interface_clear_dont_fragment_variable
        __props__.__dict__["tunnel_interface_color"] = tunnel_interface_color
        __props__.__dict__["tunnel_interface_color_restrict"] = tunnel_interface_color_restrict
        __props__.__dict__["tunnel_interface_color_restrict_variable"] = tunnel_interface_color_restrict_variable
        __props__.__dict__["tunnel_interface_color_variable"] = tunnel_interface_color_variable
        __props__.__dict__["tunnel_interface_encapsulations"] = tunnel_interface_encapsulations
        __props__.__dict__["tunnel_interface_exclude_controller_group_list_variable"] = tunnel_interface_exclude_controller_group_list_variable
        __props__.__dict__["tunnel_interface_exclude_controller_group_lists"] = tunnel_interface_exclude_controller_group_lists
        __props__.__dict__["tunnel_interface_groups"] = tunnel_interface_groups
        __props__.__dict__["tunnel_interface_groups_variable"] = tunnel_interface_groups_variable
        __props__.__dict__["tunnel_interface_hello_interval"] = tunnel_interface_hello_interval
        __props__.__dict__["tunnel_interface_hello_interval_variable"] = tunnel_interface_hello_interval_variable
        __props__.__dict__["tunnel_interface_hello_tolerance"] = tunnel_interface_hello_tolerance
        __props__.__dict__["tunnel_interface_hello_tolerance_variable"] = tunnel_interface_hello_tolerance_variable
        __props__.__dict__["tunnel_interface_last_resort_circuit"] = tunnel_interface_last_resort_circuit
        __props__.__dict__["tunnel_interface_last_resort_circuit_variable"] = tunnel_interface_last_resort_circuit_variable
        __props__.__dict__["tunnel_interface_low_bandwidth_link"] = tunnel_interface_low_bandwidth_link
        __props__.__dict__["tunnel_interface_low_bandwidth_link_variable"] = tunnel_interface_low_bandwidth_link_variable
        __props__.__dict__["tunnel_interface_max_control_connections"] = tunnel_interface_max_control_connections
        __props__.__dict__["tunnel_interface_max_control_connections_variable"] = tunnel_interface_max_control_connections_variable
        __props__.__dict__["tunnel_interface_nat_refresh_interval"] = tunnel_interface_nat_refresh_interval
        __props__.__dict__["tunnel_interface_nat_refresh_interval_variable"] = tunnel_interface_nat_refresh_interval_variable
        __props__.__dict__["tunnel_interface_network_broadcast"] = tunnel_interface_network_broadcast
        __props__.__dict__["tunnel_interface_network_broadcast_variable"] = tunnel_interface_network_broadcast_variable
        __props__.__dict__["tunnel_interface_port_hop"] = tunnel_interface_port_hop
        __props__.__dict__["tunnel_interface_port_hop_variable"] = tunnel_interface_port_hop_variable
        __props__.__dict__["tunnel_interface_tunnel_tcp_mss"] = tunnel_interface_tunnel_tcp_mss
        __props__.__dict__["tunnel_interface_tunnel_tcp_mss_variable"] = tunnel_interface_tunnel_tcp_mss_variable
        __props__.__dict__["tunnel_interface_vbond_as_stun_server"] = tunnel_interface_vbond_as_stun_server
        __props__.__dict__["tunnel_interface_vbond_as_stun_server_variable"] = tunnel_interface_vbond_as_stun_server_variable
        __props__.__dict__["tunnel_interface_vmanage_connection_preference"] = tunnel_interface_vmanage_connection_preference
        __props__.__dict__["tunnel_interface_vmanage_connection_preference_variable"] = tunnel_interface_vmanage_connection_preference_variable
        __props__.__dict__["tunnel_qos_mode"] = tunnel_qos_mode
        __props__.__dict__["tunnel_qos_mode_variable"] = tunnel_qos_mode_variable
        __props__.__dict__["version"] = version
        return TransportWanVpnInterfaceCellularFeature(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="aclIpv4EgressFeatureId")
    def acl_ipv4_egress_feature_id(self) -> pulumi.Output[Optional[builtins.str]]:
        return pulumi.get(self, "acl_ipv4_egress_feature_id")

    @property
    @pulumi.getter(name="aclIpv4IngressFeatureId")
    def acl_ipv4_ingress_feature_id(self) -> pulumi.Output[Optional[builtins.str]]:
        return pulumi.get(self, "acl_ipv4_ingress_feature_id")

    @property
    @pulumi.getter(name="aclIpv6EgressFeatureId")
    def acl_ipv6_egress_feature_id(self) -> pulumi.Output[Optional[builtins.str]]:
        return pulumi.get(self, "acl_ipv6_egress_feature_id")

    @property
    @pulumi.getter(name="aclIpv6IngressFeatureId")
    def acl_ipv6_ingress_feature_id(self) -> pulumi.Output[Optional[builtins.str]]:
        return pulumi.get(self, "acl_ipv6_ingress_feature_id")

    @property
    @pulumi.getter
    def arps(self) -> pulumi.Output[Optional[Sequence['outputs.TransportWanVpnInterfaceCellularFeatureArp']]]:
        """
        Configure ARP entries
        """
        return pulumi.get(self, "arps")

    @property
    @pulumi.getter(name="bandwidthDownstream")
    def bandwidth_downstream(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        Interface downstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
        """
        return pulumi.get(self, "bandwidth_downstream")

    @property
    @pulumi.getter(name="bandwidthDownstreamVariable")
    def bandwidth_downstream_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "bandwidth_downstream_variable")

    @property
    @pulumi.getter(name="bandwidthUpstream")
    def bandwidth_upstream(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        Interface upstream bandwidth capacity, in kbps - Range: `1`-`2147483647`
        """
        return pulumi.get(self, "bandwidth_upstream")

    @property
    @pulumi.getter(name="bandwidthUpstreamVariable")
    def bandwidth_upstream_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "bandwidth_upstream_variable")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        The description of the Feature
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="featureProfileId")
    def feature_profile_id(self) -> pulumi.Output[builtins.str]:
        """
        Feature Profile ID
        """
        return pulumi.get(self, "feature_profile_id")

    @property
    @pulumi.getter(name="interfaceDescription")
    def interface_description(self) -> pulumi.Output[Optional[builtins.str]]:
        return pulumi.get(self, "interface_description")

    @property
    @pulumi.getter(name="interfaceDescriptionVariable")
    def interface_description_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "interface_description_variable")

    @property
    @pulumi.getter(name="interfaceMtu")
    def interface_mtu(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        Interface MTU GigabitEthernet0 <1500..1518>, Other GigabitEthernet <1500..9216> in bytes - Range: `1500`-`9216` -
        Default value: `1500`
        """
        return pulumi.get(self, "interface_mtu")

    @property
    @pulumi.getter(name="interfaceMtuVariable")
    def interface_mtu_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "interface_mtu_variable")

    @property
    @pulumi.getter(name="interfaceName")
    def interface_name(self) -> pulumi.Output[Optional[builtins.str]]:
        return pulumi.get(self, "interface_name")

    @property
    @pulumi.getter(name="interfaceNameVariable")
    def interface_name_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "interface_name_variable")

    @property
    @pulumi.getter(name="ipDirectedBroadcast")
    def ip_directed_broadcast(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        IP Directed-Broadcast - Default value: `false`
        """
        return pulumi.get(self, "ip_directed_broadcast")

    @property
    @pulumi.getter(name="ipDirectedBroadcastVariable")
    def ip_directed_broadcast_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ip_directed_broadcast_variable")

    @property
    @pulumi.getter(name="ipMtu")
    def ip_mtu(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        IP MTU for GigabitEthernet main <576..Interface MTU>, GigabitEthernet subinterface <576..9216>, Other Interfaces
        <576..2000> in bytes - Range: `576`-`9216` - Default value: `1500`
        """
        return pulumi.get(self, "ip_mtu")

    @property
    @pulumi.getter(name="ipMtuVariable")
    def ip_mtu_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ip_mtu_variable")

    @property
    @pulumi.getter(name="ipv4DhcpHelperVariable")
    def ipv4_dhcp_helper_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ipv4_dhcp_helper_variable")

    @property
    @pulumi.getter(name="ipv4DhcpHelpers")
    def ipv4_dhcp_helpers(self) -> pulumi.Output[Optional[Sequence[builtins.str]]]:
        """
        List of DHCP IPv4 helper addresses (min 1, max 8)
        """
        return pulumi.get(self, "ipv4_dhcp_helpers")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[builtins.str]:
        """
        The name of the Feature
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="natIpv4")
    def nat_ipv4(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Network Address Translation on this interface - Default value: `false`
        """
        return pulumi.get(self, "nat_ipv4")

    @property
    @pulumi.getter(name="natIpv4Variable")
    def nat_ipv4_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "nat_ipv4_variable")

    @property
    @pulumi.getter(name="natTcpTimeout")
    def nat_tcp_timeout(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        Set NAT TCP session timeout, in minutes - Range: `1`-`8947` - Default value: `60`
        """
        return pulumi.get(self, "nat_tcp_timeout")

    @property
    @pulumi.getter(name="natTcpTimeoutVariable")
    def nat_tcp_timeout_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "nat_tcp_timeout_variable")

    @property
    @pulumi.getter(name="natUdpTimeout")
    def nat_udp_timeout(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        Set NAT UDP session timeout, in minutes - Range: `1`-`8947` - Default value: `1`
        """
        return pulumi.get(self, "nat_udp_timeout")

    @property
    @pulumi.getter(name="natUdpTimeoutVariable")
    def nat_udp_timeout_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "nat_udp_timeout_variable")

    @property
    @pulumi.getter(name="perTunnelQos")
    def per_tunnel_qos(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Per-tunnel Qos - Default value: `false`
        """
        return pulumi.get(self, "per_tunnel_qos")

    @property
    @pulumi.getter(name="perTunnelQosVariable")
    def per_tunnel_qos_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "per_tunnel_qos_variable")

    @property
    @pulumi.getter(name="qosAdaptive")
    def qos_adaptive(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Adaptive QoS - Default value: `false`
        """
        return pulumi.get(self, "qos_adaptive")

    @property
    @pulumi.getter(name="qosAdaptiveBandwidthDownstream")
    def qos_adaptive_bandwidth_downstream(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Shaping Rate Downstream - Default value: `false`
        """
        return pulumi.get(self, "qos_adaptive_bandwidth_downstream")

    @property
    @pulumi.getter(name="qosAdaptiveBandwidthUpstream")
    def qos_adaptive_bandwidth_upstream(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Shaping Rate Upstream - Default value: `false`
        """
        return pulumi.get(self, "qos_adaptive_bandwidth_upstream")

    @property
    @pulumi.getter(name="qosAdaptiveDefaultDownstream")
    def qos_adaptive_default_downstream(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        Adaptive QoS default downstream bandwidth (kbps) - Range: `8`-`100000000`
        """
        return pulumi.get(self, "qos_adaptive_default_downstream")

    @property
    @pulumi.getter(name="qosAdaptiveDefaultDownstreamVariable")
    def qos_adaptive_default_downstream_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "qos_adaptive_default_downstream_variable")

    @property
    @pulumi.getter(name="qosAdaptiveDefaultUpstream")
    def qos_adaptive_default_upstream(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        Adaptive QoS default upstream bandwidth (kbps) - Range: `8`-`100000000`
        """
        return pulumi.get(self, "qos_adaptive_default_upstream")

    @property
    @pulumi.getter(name="qosAdaptiveDefaultUpstreamVariable")
    def qos_adaptive_default_upstream_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "qos_adaptive_default_upstream_variable")

    @property
    @pulumi.getter(name="qosAdaptiveMaxDownstream")
    def qos_adaptive_max_downstream(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        Downstream max bandwidth limit (kbps) - Range: `8`-`100000000`
        """
        return pulumi.get(self, "qos_adaptive_max_downstream")

    @property
    @pulumi.getter(name="qosAdaptiveMaxDownstreamVariable")
    def qos_adaptive_max_downstream_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "qos_adaptive_max_downstream_variable")

    @property
    @pulumi.getter(name="qosAdaptiveMaxUpstream")
    def qos_adaptive_max_upstream(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        Upstream max bandwidth limit (kbps) - Range: `8`-`100000000`
        """
        return pulumi.get(self, "qos_adaptive_max_upstream")

    @property
    @pulumi.getter(name="qosAdaptiveMaxUpstreamVariable")
    def qos_adaptive_max_upstream_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "qos_adaptive_max_upstream_variable")

    @property
    @pulumi.getter(name="qosAdaptiveMinDownstream")
    def qos_adaptive_min_downstream(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        Downstream min bandwidth limit (kbps) - Range: `8`-`100000000`
        """
        return pulumi.get(self, "qos_adaptive_min_downstream")

    @property
    @pulumi.getter(name="qosAdaptiveMinDownstreamVariable")
    def qos_adaptive_min_downstream_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "qos_adaptive_min_downstream_variable")

    @property
    @pulumi.getter(name="qosAdaptiveMinUpstream")
    def qos_adaptive_min_upstream(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        Upstream min bandwidth limit (kbps) - Range: `8`-`100000000`
        """
        return pulumi.get(self, "qos_adaptive_min_upstream")

    @property
    @pulumi.getter(name="qosAdaptiveMinUpstreamVariable")
    def qos_adaptive_min_upstream_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "qos_adaptive_min_upstream_variable")

    @property
    @pulumi.getter(name="qosAdaptivePeriod")
    def qos_adaptive_period(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        Adapt Period(Minutes) - Range: `1`-`720` - Default value: `15`
        """
        return pulumi.get(self, "qos_adaptive_period")

    @property
    @pulumi.getter(name="qosAdaptivePeriodVariable")
    def qos_adaptive_period_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "qos_adaptive_period_variable")

    @property
    @pulumi.getter(name="qosShapingRate")
    def qos_shaping_rate(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        Shaping Rate (Kbps) - Range: `8`-`100000000`
        """
        return pulumi.get(self, "qos_shaping_rate")

    @property
    @pulumi.getter(name="qosShapingRateVariable")
    def qos_shaping_rate_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "qos_shaping_rate_variable")

    @property
    @pulumi.getter(name="serviceProvider")
    def service_provider(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Service Provider Name
        """
        return pulumi.get(self, "service_provider")

    @property
    @pulumi.getter(name="serviceProviderVariable")
    def service_provider_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "service_provider_variable")

    @property
    @pulumi.getter
    def shutdown(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        - Default value: `true`
        """
        return pulumi.get(self, "shutdown")

    @property
    @pulumi.getter(name="shutdownVariable")
    def shutdown_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "shutdown_variable")

    @property
    @pulumi.getter(name="tcpMss")
    def tcp_mss(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
        """
        return pulumi.get(self, "tcp_mss")

    @property
    @pulumi.getter(name="tcpMssVariable")
    def tcp_mss_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tcp_mss_variable")

    @property
    @pulumi.getter(name="tlocExtension")
    def tloc_extension(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Extends a local TLOC to a remote node only for vpn 0
        """
        return pulumi.get(self, "tloc_extension")

    @property
    @pulumi.getter(name="tlocExtensionVariable")
    def tloc_extension_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tloc_extension_variable")

    @property
    @pulumi.getter
    def tracker(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Enable tracker for this interface
        """
        return pulumi.get(self, "tracker")

    @property
    @pulumi.getter(name="trackerVariable")
    def tracker_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tracker_variable")

    @property
    @pulumi.getter(name="transportWanVpnFeatureId")
    def transport_wan_vpn_feature_id(self) -> pulumi.Output[builtins.str]:
        """
        Transport WAN VPN Feature ID
        """
        return pulumi.get(self, "transport_wan_vpn_feature_id")

    @property
    @pulumi.getter(name="tunnelBandwidthPercent")
    def tunnel_bandwidth_percent(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        Tunnels Bandwidth Percent - Range: `1`-`100` - Default value: `50`
        """
        return pulumi.get(self, "tunnel_bandwidth_percent")

    @property
    @pulumi.getter(name="tunnelBandwidthPercentVariable")
    def tunnel_bandwidth_percent_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_bandwidth_percent_variable")

    @property
    @pulumi.getter(name="tunnelInterface")
    def tunnel_interface(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Tunnel Interface on/off - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface")

    @property
    @pulumi.getter(name="tunnelInterfaceAllowAll")
    def tunnel_interface_allow_all(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Allow all traffic. Overrides all other allow-service options if allow-service all is set - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_allow_all")

    @property
    @pulumi.getter(name="tunnelInterfaceAllowAllVariable")
    def tunnel_interface_allow_all_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_all_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceAllowBfd")
    def tunnel_interface_allow_bfd(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Allow/Deny BFD - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_allow_bfd")

    @property
    @pulumi.getter(name="tunnelInterfaceAllowBfdVariable")
    def tunnel_interface_allow_bfd_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_bfd_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceAllowBgp")
    def tunnel_interface_allow_bgp(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Allow/deny BGP - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_allow_bgp")

    @property
    @pulumi.getter(name="tunnelInterfaceAllowBgpVariable")
    def tunnel_interface_allow_bgp_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_bgp_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceAllowDhcp")
    def tunnel_interface_allow_dhcp(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Allow/Deny DHCP - Default value: `true`
        """
        return pulumi.get(self, "tunnel_interface_allow_dhcp")

    @property
    @pulumi.getter(name="tunnelInterfaceAllowDhcpVariable")
    def tunnel_interface_allow_dhcp_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_dhcp_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceAllowDns")
    def tunnel_interface_allow_dns(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Allow/Deny DNS - Default value: `true`
        """
        return pulumi.get(self, "tunnel_interface_allow_dns")

    @property
    @pulumi.getter(name="tunnelInterfaceAllowDnsVariable")
    def tunnel_interface_allow_dns_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_dns_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceAllowHttps")
    def tunnel_interface_allow_https(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Allow/Deny HTTPS - Default value: `true`
        """
        return pulumi.get(self, "tunnel_interface_allow_https")

    @property
    @pulumi.getter(name="tunnelInterfaceAllowHttpsVariable")
    def tunnel_interface_allow_https_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_https_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceAllowIcmp")
    def tunnel_interface_allow_icmp(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Allow/Deny ICMP - Default value: `true`
        """
        return pulumi.get(self, "tunnel_interface_allow_icmp")

    @property
    @pulumi.getter(name="tunnelInterfaceAllowIcmpVariable")
    def tunnel_interface_allow_icmp_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_icmp_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceAllowNetconf")
    def tunnel_interface_allow_netconf(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Allow/Deny NETCONF - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_allow_netconf")

    @property
    @pulumi.getter(name="tunnelInterfaceAllowNetconfVariable")
    def tunnel_interface_allow_netconf_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_netconf_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceAllowNtp")
    def tunnel_interface_allow_ntp(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Allow/Deny NTP - Default value: `true`
        """
        return pulumi.get(self, "tunnel_interface_allow_ntp")

    @property
    @pulumi.getter(name="tunnelInterfaceAllowNtpVariable")
    def tunnel_interface_allow_ntp_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_ntp_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceAllowOspf")
    def tunnel_interface_allow_ospf(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Allow/Deny OSPF - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_allow_ospf")

    @property
    @pulumi.getter(name="tunnelInterfaceAllowOspfVariable")
    def tunnel_interface_allow_ospf_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_ospf_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceAllowSnmp")
    def tunnel_interface_allow_snmp(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Allow/Deny SNMP - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_allow_snmp")

    @property
    @pulumi.getter(name="tunnelInterfaceAllowSnmpVariable")
    def tunnel_interface_allow_snmp_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_snmp_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceAllowSsh")
    def tunnel_interface_allow_ssh(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Allow/Deny SSH - Default value: `true`
        """
        return pulumi.get(self, "tunnel_interface_allow_ssh")

    @property
    @pulumi.getter(name="tunnelInterfaceAllowSshVariable")
    def tunnel_interface_allow_ssh_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_ssh_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceAllowStun")
    def tunnel_interface_allow_stun(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Allow/Deny STUN - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_allow_stun")

    @property
    @pulumi.getter(name="tunnelInterfaceAllowStunVariable")
    def tunnel_interface_allow_stun_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_allow_stun_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceBindLoopbackTunnel")
    def tunnel_interface_bind_loopback_tunnel(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Bind loopback tunnel interface to a physical interface
        """
        return pulumi.get(self, "tunnel_interface_bind_loopback_tunnel")

    @property
    @pulumi.getter(name="tunnelInterfaceBindLoopbackTunnelVariable")
    def tunnel_interface_bind_loopback_tunnel_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_bind_loopback_tunnel_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceBorder")
    def tunnel_interface_border(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Set TLOC as border TLOC - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_border")

    @property
    @pulumi.getter(name="tunnelInterfaceBorderVariable")
    def tunnel_interface_border_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_border_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceCarrier")
    def tunnel_interface_carrier(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Set carrier for TLOC - Choices: `default`, `carrier1`, `carrier2`, `carrier3`, `carrier4`, `carrier5`, `carrier6`,
        `carrier7`, `carrier8` - Default value: `default`
        """
        return pulumi.get(self, "tunnel_interface_carrier")

    @property
    @pulumi.getter(name="tunnelInterfaceCarrierVariable")
    def tunnel_interface_carrier_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_carrier_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceClearDontFragment")
    def tunnel_interface_clear_dont_fragment(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Enable clear dont fragment (Currently Only SDWAN Tunnel Interface) - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_clear_dont_fragment")

    @property
    @pulumi.getter(name="tunnelInterfaceClearDontFragmentVariable")
    def tunnel_interface_clear_dont_fragment_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_clear_dont_fragment_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceColor")
    def tunnel_interface_color(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Set color for TLOC - Choices: `default`, `mpls`, `metro ethernet`, `biz internet`, `public internet`, `lte`, `3g`,
        `red`, `green`, `blue`, `gold`, `silver`, `bronze`, `custom1`, `custom2`, `custom3`, `private1`, `private2`, `private3`,
        `private4`, `private5`, `private6` - Default value: `mpls`
        """
        return pulumi.get(self, "tunnel_interface_color")

    @property
    @pulumi.getter(name="tunnelInterfaceColorRestrict")
    def tunnel_interface_color_restrict(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Restrict this TLOC behavior - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_color_restrict")

    @property
    @pulumi.getter(name="tunnelInterfaceColorRestrictVariable")
    def tunnel_interface_color_restrict_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_color_restrict_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceColorVariable")
    def tunnel_interface_color_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_color_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceEncapsulations")
    def tunnel_interface_encapsulations(self) -> pulumi.Output[Optional[Sequence['outputs.TransportWanVpnInterfaceCellularFeatureTunnelInterfaceEncapsulation']]]:
        """
        Encapsulation for TLOC
        """
        return pulumi.get(self, "tunnel_interface_encapsulations")

    @property
    @pulumi.getter(name="tunnelInterfaceExcludeControllerGroupListVariable")
    def tunnel_interface_exclude_controller_group_list_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_exclude_controller_group_list_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceExcludeControllerGroupLists")
    def tunnel_interface_exclude_controller_group_lists(self) -> pulumi.Output[Optional[Sequence[builtins.int]]]:
        """
        Exclude the following controller groups defined in this list.
        """
        return pulumi.get(self, "tunnel_interface_exclude_controller_group_lists")

    @property
    @pulumi.getter(name="tunnelInterfaceGroups")
    def tunnel_interface_groups(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        List of groups - Range: `1`-`4294967295`
        """
        return pulumi.get(self, "tunnel_interface_groups")

    @property
    @pulumi.getter(name="tunnelInterfaceGroupsVariable")
    def tunnel_interface_groups_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_groups_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceHelloInterval")
    def tunnel_interface_hello_interval(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        Set time period of control hello packets <100..600000> milli seconds - Range: `100`-`600000` - Default value: `1000`
        """
        return pulumi.get(self, "tunnel_interface_hello_interval")

    @property
    @pulumi.getter(name="tunnelInterfaceHelloIntervalVariable")
    def tunnel_interface_hello_interval_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_hello_interval_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceHelloTolerance")
    def tunnel_interface_hello_tolerance(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        Set tolerance of control hello packets <12..6000> seconds - Range: `12`-`6000` - Default value: `12`
        """
        return pulumi.get(self, "tunnel_interface_hello_tolerance")

    @property
    @pulumi.getter(name="tunnelInterfaceHelloToleranceVariable")
    def tunnel_interface_hello_tolerance_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_hello_tolerance_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceLastResortCircuit")
    def tunnel_interface_last_resort_circuit(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Set TLOC as last resort - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_last_resort_circuit")

    @property
    @pulumi.getter(name="tunnelInterfaceLastResortCircuitVariable")
    def tunnel_interface_last_resort_circuit_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_last_resort_circuit_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceLowBandwidthLink")
    def tunnel_interface_low_bandwidth_link(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Set the interface as a low-bandwidth circuit - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_low_bandwidth_link")

    @property
    @pulumi.getter(name="tunnelInterfaceLowBandwidthLinkVariable")
    def tunnel_interface_low_bandwidth_link_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_low_bandwidth_link_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceMaxControlConnections")
    def tunnel_interface_max_control_connections(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        Maximum Control Connections - Range: `0`-`100`
        """
        return pulumi.get(self, "tunnel_interface_max_control_connections")

    @property
    @pulumi.getter(name="tunnelInterfaceMaxControlConnectionsVariable")
    def tunnel_interface_max_control_connections_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_max_control_connections_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceNatRefreshInterval")
    def tunnel_interface_nat_refresh_interval(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        Set time period of nat refresh packets <1...60> seconds - Range: `1`-`60` - Default value: `5`
        """
        return pulumi.get(self, "tunnel_interface_nat_refresh_interval")

    @property
    @pulumi.getter(name="tunnelInterfaceNatRefreshIntervalVariable")
    def tunnel_interface_nat_refresh_interval_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_nat_refresh_interval_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceNetworkBroadcast")
    def tunnel_interface_network_broadcast(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Accept and respond to network-prefix-directed broadcasts - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_network_broadcast")

    @property
    @pulumi.getter(name="tunnelInterfaceNetworkBroadcastVariable")
    def tunnel_interface_network_broadcast_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_network_broadcast_variable")

    @property
    @pulumi.getter(name="tunnelInterfacePortHop")
    def tunnel_interface_port_hop(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Disallow port hopping on the tunnel interface - Default value: `true`
        """
        return pulumi.get(self, "tunnel_interface_port_hop")

    @property
    @pulumi.getter(name="tunnelInterfacePortHopVariable")
    def tunnel_interface_port_hop_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_port_hop_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceTunnelTcpMss")
    def tunnel_interface_tunnel_tcp_mss(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        Tunnel TCP MSS on SYN packets, in bytes - Range: `500`-`1460`
        """
        return pulumi.get(self, "tunnel_interface_tunnel_tcp_mss")

    @property
    @pulumi.getter(name="tunnelInterfaceTunnelTcpMssVariable")
    def tunnel_interface_tunnel_tcp_mss_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_tunnel_tcp_mss_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceVbondAsStunServer")
    def tunnel_interface_vbond_as_stun_server(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Put this wan interface in STUN mode only - Default value: `false`
        """
        return pulumi.get(self, "tunnel_interface_vbond_as_stun_server")

    @property
    @pulumi.getter(name="tunnelInterfaceVbondAsStunServerVariable")
    def tunnel_interface_vbond_as_stun_server_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_vbond_as_stun_server_variable")

    @property
    @pulumi.getter(name="tunnelInterfaceVmanageConnectionPreference")
    def tunnel_interface_vmanage_connection_preference(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        Set interface preference for control connection to vManage <0..8> - Range: `0`-`8` - Default value: `5`
        """
        return pulumi.get(self, "tunnel_interface_vmanage_connection_preference")

    @property
    @pulumi.getter(name="tunnelInterfaceVmanageConnectionPreferenceVariable")
    def tunnel_interface_vmanage_connection_preference_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_interface_vmanage_connection_preference_variable")

    @property
    @pulumi.getter(name="tunnelQosMode")
    def tunnel_qos_mode(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Set tunnel QoS mode - Choices: `hub`, `spoke`
        """
        return pulumi.get(self, "tunnel_qos_mode")

    @property
    @pulumi.getter(name="tunnelQosModeVariable")
    def tunnel_qos_mode_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_qos_mode_variable")

    @property
    @pulumi.getter
    def version(self) -> pulumi.Output[builtins.int]:
        """
        The version of the Feature
        """
        return pulumi.get(self, "version")

