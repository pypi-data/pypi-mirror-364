# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetZoneBasedFirewallPolicyDefinitionResult',
    'AwaitableGetZoneBasedFirewallPolicyDefinitionResult',
    'get_zone_based_firewall_policy_definition',
    'get_zone_based_firewall_policy_definition_output',
]

@pulumi.output_type
class GetZoneBasedFirewallPolicyDefinitionResult:
    """
    A collection of values returned by getZoneBasedFirewallPolicyDefinition.
    """
    def __init__(__self__, apply_zone_pairs=None, default_action=None, description=None, id=None, mode=None, name=None, rules=None, version=None):
        if apply_zone_pairs and not isinstance(apply_zone_pairs, list):
            raise TypeError("Expected argument 'apply_zone_pairs' to be a list")
        pulumi.set(__self__, "apply_zone_pairs", apply_zone_pairs)
        if default_action and not isinstance(default_action, str):
            raise TypeError("Expected argument 'default_action' to be a str")
        pulumi.set(__self__, "default_action", default_action)
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if mode and not isinstance(mode, str):
            raise TypeError("Expected argument 'mode' to be a str")
        pulumi.set(__self__, "mode", mode)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if rules and not isinstance(rules, list):
            raise TypeError("Expected argument 'rules' to be a list")
        pulumi.set(__self__, "rules", rules)
        if version and not isinstance(version, int):
            raise TypeError("Expected argument 'version' to be a int")
        pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter(name="applyZonePairs")
    def apply_zone_pairs(self) -> Sequence['outputs.GetZoneBasedFirewallPolicyDefinitionApplyZonePairResult']:
        return pulumi.get(self, "apply_zone_pairs")

    @property
    @pulumi.getter(name="defaultAction")
    def default_action(self) -> builtins.str:
        """
        Default Action
        """
        return pulumi.get(self, "default_action")

    @property
    @pulumi.getter
    def description(self) -> builtins.str:
        """
        The description of the policy definition
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The id of the object
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def mode(self) -> builtins.str:
        """
        The policy mode
        """
        return pulumi.get(self, "mode")

    @property
    @pulumi.getter
    def name(self) -> builtins.str:
        """
        The name of the policy definition
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def rules(self) -> Sequence['outputs.GetZoneBasedFirewallPolicyDefinitionRuleResult']:
        return pulumi.get(self, "rules")

    @property
    @pulumi.getter
    def version(self) -> builtins.int:
        """
        The version of the object
        """
        return pulumi.get(self, "version")


class AwaitableGetZoneBasedFirewallPolicyDefinitionResult(GetZoneBasedFirewallPolicyDefinitionResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetZoneBasedFirewallPolicyDefinitionResult(
            apply_zone_pairs=self.apply_zone_pairs,
            default_action=self.default_action,
            description=self.description,
            id=self.id,
            mode=self.mode,
            name=self.name,
            rules=self.rules,
            version=self.version)


def get_zone_based_firewall_policy_definition(id: Optional[builtins.str] = None,
                                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetZoneBasedFirewallPolicyDefinitionResult:
    """
    This data source can read the Zone Based Firewall Policy Definition .

    ## Example Usage

    ```python
    import pulumi
    import pulumi_sdwan as sdwan

    example = sdwan.get_zone_based_firewall_policy_definition(id="f6b2c44c-693c-4763-b010-895aa3d236bd")
    ```


    :param builtins.str id: The id of the object
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('sdwan:index/getZoneBasedFirewallPolicyDefinition:getZoneBasedFirewallPolicyDefinition', __args__, opts=opts, typ=GetZoneBasedFirewallPolicyDefinitionResult).value

    return AwaitableGetZoneBasedFirewallPolicyDefinitionResult(
        apply_zone_pairs=pulumi.get(__ret__, 'apply_zone_pairs'),
        default_action=pulumi.get(__ret__, 'default_action'),
        description=pulumi.get(__ret__, 'description'),
        id=pulumi.get(__ret__, 'id'),
        mode=pulumi.get(__ret__, 'mode'),
        name=pulumi.get(__ret__, 'name'),
        rules=pulumi.get(__ret__, 'rules'),
        version=pulumi.get(__ret__, 'version'))
def get_zone_based_firewall_policy_definition_output(id: Optional[pulumi.Input[builtins.str]] = None,
                                                     opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetZoneBasedFirewallPolicyDefinitionResult]:
    """
    This data source can read the Zone Based Firewall Policy Definition .

    ## Example Usage

    ```python
    import pulumi
    import pulumi_sdwan as sdwan

    example = sdwan.get_zone_based_firewall_policy_definition(id="f6b2c44c-693c-4763-b010-895aa3d236bd")
    ```


    :param builtins.str id: The id of the object
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('sdwan:index/getZoneBasedFirewallPolicyDefinition:getZoneBasedFirewallPolicyDefinition', __args__, opts=opts, typ=GetZoneBasedFirewallPolicyDefinitionResult)
    return __ret__.apply(lambda __response__: GetZoneBasedFirewallPolicyDefinitionResult(
        apply_zone_pairs=pulumi.get(__response__, 'apply_zone_pairs'),
        default_action=pulumi.get(__response__, 'default_action'),
        description=pulumi.get(__response__, 'description'),
        id=pulumi.get(__response__, 'id'),
        mode=pulumi.get(__response__, 'mode'),
        name=pulumi.get(__response__, 'name'),
        rules=pulumi.get(__response__, 'rules'),
        version=pulumi.get(__response__, 'version')))
