# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['SystemRemoteAccessFeatureArgs', 'SystemRemoteAccessFeature']

@pulumi.input_type
class SystemRemoteAccessFeatureArgs:
    def __init__(__self__, *,
                 feature_profile_id: pulumi.Input[builtins.str],
                 radius_group_name: pulumi.Input[builtins.str],
                 aaa_derive_name_from_peer_domain: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_derive_name_from_peer_domain_variable: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_derive_name_from_peer_identity: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_derive_name_from_peer_identity_variable: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_enable_accounting: Optional[pulumi.Input[builtins.bool]] = None,
                 aaa_enable_accounting_variable: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_specify_name_policy_name: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_specify_name_policy_name_variable: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_specify_name_policy_password: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_specify_name_policy_password_variable: Optional[pulumi.Input[builtins.str]] = None,
                 any_connect_eap_authentication_type: Optional[pulumi.Input[builtins.str]] = None,
                 connection_type_ssl: Optional[pulumi.Input[builtins.bool]] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 enable_certificate_list_check: Optional[pulumi.Input[builtins.bool]] = None,
                 enable_certificate_list_check_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ikev2_anti_dos_threshold: Optional[pulumi.Input[builtins.int]] = None,
                 ikev2_anti_dos_threshold_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ikev2_local_ike_identity_type: Optional[pulumi.Input[builtins.str]] = None,
                 ikev2_local_ike_identity_type_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ikev2_local_ike_identity_value: Optional[pulumi.Input[builtins.str]] = None,
                 ikev2_local_ike_identity_value_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ikev2_security_association_lifetime: Optional[pulumi.Input[builtins.int]] = None,
                 ikev2_security_association_lifetime_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipsec_anti_replay_window_size: Optional[pulumi.Input[builtins.int]] = None,
                 ipsec_anti_replay_window_size_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipsec_enable_anti_replay: Optional[pulumi.Input[builtins.bool]] = None,
                 ipsec_enable_anti_replay_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipsec_enable_perfect_foward_secrecy: Optional[pulumi.Input[builtins.bool]] = None,
                 ipsec_enable_perfect_foward_secrecy_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipsec_security_association_lifetime: Optional[pulumi.Input[builtins.int]] = None,
                 ipsec_security_association_lifetime_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipv4_pool_size: Optional[pulumi.Input[builtins.int]] = None,
                 ipv4_pool_size_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipv6_pool_size: Optional[pulumi.Input[builtins.int]] = None,
                 ipv6_pool_size_variable: Optional[pulumi.Input[builtins.str]] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 psk_authentication_pre_shared_key: Optional[pulumi.Input[builtins.str]] = None,
                 psk_authentication_pre_shared_key_variable: Optional[pulumi.Input[builtins.str]] = None,
                 psk_authentication_type: Optional[pulumi.Input[builtins.str]] = None,
                 psk_authentication_type_variable: Optional[pulumi.Input[builtins.str]] = None,
                 radius_group_name_variable: Optional[pulumi.Input[builtins.str]] = None):
        """
        The set of arguments for constructing a SystemRemoteAccessFeature resource.
        :param pulumi.Input[builtins.str] feature_profile_id: Feature Profile ID
        :param pulumi.Input[builtins.str] aaa_derive_name_from_peer_domain: , Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.str] aaa_derive_name_from_peer_domain_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.str] aaa_derive_name_from_peer_identity: , Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.str] aaa_derive_name_from_peer_identity_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.bool] aaa_enable_accounting: Enable Accounting - Default value: `true`
        :param pulumi.Input[builtins.str] aaa_enable_accounting_variable: Variable name
        :param pulumi.Input[builtins.str] aaa_specify_name_policy_name_variable: Variable name
        :param pulumi.Input[builtins.str] aaa_specify_name_policy_password_variable: Variable name
        :param pulumi.Input[builtins.str] any_connect_eap_authentication_type: , Attribute conditional on `connection_type_ssl` being equal to `false` - Choices: `user`, `device`
        :param pulumi.Input[builtins.bool] connection_type_ssl: Enabled SSL VPN - Default value: `false`
        :param pulumi.Input[builtins.str] description: The description of the Feature
        :param pulumi.Input[builtins.bool] enable_certificate_list_check: - Default value: `false`
        :param pulumi.Input[builtins.str] enable_certificate_list_check_variable: Variable name
        :param pulumi.Input[builtins.int] ikev2_anti_dos_threshold: Anti-DOS Threshold, Attribute conditional on `connection_type_ssl` being equal to `false` - Range: `10`-`1000` - Default
               value: `100`
        :param pulumi.Input[builtins.str] ikev2_anti_dos_threshold_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.str] ikev2_local_ike_identity_type: , Attribute conditional on `connection_type_ssl` being equal to `false` - Choices: `EMAIL`, `FQDN`, `KEYID`, `IPv4
               ADDRESS`, `IPv6 ADDRESS`
        :param pulumi.Input[builtins.str] ikev2_local_ike_identity_type_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.str] ikev2_local_ike_identity_value: , Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.str] ikev2_local_ike_identity_value_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.int] ikev2_security_association_lifetime: Security Association Lifetime in Seconds, Attribute conditional on `connection_type_ssl` being equal to `false` - Range:
               `3600`-`86400` - Default value: `86400`
        :param pulumi.Input[builtins.str] ikev2_security_association_lifetime_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.int] ipsec_anti_replay_window_size: security Association Lifetime, Attribute conditional on `ipsec_enable_anti_replay` being equal to `true` - Default
               value: `64`
        :param pulumi.Input[builtins.str] ipsec_anti_replay_window_size_variable: Variable name, Attribute conditional on `ipsec_enable_anti_replay` being equal to `true`
        :param pulumi.Input[builtins.bool] ipsec_enable_anti_replay: Enable Anti-Replay, Attribute conditional on `connection_type_ssl` being equal to `false` - Default value: `true`
        :param pulumi.Input[builtins.str] ipsec_enable_anti_replay_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.bool] ipsec_enable_perfect_foward_secrecy: security Association Lifetime, Attribute conditional on `connection_type_ssl` being equal to `false` - Default value:
               `false`
        :param pulumi.Input[builtins.str] ipsec_enable_perfect_foward_secrecy_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.int] ipsec_security_association_lifetime: Security Association Lifetime in Seconds, Attribute conditional on `connection_type_ssl` being equal to `false` - Range:
               `3600`-`86400` - Default value: `3600`
        :param pulumi.Input[builtins.str] ipsec_security_association_lifetime_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.int] ipv4_pool_size: IPv4 Pool Size - Default value: `1000`
        :param pulumi.Input[builtins.str] ipv4_pool_size_variable: Variable name
        :param pulumi.Input[builtins.int] ipv6_pool_size: IPv6 Pool Size - Default value: `1024`
        :param pulumi.Input[builtins.str] ipv6_pool_size_variable: Variable name
        :param pulumi.Input[builtins.str] name: The name of the Feature
        :param pulumi.Input[builtins.str] psk_authentication_pre_shared_key: PSK Pre Shared Key, Attribute conditional on `psk_authentication_type` being equal to `group`
        :param pulumi.Input[builtins.str] psk_authentication_pre_shared_key_variable: Variable name, Attribute conditional on `psk_authentication_type` being equal to `group`
        :param pulumi.Input[builtins.str] psk_authentication_type: PSK Selection, Attribute conditional on `connection_type_ssl` being equal to `false` - Choices: `aaa`, `group`
        :param pulumi.Input[builtins.str] psk_authentication_type_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.str] radius_group_name_variable: Variable name
        """
        pulumi.set(__self__, "feature_profile_id", feature_profile_id)
        pulumi.set(__self__, "radius_group_name", radius_group_name)
        if aaa_derive_name_from_peer_domain is not None:
            pulumi.set(__self__, "aaa_derive_name_from_peer_domain", aaa_derive_name_from_peer_domain)
        if aaa_derive_name_from_peer_domain_variable is not None:
            pulumi.set(__self__, "aaa_derive_name_from_peer_domain_variable", aaa_derive_name_from_peer_domain_variable)
        if aaa_derive_name_from_peer_identity is not None:
            pulumi.set(__self__, "aaa_derive_name_from_peer_identity", aaa_derive_name_from_peer_identity)
        if aaa_derive_name_from_peer_identity_variable is not None:
            pulumi.set(__self__, "aaa_derive_name_from_peer_identity_variable", aaa_derive_name_from_peer_identity_variable)
        if aaa_enable_accounting is not None:
            pulumi.set(__self__, "aaa_enable_accounting", aaa_enable_accounting)
        if aaa_enable_accounting_variable is not None:
            pulumi.set(__self__, "aaa_enable_accounting_variable", aaa_enable_accounting_variable)
        if aaa_specify_name_policy_name is not None:
            pulumi.set(__self__, "aaa_specify_name_policy_name", aaa_specify_name_policy_name)
        if aaa_specify_name_policy_name_variable is not None:
            pulumi.set(__self__, "aaa_specify_name_policy_name_variable", aaa_specify_name_policy_name_variable)
        if aaa_specify_name_policy_password is not None:
            pulumi.set(__self__, "aaa_specify_name_policy_password", aaa_specify_name_policy_password)
        if aaa_specify_name_policy_password_variable is not None:
            pulumi.set(__self__, "aaa_specify_name_policy_password_variable", aaa_specify_name_policy_password_variable)
        if any_connect_eap_authentication_type is not None:
            pulumi.set(__self__, "any_connect_eap_authentication_type", any_connect_eap_authentication_type)
        if connection_type_ssl is not None:
            pulumi.set(__self__, "connection_type_ssl", connection_type_ssl)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enable_certificate_list_check is not None:
            pulumi.set(__self__, "enable_certificate_list_check", enable_certificate_list_check)
        if enable_certificate_list_check_variable is not None:
            pulumi.set(__self__, "enable_certificate_list_check_variable", enable_certificate_list_check_variable)
        if ikev2_anti_dos_threshold is not None:
            pulumi.set(__self__, "ikev2_anti_dos_threshold", ikev2_anti_dos_threshold)
        if ikev2_anti_dos_threshold_variable is not None:
            pulumi.set(__self__, "ikev2_anti_dos_threshold_variable", ikev2_anti_dos_threshold_variable)
        if ikev2_local_ike_identity_type is not None:
            pulumi.set(__self__, "ikev2_local_ike_identity_type", ikev2_local_ike_identity_type)
        if ikev2_local_ike_identity_type_variable is not None:
            pulumi.set(__self__, "ikev2_local_ike_identity_type_variable", ikev2_local_ike_identity_type_variable)
        if ikev2_local_ike_identity_value is not None:
            pulumi.set(__self__, "ikev2_local_ike_identity_value", ikev2_local_ike_identity_value)
        if ikev2_local_ike_identity_value_variable is not None:
            pulumi.set(__self__, "ikev2_local_ike_identity_value_variable", ikev2_local_ike_identity_value_variable)
        if ikev2_security_association_lifetime is not None:
            pulumi.set(__self__, "ikev2_security_association_lifetime", ikev2_security_association_lifetime)
        if ikev2_security_association_lifetime_variable is not None:
            pulumi.set(__self__, "ikev2_security_association_lifetime_variable", ikev2_security_association_lifetime_variable)
        if ipsec_anti_replay_window_size is not None:
            pulumi.set(__self__, "ipsec_anti_replay_window_size", ipsec_anti_replay_window_size)
        if ipsec_anti_replay_window_size_variable is not None:
            pulumi.set(__self__, "ipsec_anti_replay_window_size_variable", ipsec_anti_replay_window_size_variable)
        if ipsec_enable_anti_replay is not None:
            pulumi.set(__self__, "ipsec_enable_anti_replay", ipsec_enable_anti_replay)
        if ipsec_enable_anti_replay_variable is not None:
            pulumi.set(__self__, "ipsec_enable_anti_replay_variable", ipsec_enable_anti_replay_variable)
        if ipsec_enable_perfect_foward_secrecy is not None:
            pulumi.set(__self__, "ipsec_enable_perfect_foward_secrecy", ipsec_enable_perfect_foward_secrecy)
        if ipsec_enable_perfect_foward_secrecy_variable is not None:
            pulumi.set(__self__, "ipsec_enable_perfect_foward_secrecy_variable", ipsec_enable_perfect_foward_secrecy_variable)
        if ipsec_security_association_lifetime is not None:
            pulumi.set(__self__, "ipsec_security_association_lifetime", ipsec_security_association_lifetime)
        if ipsec_security_association_lifetime_variable is not None:
            pulumi.set(__self__, "ipsec_security_association_lifetime_variable", ipsec_security_association_lifetime_variable)
        if ipv4_pool_size is not None:
            pulumi.set(__self__, "ipv4_pool_size", ipv4_pool_size)
        if ipv4_pool_size_variable is not None:
            pulumi.set(__self__, "ipv4_pool_size_variable", ipv4_pool_size_variable)
        if ipv6_pool_size is not None:
            pulumi.set(__self__, "ipv6_pool_size", ipv6_pool_size)
        if ipv6_pool_size_variable is not None:
            pulumi.set(__self__, "ipv6_pool_size_variable", ipv6_pool_size_variable)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if psk_authentication_pre_shared_key is not None:
            pulumi.set(__self__, "psk_authentication_pre_shared_key", psk_authentication_pre_shared_key)
        if psk_authentication_pre_shared_key_variable is not None:
            pulumi.set(__self__, "psk_authentication_pre_shared_key_variable", psk_authentication_pre_shared_key_variable)
        if psk_authentication_type is not None:
            pulumi.set(__self__, "psk_authentication_type", psk_authentication_type)
        if psk_authentication_type_variable is not None:
            pulumi.set(__self__, "psk_authentication_type_variable", psk_authentication_type_variable)
        if radius_group_name_variable is not None:
            pulumi.set(__self__, "radius_group_name_variable", radius_group_name_variable)

    @property
    @pulumi.getter(name="featureProfileId")
    def feature_profile_id(self) -> pulumi.Input[builtins.str]:
        """
        Feature Profile ID
        """
        return pulumi.get(self, "feature_profile_id")

    @feature_profile_id.setter
    def feature_profile_id(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "feature_profile_id", value)

    @property
    @pulumi.getter(name="radiusGroupName")
    def radius_group_name(self) -> pulumi.Input[builtins.str]:
        return pulumi.get(self, "radius_group_name")

    @radius_group_name.setter
    def radius_group_name(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "radius_group_name", value)

    @property
    @pulumi.getter(name="aaaDeriveNameFromPeerDomain")
    def aaa_derive_name_from_peer_domain(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        , Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "aaa_derive_name_from_peer_domain")

    @aaa_derive_name_from_peer_domain.setter
    def aaa_derive_name_from_peer_domain(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "aaa_derive_name_from_peer_domain", value)

    @property
    @pulumi.getter(name="aaaDeriveNameFromPeerDomainVariable")
    def aaa_derive_name_from_peer_domain_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "aaa_derive_name_from_peer_domain_variable")

    @aaa_derive_name_from_peer_domain_variable.setter
    def aaa_derive_name_from_peer_domain_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "aaa_derive_name_from_peer_domain_variable", value)

    @property
    @pulumi.getter(name="aaaDeriveNameFromPeerIdentity")
    def aaa_derive_name_from_peer_identity(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        , Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "aaa_derive_name_from_peer_identity")

    @aaa_derive_name_from_peer_identity.setter
    def aaa_derive_name_from_peer_identity(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "aaa_derive_name_from_peer_identity", value)

    @property
    @pulumi.getter(name="aaaDeriveNameFromPeerIdentityVariable")
    def aaa_derive_name_from_peer_identity_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "aaa_derive_name_from_peer_identity_variable")

    @aaa_derive_name_from_peer_identity_variable.setter
    def aaa_derive_name_from_peer_identity_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "aaa_derive_name_from_peer_identity_variable", value)

    @property
    @pulumi.getter(name="aaaEnableAccounting")
    def aaa_enable_accounting(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Enable Accounting - Default value: `true`
        """
        return pulumi.get(self, "aaa_enable_accounting")

    @aaa_enable_accounting.setter
    def aaa_enable_accounting(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "aaa_enable_accounting", value)

    @property
    @pulumi.getter(name="aaaEnableAccountingVariable")
    def aaa_enable_accounting_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "aaa_enable_accounting_variable")

    @aaa_enable_accounting_variable.setter
    def aaa_enable_accounting_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "aaa_enable_accounting_variable", value)

    @property
    @pulumi.getter(name="aaaSpecifyNamePolicyName")
    def aaa_specify_name_policy_name(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "aaa_specify_name_policy_name")

    @aaa_specify_name_policy_name.setter
    def aaa_specify_name_policy_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "aaa_specify_name_policy_name", value)

    @property
    @pulumi.getter(name="aaaSpecifyNamePolicyNameVariable")
    def aaa_specify_name_policy_name_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "aaa_specify_name_policy_name_variable")

    @aaa_specify_name_policy_name_variable.setter
    def aaa_specify_name_policy_name_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "aaa_specify_name_policy_name_variable", value)

    @property
    @pulumi.getter(name="aaaSpecifyNamePolicyPassword")
    def aaa_specify_name_policy_password(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "aaa_specify_name_policy_password")

    @aaa_specify_name_policy_password.setter
    def aaa_specify_name_policy_password(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "aaa_specify_name_policy_password", value)

    @property
    @pulumi.getter(name="aaaSpecifyNamePolicyPasswordVariable")
    def aaa_specify_name_policy_password_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "aaa_specify_name_policy_password_variable")

    @aaa_specify_name_policy_password_variable.setter
    def aaa_specify_name_policy_password_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "aaa_specify_name_policy_password_variable", value)

    @property
    @pulumi.getter(name="anyConnectEapAuthenticationType")
    def any_connect_eap_authentication_type(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        , Attribute conditional on `connection_type_ssl` being equal to `false` - Choices: `user`, `device`
        """
        return pulumi.get(self, "any_connect_eap_authentication_type")

    @any_connect_eap_authentication_type.setter
    def any_connect_eap_authentication_type(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "any_connect_eap_authentication_type", value)

    @property
    @pulumi.getter(name="connectionTypeSsl")
    def connection_type_ssl(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Enabled SSL VPN - Default value: `false`
        """
        return pulumi.get(self, "connection_type_ssl")

    @connection_type_ssl.setter
    def connection_type_ssl(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "connection_type_ssl", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The description of the Feature
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="enableCertificateListCheck")
    def enable_certificate_list_check(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        - Default value: `false`
        """
        return pulumi.get(self, "enable_certificate_list_check")

    @enable_certificate_list_check.setter
    def enable_certificate_list_check(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "enable_certificate_list_check", value)

    @property
    @pulumi.getter(name="enableCertificateListCheckVariable")
    def enable_certificate_list_check_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "enable_certificate_list_check_variable")

    @enable_certificate_list_check_variable.setter
    def enable_certificate_list_check_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "enable_certificate_list_check_variable", value)

    @property
    @pulumi.getter(name="ikev2AntiDosThreshold")
    def ikev2_anti_dos_threshold(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Anti-DOS Threshold, Attribute conditional on `connection_type_ssl` being equal to `false` - Range: `10`-`1000` - Default
        value: `100`
        """
        return pulumi.get(self, "ikev2_anti_dos_threshold")

    @ikev2_anti_dos_threshold.setter
    def ikev2_anti_dos_threshold(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "ikev2_anti_dos_threshold", value)

    @property
    @pulumi.getter(name="ikev2AntiDosThresholdVariable")
    def ikev2_anti_dos_threshold_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "ikev2_anti_dos_threshold_variable")

    @ikev2_anti_dos_threshold_variable.setter
    def ikev2_anti_dos_threshold_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ikev2_anti_dos_threshold_variable", value)

    @property
    @pulumi.getter(name="ikev2LocalIkeIdentityType")
    def ikev2_local_ike_identity_type(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        , Attribute conditional on `connection_type_ssl` being equal to `false` - Choices: `EMAIL`, `FQDN`, `KEYID`, `IPv4
        ADDRESS`, `IPv6 ADDRESS`
        """
        return pulumi.get(self, "ikev2_local_ike_identity_type")

    @ikev2_local_ike_identity_type.setter
    def ikev2_local_ike_identity_type(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ikev2_local_ike_identity_type", value)

    @property
    @pulumi.getter(name="ikev2LocalIkeIdentityTypeVariable")
    def ikev2_local_ike_identity_type_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "ikev2_local_ike_identity_type_variable")

    @ikev2_local_ike_identity_type_variable.setter
    def ikev2_local_ike_identity_type_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ikev2_local_ike_identity_type_variable", value)

    @property
    @pulumi.getter(name="ikev2LocalIkeIdentityValue")
    def ikev2_local_ike_identity_value(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        , Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "ikev2_local_ike_identity_value")

    @ikev2_local_ike_identity_value.setter
    def ikev2_local_ike_identity_value(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ikev2_local_ike_identity_value", value)

    @property
    @pulumi.getter(name="ikev2LocalIkeIdentityValueVariable")
    def ikev2_local_ike_identity_value_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "ikev2_local_ike_identity_value_variable")

    @ikev2_local_ike_identity_value_variable.setter
    def ikev2_local_ike_identity_value_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ikev2_local_ike_identity_value_variable", value)

    @property
    @pulumi.getter(name="ikev2SecurityAssociationLifetime")
    def ikev2_security_association_lifetime(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Security Association Lifetime in Seconds, Attribute conditional on `connection_type_ssl` being equal to `false` - Range:
        `3600`-`86400` - Default value: `86400`
        """
        return pulumi.get(self, "ikev2_security_association_lifetime")

    @ikev2_security_association_lifetime.setter
    def ikev2_security_association_lifetime(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "ikev2_security_association_lifetime", value)

    @property
    @pulumi.getter(name="ikev2SecurityAssociationLifetimeVariable")
    def ikev2_security_association_lifetime_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "ikev2_security_association_lifetime_variable")

    @ikev2_security_association_lifetime_variable.setter
    def ikev2_security_association_lifetime_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ikev2_security_association_lifetime_variable", value)

    @property
    @pulumi.getter(name="ipsecAntiReplayWindowSize")
    def ipsec_anti_replay_window_size(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        security Association Lifetime, Attribute conditional on `ipsec_enable_anti_replay` being equal to `true` - Default
        value: `64`
        """
        return pulumi.get(self, "ipsec_anti_replay_window_size")

    @ipsec_anti_replay_window_size.setter
    def ipsec_anti_replay_window_size(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "ipsec_anti_replay_window_size", value)

    @property
    @pulumi.getter(name="ipsecAntiReplayWindowSizeVariable")
    def ipsec_anti_replay_window_size_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name, Attribute conditional on `ipsec_enable_anti_replay` being equal to `true`
        """
        return pulumi.get(self, "ipsec_anti_replay_window_size_variable")

    @ipsec_anti_replay_window_size_variable.setter
    def ipsec_anti_replay_window_size_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipsec_anti_replay_window_size_variable", value)

    @property
    @pulumi.getter(name="ipsecEnableAntiReplay")
    def ipsec_enable_anti_replay(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Enable Anti-Replay, Attribute conditional on `connection_type_ssl` being equal to `false` - Default value: `true`
        """
        return pulumi.get(self, "ipsec_enable_anti_replay")

    @ipsec_enable_anti_replay.setter
    def ipsec_enable_anti_replay(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "ipsec_enable_anti_replay", value)

    @property
    @pulumi.getter(name="ipsecEnableAntiReplayVariable")
    def ipsec_enable_anti_replay_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "ipsec_enable_anti_replay_variable")

    @ipsec_enable_anti_replay_variable.setter
    def ipsec_enable_anti_replay_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipsec_enable_anti_replay_variable", value)

    @property
    @pulumi.getter(name="ipsecEnablePerfectFowardSecrecy")
    def ipsec_enable_perfect_foward_secrecy(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        security Association Lifetime, Attribute conditional on `connection_type_ssl` being equal to `false` - Default value:
        `false`
        """
        return pulumi.get(self, "ipsec_enable_perfect_foward_secrecy")

    @ipsec_enable_perfect_foward_secrecy.setter
    def ipsec_enable_perfect_foward_secrecy(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "ipsec_enable_perfect_foward_secrecy", value)

    @property
    @pulumi.getter(name="ipsecEnablePerfectFowardSecrecyVariable")
    def ipsec_enable_perfect_foward_secrecy_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "ipsec_enable_perfect_foward_secrecy_variable")

    @ipsec_enable_perfect_foward_secrecy_variable.setter
    def ipsec_enable_perfect_foward_secrecy_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipsec_enable_perfect_foward_secrecy_variable", value)

    @property
    @pulumi.getter(name="ipsecSecurityAssociationLifetime")
    def ipsec_security_association_lifetime(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Security Association Lifetime in Seconds, Attribute conditional on `connection_type_ssl` being equal to `false` - Range:
        `3600`-`86400` - Default value: `3600`
        """
        return pulumi.get(self, "ipsec_security_association_lifetime")

    @ipsec_security_association_lifetime.setter
    def ipsec_security_association_lifetime(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "ipsec_security_association_lifetime", value)

    @property
    @pulumi.getter(name="ipsecSecurityAssociationLifetimeVariable")
    def ipsec_security_association_lifetime_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "ipsec_security_association_lifetime_variable")

    @ipsec_security_association_lifetime_variable.setter
    def ipsec_security_association_lifetime_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipsec_security_association_lifetime_variable", value)

    @property
    @pulumi.getter(name="ipv4PoolSize")
    def ipv4_pool_size(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        IPv4 Pool Size - Default value: `1000`
        """
        return pulumi.get(self, "ipv4_pool_size")

    @ipv4_pool_size.setter
    def ipv4_pool_size(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "ipv4_pool_size", value)

    @property
    @pulumi.getter(name="ipv4PoolSizeVariable")
    def ipv4_pool_size_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ipv4_pool_size_variable")

    @ipv4_pool_size_variable.setter
    def ipv4_pool_size_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipv4_pool_size_variable", value)

    @property
    @pulumi.getter(name="ipv6PoolSize")
    def ipv6_pool_size(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        IPv6 Pool Size - Default value: `1024`
        """
        return pulumi.get(self, "ipv6_pool_size")

    @ipv6_pool_size.setter
    def ipv6_pool_size(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "ipv6_pool_size", value)

    @property
    @pulumi.getter(name="ipv6PoolSizeVariable")
    def ipv6_pool_size_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ipv6_pool_size_variable")

    @ipv6_pool_size_variable.setter
    def ipv6_pool_size_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipv6_pool_size_variable", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The name of the Feature
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="pskAuthenticationPreSharedKey")
    def psk_authentication_pre_shared_key(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        PSK Pre Shared Key, Attribute conditional on `psk_authentication_type` being equal to `group`
        """
        return pulumi.get(self, "psk_authentication_pre_shared_key")

    @psk_authentication_pre_shared_key.setter
    def psk_authentication_pre_shared_key(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "psk_authentication_pre_shared_key", value)

    @property
    @pulumi.getter(name="pskAuthenticationPreSharedKeyVariable")
    def psk_authentication_pre_shared_key_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name, Attribute conditional on `psk_authentication_type` being equal to `group`
        """
        return pulumi.get(self, "psk_authentication_pre_shared_key_variable")

    @psk_authentication_pre_shared_key_variable.setter
    def psk_authentication_pre_shared_key_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "psk_authentication_pre_shared_key_variable", value)

    @property
    @pulumi.getter(name="pskAuthenticationType")
    def psk_authentication_type(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        PSK Selection, Attribute conditional on `connection_type_ssl` being equal to `false` - Choices: `aaa`, `group`
        """
        return pulumi.get(self, "psk_authentication_type")

    @psk_authentication_type.setter
    def psk_authentication_type(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "psk_authentication_type", value)

    @property
    @pulumi.getter(name="pskAuthenticationTypeVariable")
    def psk_authentication_type_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "psk_authentication_type_variable")

    @psk_authentication_type_variable.setter
    def psk_authentication_type_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "psk_authentication_type_variable", value)

    @property
    @pulumi.getter(name="radiusGroupNameVariable")
    def radius_group_name_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "radius_group_name_variable")

    @radius_group_name_variable.setter
    def radius_group_name_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "radius_group_name_variable", value)


@pulumi.input_type
class _SystemRemoteAccessFeatureState:
    def __init__(__self__, *,
                 aaa_derive_name_from_peer_domain: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_derive_name_from_peer_domain_variable: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_derive_name_from_peer_identity: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_derive_name_from_peer_identity_variable: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_enable_accounting: Optional[pulumi.Input[builtins.bool]] = None,
                 aaa_enable_accounting_variable: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_specify_name_policy_name: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_specify_name_policy_name_variable: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_specify_name_policy_password: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_specify_name_policy_password_variable: Optional[pulumi.Input[builtins.str]] = None,
                 any_connect_eap_authentication_type: Optional[pulumi.Input[builtins.str]] = None,
                 connection_type_ssl: Optional[pulumi.Input[builtins.bool]] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 enable_certificate_list_check: Optional[pulumi.Input[builtins.bool]] = None,
                 enable_certificate_list_check_variable: Optional[pulumi.Input[builtins.str]] = None,
                 feature_profile_id: Optional[pulumi.Input[builtins.str]] = None,
                 ikev2_anti_dos_threshold: Optional[pulumi.Input[builtins.int]] = None,
                 ikev2_anti_dos_threshold_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ikev2_local_ike_identity_type: Optional[pulumi.Input[builtins.str]] = None,
                 ikev2_local_ike_identity_type_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ikev2_local_ike_identity_value: Optional[pulumi.Input[builtins.str]] = None,
                 ikev2_local_ike_identity_value_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ikev2_security_association_lifetime: Optional[pulumi.Input[builtins.int]] = None,
                 ikev2_security_association_lifetime_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipsec_anti_replay_window_size: Optional[pulumi.Input[builtins.int]] = None,
                 ipsec_anti_replay_window_size_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipsec_enable_anti_replay: Optional[pulumi.Input[builtins.bool]] = None,
                 ipsec_enable_anti_replay_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipsec_enable_perfect_foward_secrecy: Optional[pulumi.Input[builtins.bool]] = None,
                 ipsec_enable_perfect_foward_secrecy_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipsec_security_association_lifetime: Optional[pulumi.Input[builtins.int]] = None,
                 ipsec_security_association_lifetime_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipv4_pool_size: Optional[pulumi.Input[builtins.int]] = None,
                 ipv4_pool_size_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipv6_pool_size: Optional[pulumi.Input[builtins.int]] = None,
                 ipv6_pool_size_variable: Optional[pulumi.Input[builtins.str]] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 psk_authentication_pre_shared_key: Optional[pulumi.Input[builtins.str]] = None,
                 psk_authentication_pre_shared_key_variable: Optional[pulumi.Input[builtins.str]] = None,
                 psk_authentication_type: Optional[pulumi.Input[builtins.str]] = None,
                 psk_authentication_type_variable: Optional[pulumi.Input[builtins.str]] = None,
                 radius_group_name: Optional[pulumi.Input[builtins.str]] = None,
                 radius_group_name_variable: Optional[pulumi.Input[builtins.str]] = None,
                 version: Optional[pulumi.Input[builtins.int]] = None):
        """
        Input properties used for looking up and filtering SystemRemoteAccessFeature resources.
        :param pulumi.Input[builtins.str] aaa_derive_name_from_peer_domain: , Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.str] aaa_derive_name_from_peer_domain_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.str] aaa_derive_name_from_peer_identity: , Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.str] aaa_derive_name_from_peer_identity_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.bool] aaa_enable_accounting: Enable Accounting - Default value: `true`
        :param pulumi.Input[builtins.str] aaa_enable_accounting_variable: Variable name
        :param pulumi.Input[builtins.str] aaa_specify_name_policy_name_variable: Variable name
        :param pulumi.Input[builtins.str] aaa_specify_name_policy_password_variable: Variable name
        :param pulumi.Input[builtins.str] any_connect_eap_authentication_type: , Attribute conditional on `connection_type_ssl` being equal to `false` - Choices: `user`, `device`
        :param pulumi.Input[builtins.bool] connection_type_ssl: Enabled SSL VPN - Default value: `false`
        :param pulumi.Input[builtins.str] description: The description of the Feature
        :param pulumi.Input[builtins.bool] enable_certificate_list_check: - Default value: `false`
        :param pulumi.Input[builtins.str] enable_certificate_list_check_variable: Variable name
        :param pulumi.Input[builtins.str] feature_profile_id: Feature Profile ID
        :param pulumi.Input[builtins.int] ikev2_anti_dos_threshold: Anti-DOS Threshold, Attribute conditional on `connection_type_ssl` being equal to `false` - Range: `10`-`1000` - Default
               value: `100`
        :param pulumi.Input[builtins.str] ikev2_anti_dos_threshold_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.str] ikev2_local_ike_identity_type: , Attribute conditional on `connection_type_ssl` being equal to `false` - Choices: `EMAIL`, `FQDN`, `KEYID`, `IPv4
               ADDRESS`, `IPv6 ADDRESS`
        :param pulumi.Input[builtins.str] ikev2_local_ike_identity_type_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.str] ikev2_local_ike_identity_value: , Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.str] ikev2_local_ike_identity_value_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.int] ikev2_security_association_lifetime: Security Association Lifetime in Seconds, Attribute conditional on `connection_type_ssl` being equal to `false` - Range:
               `3600`-`86400` - Default value: `86400`
        :param pulumi.Input[builtins.str] ikev2_security_association_lifetime_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.int] ipsec_anti_replay_window_size: security Association Lifetime, Attribute conditional on `ipsec_enable_anti_replay` being equal to `true` - Default
               value: `64`
        :param pulumi.Input[builtins.str] ipsec_anti_replay_window_size_variable: Variable name, Attribute conditional on `ipsec_enable_anti_replay` being equal to `true`
        :param pulumi.Input[builtins.bool] ipsec_enable_anti_replay: Enable Anti-Replay, Attribute conditional on `connection_type_ssl` being equal to `false` - Default value: `true`
        :param pulumi.Input[builtins.str] ipsec_enable_anti_replay_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.bool] ipsec_enable_perfect_foward_secrecy: security Association Lifetime, Attribute conditional on `connection_type_ssl` being equal to `false` - Default value:
               `false`
        :param pulumi.Input[builtins.str] ipsec_enable_perfect_foward_secrecy_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.int] ipsec_security_association_lifetime: Security Association Lifetime in Seconds, Attribute conditional on `connection_type_ssl` being equal to `false` - Range:
               `3600`-`86400` - Default value: `3600`
        :param pulumi.Input[builtins.str] ipsec_security_association_lifetime_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.int] ipv4_pool_size: IPv4 Pool Size - Default value: `1000`
        :param pulumi.Input[builtins.str] ipv4_pool_size_variable: Variable name
        :param pulumi.Input[builtins.int] ipv6_pool_size: IPv6 Pool Size - Default value: `1024`
        :param pulumi.Input[builtins.str] ipv6_pool_size_variable: Variable name
        :param pulumi.Input[builtins.str] name: The name of the Feature
        :param pulumi.Input[builtins.str] psk_authentication_pre_shared_key: PSK Pre Shared Key, Attribute conditional on `psk_authentication_type` being equal to `group`
        :param pulumi.Input[builtins.str] psk_authentication_pre_shared_key_variable: Variable name, Attribute conditional on `psk_authentication_type` being equal to `group`
        :param pulumi.Input[builtins.str] psk_authentication_type: PSK Selection, Attribute conditional on `connection_type_ssl` being equal to `false` - Choices: `aaa`, `group`
        :param pulumi.Input[builtins.str] psk_authentication_type_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.str] radius_group_name_variable: Variable name
        :param pulumi.Input[builtins.int] version: The version of the Feature
        """
        if aaa_derive_name_from_peer_domain is not None:
            pulumi.set(__self__, "aaa_derive_name_from_peer_domain", aaa_derive_name_from_peer_domain)
        if aaa_derive_name_from_peer_domain_variable is not None:
            pulumi.set(__self__, "aaa_derive_name_from_peer_domain_variable", aaa_derive_name_from_peer_domain_variable)
        if aaa_derive_name_from_peer_identity is not None:
            pulumi.set(__self__, "aaa_derive_name_from_peer_identity", aaa_derive_name_from_peer_identity)
        if aaa_derive_name_from_peer_identity_variable is not None:
            pulumi.set(__self__, "aaa_derive_name_from_peer_identity_variable", aaa_derive_name_from_peer_identity_variable)
        if aaa_enable_accounting is not None:
            pulumi.set(__self__, "aaa_enable_accounting", aaa_enable_accounting)
        if aaa_enable_accounting_variable is not None:
            pulumi.set(__self__, "aaa_enable_accounting_variable", aaa_enable_accounting_variable)
        if aaa_specify_name_policy_name is not None:
            pulumi.set(__self__, "aaa_specify_name_policy_name", aaa_specify_name_policy_name)
        if aaa_specify_name_policy_name_variable is not None:
            pulumi.set(__self__, "aaa_specify_name_policy_name_variable", aaa_specify_name_policy_name_variable)
        if aaa_specify_name_policy_password is not None:
            pulumi.set(__self__, "aaa_specify_name_policy_password", aaa_specify_name_policy_password)
        if aaa_specify_name_policy_password_variable is not None:
            pulumi.set(__self__, "aaa_specify_name_policy_password_variable", aaa_specify_name_policy_password_variable)
        if any_connect_eap_authentication_type is not None:
            pulumi.set(__self__, "any_connect_eap_authentication_type", any_connect_eap_authentication_type)
        if connection_type_ssl is not None:
            pulumi.set(__self__, "connection_type_ssl", connection_type_ssl)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enable_certificate_list_check is not None:
            pulumi.set(__self__, "enable_certificate_list_check", enable_certificate_list_check)
        if enable_certificate_list_check_variable is not None:
            pulumi.set(__self__, "enable_certificate_list_check_variable", enable_certificate_list_check_variable)
        if feature_profile_id is not None:
            pulumi.set(__self__, "feature_profile_id", feature_profile_id)
        if ikev2_anti_dos_threshold is not None:
            pulumi.set(__self__, "ikev2_anti_dos_threshold", ikev2_anti_dos_threshold)
        if ikev2_anti_dos_threshold_variable is not None:
            pulumi.set(__self__, "ikev2_anti_dos_threshold_variable", ikev2_anti_dos_threshold_variable)
        if ikev2_local_ike_identity_type is not None:
            pulumi.set(__self__, "ikev2_local_ike_identity_type", ikev2_local_ike_identity_type)
        if ikev2_local_ike_identity_type_variable is not None:
            pulumi.set(__self__, "ikev2_local_ike_identity_type_variable", ikev2_local_ike_identity_type_variable)
        if ikev2_local_ike_identity_value is not None:
            pulumi.set(__self__, "ikev2_local_ike_identity_value", ikev2_local_ike_identity_value)
        if ikev2_local_ike_identity_value_variable is not None:
            pulumi.set(__self__, "ikev2_local_ike_identity_value_variable", ikev2_local_ike_identity_value_variable)
        if ikev2_security_association_lifetime is not None:
            pulumi.set(__self__, "ikev2_security_association_lifetime", ikev2_security_association_lifetime)
        if ikev2_security_association_lifetime_variable is not None:
            pulumi.set(__self__, "ikev2_security_association_lifetime_variable", ikev2_security_association_lifetime_variable)
        if ipsec_anti_replay_window_size is not None:
            pulumi.set(__self__, "ipsec_anti_replay_window_size", ipsec_anti_replay_window_size)
        if ipsec_anti_replay_window_size_variable is not None:
            pulumi.set(__self__, "ipsec_anti_replay_window_size_variable", ipsec_anti_replay_window_size_variable)
        if ipsec_enable_anti_replay is not None:
            pulumi.set(__self__, "ipsec_enable_anti_replay", ipsec_enable_anti_replay)
        if ipsec_enable_anti_replay_variable is not None:
            pulumi.set(__self__, "ipsec_enable_anti_replay_variable", ipsec_enable_anti_replay_variable)
        if ipsec_enable_perfect_foward_secrecy is not None:
            pulumi.set(__self__, "ipsec_enable_perfect_foward_secrecy", ipsec_enable_perfect_foward_secrecy)
        if ipsec_enable_perfect_foward_secrecy_variable is not None:
            pulumi.set(__self__, "ipsec_enable_perfect_foward_secrecy_variable", ipsec_enable_perfect_foward_secrecy_variable)
        if ipsec_security_association_lifetime is not None:
            pulumi.set(__self__, "ipsec_security_association_lifetime", ipsec_security_association_lifetime)
        if ipsec_security_association_lifetime_variable is not None:
            pulumi.set(__self__, "ipsec_security_association_lifetime_variable", ipsec_security_association_lifetime_variable)
        if ipv4_pool_size is not None:
            pulumi.set(__self__, "ipv4_pool_size", ipv4_pool_size)
        if ipv4_pool_size_variable is not None:
            pulumi.set(__self__, "ipv4_pool_size_variable", ipv4_pool_size_variable)
        if ipv6_pool_size is not None:
            pulumi.set(__self__, "ipv6_pool_size", ipv6_pool_size)
        if ipv6_pool_size_variable is not None:
            pulumi.set(__self__, "ipv6_pool_size_variable", ipv6_pool_size_variable)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if psk_authentication_pre_shared_key is not None:
            pulumi.set(__self__, "psk_authentication_pre_shared_key", psk_authentication_pre_shared_key)
        if psk_authentication_pre_shared_key_variable is not None:
            pulumi.set(__self__, "psk_authentication_pre_shared_key_variable", psk_authentication_pre_shared_key_variable)
        if psk_authentication_type is not None:
            pulumi.set(__self__, "psk_authentication_type", psk_authentication_type)
        if psk_authentication_type_variable is not None:
            pulumi.set(__self__, "psk_authentication_type_variable", psk_authentication_type_variable)
        if radius_group_name is not None:
            pulumi.set(__self__, "radius_group_name", radius_group_name)
        if radius_group_name_variable is not None:
            pulumi.set(__self__, "radius_group_name_variable", radius_group_name_variable)
        if version is not None:
            pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter(name="aaaDeriveNameFromPeerDomain")
    def aaa_derive_name_from_peer_domain(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        , Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "aaa_derive_name_from_peer_domain")

    @aaa_derive_name_from_peer_domain.setter
    def aaa_derive_name_from_peer_domain(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "aaa_derive_name_from_peer_domain", value)

    @property
    @pulumi.getter(name="aaaDeriveNameFromPeerDomainVariable")
    def aaa_derive_name_from_peer_domain_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "aaa_derive_name_from_peer_domain_variable")

    @aaa_derive_name_from_peer_domain_variable.setter
    def aaa_derive_name_from_peer_domain_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "aaa_derive_name_from_peer_domain_variable", value)

    @property
    @pulumi.getter(name="aaaDeriveNameFromPeerIdentity")
    def aaa_derive_name_from_peer_identity(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        , Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "aaa_derive_name_from_peer_identity")

    @aaa_derive_name_from_peer_identity.setter
    def aaa_derive_name_from_peer_identity(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "aaa_derive_name_from_peer_identity", value)

    @property
    @pulumi.getter(name="aaaDeriveNameFromPeerIdentityVariable")
    def aaa_derive_name_from_peer_identity_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "aaa_derive_name_from_peer_identity_variable")

    @aaa_derive_name_from_peer_identity_variable.setter
    def aaa_derive_name_from_peer_identity_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "aaa_derive_name_from_peer_identity_variable", value)

    @property
    @pulumi.getter(name="aaaEnableAccounting")
    def aaa_enable_accounting(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Enable Accounting - Default value: `true`
        """
        return pulumi.get(self, "aaa_enable_accounting")

    @aaa_enable_accounting.setter
    def aaa_enable_accounting(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "aaa_enable_accounting", value)

    @property
    @pulumi.getter(name="aaaEnableAccountingVariable")
    def aaa_enable_accounting_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "aaa_enable_accounting_variable")

    @aaa_enable_accounting_variable.setter
    def aaa_enable_accounting_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "aaa_enable_accounting_variable", value)

    @property
    @pulumi.getter(name="aaaSpecifyNamePolicyName")
    def aaa_specify_name_policy_name(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "aaa_specify_name_policy_name")

    @aaa_specify_name_policy_name.setter
    def aaa_specify_name_policy_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "aaa_specify_name_policy_name", value)

    @property
    @pulumi.getter(name="aaaSpecifyNamePolicyNameVariable")
    def aaa_specify_name_policy_name_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "aaa_specify_name_policy_name_variable")

    @aaa_specify_name_policy_name_variable.setter
    def aaa_specify_name_policy_name_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "aaa_specify_name_policy_name_variable", value)

    @property
    @pulumi.getter(name="aaaSpecifyNamePolicyPassword")
    def aaa_specify_name_policy_password(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "aaa_specify_name_policy_password")

    @aaa_specify_name_policy_password.setter
    def aaa_specify_name_policy_password(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "aaa_specify_name_policy_password", value)

    @property
    @pulumi.getter(name="aaaSpecifyNamePolicyPasswordVariable")
    def aaa_specify_name_policy_password_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "aaa_specify_name_policy_password_variable")

    @aaa_specify_name_policy_password_variable.setter
    def aaa_specify_name_policy_password_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "aaa_specify_name_policy_password_variable", value)

    @property
    @pulumi.getter(name="anyConnectEapAuthenticationType")
    def any_connect_eap_authentication_type(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        , Attribute conditional on `connection_type_ssl` being equal to `false` - Choices: `user`, `device`
        """
        return pulumi.get(self, "any_connect_eap_authentication_type")

    @any_connect_eap_authentication_type.setter
    def any_connect_eap_authentication_type(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "any_connect_eap_authentication_type", value)

    @property
    @pulumi.getter(name="connectionTypeSsl")
    def connection_type_ssl(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Enabled SSL VPN - Default value: `false`
        """
        return pulumi.get(self, "connection_type_ssl")

    @connection_type_ssl.setter
    def connection_type_ssl(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "connection_type_ssl", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The description of the Feature
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="enableCertificateListCheck")
    def enable_certificate_list_check(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        - Default value: `false`
        """
        return pulumi.get(self, "enable_certificate_list_check")

    @enable_certificate_list_check.setter
    def enable_certificate_list_check(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "enable_certificate_list_check", value)

    @property
    @pulumi.getter(name="enableCertificateListCheckVariable")
    def enable_certificate_list_check_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "enable_certificate_list_check_variable")

    @enable_certificate_list_check_variable.setter
    def enable_certificate_list_check_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "enable_certificate_list_check_variable", value)

    @property
    @pulumi.getter(name="featureProfileId")
    def feature_profile_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Feature Profile ID
        """
        return pulumi.get(self, "feature_profile_id")

    @feature_profile_id.setter
    def feature_profile_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "feature_profile_id", value)

    @property
    @pulumi.getter(name="ikev2AntiDosThreshold")
    def ikev2_anti_dos_threshold(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Anti-DOS Threshold, Attribute conditional on `connection_type_ssl` being equal to `false` - Range: `10`-`1000` - Default
        value: `100`
        """
        return pulumi.get(self, "ikev2_anti_dos_threshold")

    @ikev2_anti_dos_threshold.setter
    def ikev2_anti_dos_threshold(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "ikev2_anti_dos_threshold", value)

    @property
    @pulumi.getter(name="ikev2AntiDosThresholdVariable")
    def ikev2_anti_dos_threshold_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "ikev2_anti_dos_threshold_variable")

    @ikev2_anti_dos_threshold_variable.setter
    def ikev2_anti_dos_threshold_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ikev2_anti_dos_threshold_variable", value)

    @property
    @pulumi.getter(name="ikev2LocalIkeIdentityType")
    def ikev2_local_ike_identity_type(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        , Attribute conditional on `connection_type_ssl` being equal to `false` - Choices: `EMAIL`, `FQDN`, `KEYID`, `IPv4
        ADDRESS`, `IPv6 ADDRESS`
        """
        return pulumi.get(self, "ikev2_local_ike_identity_type")

    @ikev2_local_ike_identity_type.setter
    def ikev2_local_ike_identity_type(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ikev2_local_ike_identity_type", value)

    @property
    @pulumi.getter(name="ikev2LocalIkeIdentityTypeVariable")
    def ikev2_local_ike_identity_type_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "ikev2_local_ike_identity_type_variable")

    @ikev2_local_ike_identity_type_variable.setter
    def ikev2_local_ike_identity_type_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ikev2_local_ike_identity_type_variable", value)

    @property
    @pulumi.getter(name="ikev2LocalIkeIdentityValue")
    def ikev2_local_ike_identity_value(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        , Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "ikev2_local_ike_identity_value")

    @ikev2_local_ike_identity_value.setter
    def ikev2_local_ike_identity_value(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ikev2_local_ike_identity_value", value)

    @property
    @pulumi.getter(name="ikev2LocalIkeIdentityValueVariable")
    def ikev2_local_ike_identity_value_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "ikev2_local_ike_identity_value_variable")

    @ikev2_local_ike_identity_value_variable.setter
    def ikev2_local_ike_identity_value_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ikev2_local_ike_identity_value_variable", value)

    @property
    @pulumi.getter(name="ikev2SecurityAssociationLifetime")
    def ikev2_security_association_lifetime(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Security Association Lifetime in Seconds, Attribute conditional on `connection_type_ssl` being equal to `false` - Range:
        `3600`-`86400` - Default value: `86400`
        """
        return pulumi.get(self, "ikev2_security_association_lifetime")

    @ikev2_security_association_lifetime.setter
    def ikev2_security_association_lifetime(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "ikev2_security_association_lifetime", value)

    @property
    @pulumi.getter(name="ikev2SecurityAssociationLifetimeVariable")
    def ikev2_security_association_lifetime_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "ikev2_security_association_lifetime_variable")

    @ikev2_security_association_lifetime_variable.setter
    def ikev2_security_association_lifetime_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ikev2_security_association_lifetime_variable", value)

    @property
    @pulumi.getter(name="ipsecAntiReplayWindowSize")
    def ipsec_anti_replay_window_size(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        security Association Lifetime, Attribute conditional on `ipsec_enable_anti_replay` being equal to `true` - Default
        value: `64`
        """
        return pulumi.get(self, "ipsec_anti_replay_window_size")

    @ipsec_anti_replay_window_size.setter
    def ipsec_anti_replay_window_size(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "ipsec_anti_replay_window_size", value)

    @property
    @pulumi.getter(name="ipsecAntiReplayWindowSizeVariable")
    def ipsec_anti_replay_window_size_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name, Attribute conditional on `ipsec_enable_anti_replay` being equal to `true`
        """
        return pulumi.get(self, "ipsec_anti_replay_window_size_variable")

    @ipsec_anti_replay_window_size_variable.setter
    def ipsec_anti_replay_window_size_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipsec_anti_replay_window_size_variable", value)

    @property
    @pulumi.getter(name="ipsecEnableAntiReplay")
    def ipsec_enable_anti_replay(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Enable Anti-Replay, Attribute conditional on `connection_type_ssl` being equal to `false` - Default value: `true`
        """
        return pulumi.get(self, "ipsec_enable_anti_replay")

    @ipsec_enable_anti_replay.setter
    def ipsec_enable_anti_replay(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "ipsec_enable_anti_replay", value)

    @property
    @pulumi.getter(name="ipsecEnableAntiReplayVariable")
    def ipsec_enable_anti_replay_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "ipsec_enable_anti_replay_variable")

    @ipsec_enable_anti_replay_variable.setter
    def ipsec_enable_anti_replay_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipsec_enable_anti_replay_variable", value)

    @property
    @pulumi.getter(name="ipsecEnablePerfectFowardSecrecy")
    def ipsec_enable_perfect_foward_secrecy(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        security Association Lifetime, Attribute conditional on `connection_type_ssl` being equal to `false` - Default value:
        `false`
        """
        return pulumi.get(self, "ipsec_enable_perfect_foward_secrecy")

    @ipsec_enable_perfect_foward_secrecy.setter
    def ipsec_enable_perfect_foward_secrecy(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "ipsec_enable_perfect_foward_secrecy", value)

    @property
    @pulumi.getter(name="ipsecEnablePerfectFowardSecrecyVariable")
    def ipsec_enable_perfect_foward_secrecy_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "ipsec_enable_perfect_foward_secrecy_variable")

    @ipsec_enable_perfect_foward_secrecy_variable.setter
    def ipsec_enable_perfect_foward_secrecy_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipsec_enable_perfect_foward_secrecy_variable", value)

    @property
    @pulumi.getter(name="ipsecSecurityAssociationLifetime")
    def ipsec_security_association_lifetime(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Security Association Lifetime in Seconds, Attribute conditional on `connection_type_ssl` being equal to `false` - Range:
        `3600`-`86400` - Default value: `3600`
        """
        return pulumi.get(self, "ipsec_security_association_lifetime")

    @ipsec_security_association_lifetime.setter
    def ipsec_security_association_lifetime(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "ipsec_security_association_lifetime", value)

    @property
    @pulumi.getter(name="ipsecSecurityAssociationLifetimeVariable")
    def ipsec_security_association_lifetime_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "ipsec_security_association_lifetime_variable")

    @ipsec_security_association_lifetime_variable.setter
    def ipsec_security_association_lifetime_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipsec_security_association_lifetime_variable", value)

    @property
    @pulumi.getter(name="ipv4PoolSize")
    def ipv4_pool_size(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        IPv4 Pool Size - Default value: `1000`
        """
        return pulumi.get(self, "ipv4_pool_size")

    @ipv4_pool_size.setter
    def ipv4_pool_size(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "ipv4_pool_size", value)

    @property
    @pulumi.getter(name="ipv4PoolSizeVariable")
    def ipv4_pool_size_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ipv4_pool_size_variable")

    @ipv4_pool_size_variable.setter
    def ipv4_pool_size_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipv4_pool_size_variable", value)

    @property
    @pulumi.getter(name="ipv6PoolSize")
    def ipv6_pool_size(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        IPv6 Pool Size - Default value: `1024`
        """
        return pulumi.get(self, "ipv6_pool_size")

    @ipv6_pool_size.setter
    def ipv6_pool_size(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "ipv6_pool_size", value)

    @property
    @pulumi.getter(name="ipv6PoolSizeVariable")
    def ipv6_pool_size_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ipv6_pool_size_variable")

    @ipv6_pool_size_variable.setter
    def ipv6_pool_size_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipv6_pool_size_variable", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The name of the Feature
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="pskAuthenticationPreSharedKey")
    def psk_authentication_pre_shared_key(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        PSK Pre Shared Key, Attribute conditional on `psk_authentication_type` being equal to `group`
        """
        return pulumi.get(self, "psk_authentication_pre_shared_key")

    @psk_authentication_pre_shared_key.setter
    def psk_authentication_pre_shared_key(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "psk_authentication_pre_shared_key", value)

    @property
    @pulumi.getter(name="pskAuthenticationPreSharedKeyVariable")
    def psk_authentication_pre_shared_key_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name, Attribute conditional on `psk_authentication_type` being equal to `group`
        """
        return pulumi.get(self, "psk_authentication_pre_shared_key_variable")

    @psk_authentication_pre_shared_key_variable.setter
    def psk_authentication_pre_shared_key_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "psk_authentication_pre_shared_key_variable", value)

    @property
    @pulumi.getter(name="pskAuthenticationType")
    def psk_authentication_type(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        PSK Selection, Attribute conditional on `connection_type_ssl` being equal to `false` - Choices: `aaa`, `group`
        """
        return pulumi.get(self, "psk_authentication_type")

    @psk_authentication_type.setter
    def psk_authentication_type(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "psk_authentication_type", value)

    @property
    @pulumi.getter(name="pskAuthenticationTypeVariable")
    def psk_authentication_type_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "psk_authentication_type_variable")

    @psk_authentication_type_variable.setter
    def psk_authentication_type_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "psk_authentication_type_variable", value)

    @property
    @pulumi.getter(name="radiusGroupName")
    def radius_group_name(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "radius_group_name")

    @radius_group_name.setter
    def radius_group_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "radius_group_name", value)

    @property
    @pulumi.getter(name="radiusGroupNameVariable")
    def radius_group_name_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "radius_group_name_variable")

    @radius_group_name_variable.setter
    def radius_group_name_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "radius_group_name_variable", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        The version of the Feature
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "version", value)


@pulumi.type_token("sdwan:index/systemRemoteAccessFeature:SystemRemoteAccessFeature")
class SystemRemoteAccessFeature(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 aaa_derive_name_from_peer_domain: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_derive_name_from_peer_domain_variable: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_derive_name_from_peer_identity: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_derive_name_from_peer_identity_variable: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_enable_accounting: Optional[pulumi.Input[builtins.bool]] = None,
                 aaa_enable_accounting_variable: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_specify_name_policy_name: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_specify_name_policy_name_variable: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_specify_name_policy_password: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_specify_name_policy_password_variable: Optional[pulumi.Input[builtins.str]] = None,
                 any_connect_eap_authentication_type: Optional[pulumi.Input[builtins.str]] = None,
                 connection_type_ssl: Optional[pulumi.Input[builtins.bool]] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 enable_certificate_list_check: Optional[pulumi.Input[builtins.bool]] = None,
                 enable_certificate_list_check_variable: Optional[pulumi.Input[builtins.str]] = None,
                 feature_profile_id: Optional[pulumi.Input[builtins.str]] = None,
                 ikev2_anti_dos_threshold: Optional[pulumi.Input[builtins.int]] = None,
                 ikev2_anti_dos_threshold_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ikev2_local_ike_identity_type: Optional[pulumi.Input[builtins.str]] = None,
                 ikev2_local_ike_identity_type_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ikev2_local_ike_identity_value: Optional[pulumi.Input[builtins.str]] = None,
                 ikev2_local_ike_identity_value_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ikev2_security_association_lifetime: Optional[pulumi.Input[builtins.int]] = None,
                 ikev2_security_association_lifetime_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipsec_anti_replay_window_size: Optional[pulumi.Input[builtins.int]] = None,
                 ipsec_anti_replay_window_size_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipsec_enable_anti_replay: Optional[pulumi.Input[builtins.bool]] = None,
                 ipsec_enable_anti_replay_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipsec_enable_perfect_foward_secrecy: Optional[pulumi.Input[builtins.bool]] = None,
                 ipsec_enable_perfect_foward_secrecy_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipsec_security_association_lifetime: Optional[pulumi.Input[builtins.int]] = None,
                 ipsec_security_association_lifetime_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipv4_pool_size: Optional[pulumi.Input[builtins.int]] = None,
                 ipv4_pool_size_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipv6_pool_size: Optional[pulumi.Input[builtins.int]] = None,
                 ipv6_pool_size_variable: Optional[pulumi.Input[builtins.str]] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 psk_authentication_pre_shared_key: Optional[pulumi.Input[builtins.str]] = None,
                 psk_authentication_pre_shared_key_variable: Optional[pulumi.Input[builtins.str]] = None,
                 psk_authentication_type: Optional[pulumi.Input[builtins.str]] = None,
                 psk_authentication_type_variable: Optional[pulumi.Input[builtins.str]] = None,
                 radius_group_name: Optional[pulumi.Input[builtins.str]] = None,
                 radius_group_name_variable: Optional[pulumi.Input[builtins.str]] = None,
                 __props__=None):
        """
        This resource can manage a System Remote Access Feature.
          - Minimum SD-WAN Manager version: `20.12.0`

        ## Example Usage

        ```python
        import pulumi
        import pulumi_sdwan as sdwan

        example = sdwan.SystemRemoteAccessFeature("example",
            name="Example",
            description="My Example",
            feature_profile_id="f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
            connection_type_ssl=False,
            any_connect_eap_authentication_type="user",
            ipv4_pool_size=50,
            ipv6_pool_size=1024,
            enable_certificate_list_check=False,
            psk_authentication_type="aaa",
            radius_group_name="radius-1",
            aaa_derive_name_from_peer_identity="MyPassword",
            aaa_enable_accounting=False,
            ikev2_local_ike_identity_type="EMAIL",
            ikev2_local_ike_identity_value="abc@xyz.com",
            ikev2_security_association_lifetime=86400,
            ikev2_anti_dos_threshold=99,
            ipsec_enable_anti_replay=False,
            ipsec_security_association_lifetime=3600,
            ipsec_enable_perfect_foward_secrecy=False)
        ```

        ## Import

        The `pulumi import` command can be used, for example:

        Expected import identifier with the format: "system_remote_access_feature_id,feature_profile_id"

        ```sh
        $ pulumi import sdwan:index/systemRemoteAccessFeature:SystemRemoteAccessFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.str] aaa_derive_name_from_peer_domain: , Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.str] aaa_derive_name_from_peer_domain_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.str] aaa_derive_name_from_peer_identity: , Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.str] aaa_derive_name_from_peer_identity_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.bool] aaa_enable_accounting: Enable Accounting - Default value: `true`
        :param pulumi.Input[builtins.str] aaa_enable_accounting_variable: Variable name
        :param pulumi.Input[builtins.str] aaa_specify_name_policy_name_variable: Variable name
        :param pulumi.Input[builtins.str] aaa_specify_name_policy_password_variable: Variable name
        :param pulumi.Input[builtins.str] any_connect_eap_authentication_type: , Attribute conditional on `connection_type_ssl` being equal to `false` - Choices: `user`, `device`
        :param pulumi.Input[builtins.bool] connection_type_ssl: Enabled SSL VPN - Default value: `false`
        :param pulumi.Input[builtins.str] description: The description of the Feature
        :param pulumi.Input[builtins.bool] enable_certificate_list_check: - Default value: `false`
        :param pulumi.Input[builtins.str] enable_certificate_list_check_variable: Variable name
        :param pulumi.Input[builtins.str] feature_profile_id: Feature Profile ID
        :param pulumi.Input[builtins.int] ikev2_anti_dos_threshold: Anti-DOS Threshold, Attribute conditional on `connection_type_ssl` being equal to `false` - Range: `10`-`1000` - Default
               value: `100`
        :param pulumi.Input[builtins.str] ikev2_anti_dos_threshold_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.str] ikev2_local_ike_identity_type: , Attribute conditional on `connection_type_ssl` being equal to `false` - Choices: `EMAIL`, `FQDN`, `KEYID`, `IPv4
               ADDRESS`, `IPv6 ADDRESS`
        :param pulumi.Input[builtins.str] ikev2_local_ike_identity_type_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.str] ikev2_local_ike_identity_value: , Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.str] ikev2_local_ike_identity_value_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.int] ikev2_security_association_lifetime: Security Association Lifetime in Seconds, Attribute conditional on `connection_type_ssl` being equal to `false` - Range:
               `3600`-`86400` - Default value: `86400`
        :param pulumi.Input[builtins.str] ikev2_security_association_lifetime_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.int] ipsec_anti_replay_window_size: security Association Lifetime, Attribute conditional on `ipsec_enable_anti_replay` being equal to `true` - Default
               value: `64`
        :param pulumi.Input[builtins.str] ipsec_anti_replay_window_size_variable: Variable name, Attribute conditional on `ipsec_enable_anti_replay` being equal to `true`
        :param pulumi.Input[builtins.bool] ipsec_enable_anti_replay: Enable Anti-Replay, Attribute conditional on `connection_type_ssl` being equal to `false` - Default value: `true`
        :param pulumi.Input[builtins.str] ipsec_enable_anti_replay_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.bool] ipsec_enable_perfect_foward_secrecy: security Association Lifetime, Attribute conditional on `connection_type_ssl` being equal to `false` - Default value:
               `false`
        :param pulumi.Input[builtins.str] ipsec_enable_perfect_foward_secrecy_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.int] ipsec_security_association_lifetime: Security Association Lifetime in Seconds, Attribute conditional on `connection_type_ssl` being equal to `false` - Range:
               `3600`-`86400` - Default value: `3600`
        :param pulumi.Input[builtins.str] ipsec_security_association_lifetime_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.int] ipv4_pool_size: IPv4 Pool Size - Default value: `1000`
        :param pulumi.Input[builtins.str] ipv4_pool_size_variable: Variable name
        :param pulumi.Input[builtins.int] ipv6_pool_size: IPv6 Pool Size - Default value: `1024`
        :param pulumi.Input[builtins.str] ipv6_pool_size_variable: Variable name
        :param pulumi.Input[builtins.str] name: The name of the Feature
        :param pulumi.Input[builtins.str] psk_authentication_pre_shared_key: PSK Pre Shared Key, Attribute conditional on `psk_authentication_type` being equal to `group`
        :param pulumi.Input[builtins.str] psk_authentication_pre_shared_key_variable: Variable name, Attribute conditional on `psk_authentication_type` being equal to `group`
        :param pulumi.Input[builtins.str] psk_authentication_type: PSK Selection, Attribute conditional on `connection_type_ssl` being equal to `false` - Choices: `aaa`, `group`
        :param pulumi.Input[builtins.str] psk_authentication_type_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.str] radius_group_name_variable: Variable name
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: SystemRemoteAccessFeatureArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        This resource can manage a System Remote Access Feature.
          - Minimum SD-WAN Manager version: `20.12.0`

        ## Example Usage

        ```python
        import pulumi
        import pulumi_sdwan as sdwan

        example = sdwan.SystemRemoteAccessFeature("example",
            name="Example",
            description="My Example",
            feature_profile_id="f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
            connection_type_ssl=False,
            any_connect_eap_authentication_type="user",
            ipv4_pool_size=50,
            ipv6_pool_size=1024,
            enable_certificate_list_check=False,
            psk_authentication_type="aaa",
            radius_group_name="radius-1",
            aaa_derive_name_from_peer_identity="MyPassword",
            aaa_enable_accounting=False,
            ikev2_local_ike_identity_type="EMAIL",
            ikev2_local_ike_identity_value="abc@xyz.com",
            ikev2_security_association_lifetime=86400,
            ikev2_anti_dos_threshold=99,
            ipsec_enable_anti_replay=False,
            ipsec_security_association_lifetime=3600,
            ipsec_enable_perfect_foward_secrecy=False)
        ```

        ## Import

        The `pulumi import` command can be used, for example:

        Expected import identifier with the format: "system_remote_access_feature_id,feature_profile_id"

        ```sh
        $ pulumi import sdwan:index/systemRemoteAccessFeature:SystemRemoteAccessFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
        ```

        :param str resource_name: The name of the resource.
        :param SystemRemoteAccessFeatureArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SystemRemoteAccessFeatureArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 aaa_derive_name_from_peer_domain: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_derive_name_from_peer_domain_variable: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_derive_name_from_peer_identity: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_derive_name_from_peer_identity_variable: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_enable_accounting: Optional[pulumi.Input[builtins.bool]] = None,
                 aaa_enable_accounting_variable: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_specify_name_policy_name: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_specify_name_policy_name_variable: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_specify_name_policy_password: Optional[pulumi.Input[builtins.str]] = None,
                 aaa_specify_name_policy_password_variable: Optional[pulumi.Input[builtins.str]] = None,
                 any_connect_eap_authentication_type: Optional[pulumi.Input[builtins.str]] = None,
                 connection_type_ssl: Optional[pulumi.Input[builtins.bool]] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 enable_certificate_list_check: Optional[pulumi.Input[builtins.bool]] = None,
                 enable_certificate_list_check_variable: Optional[pulumi.Input[builtins.str]] = None,
                 feature_profile_id: Optional[pulumi.Input[builtins.str]] = None,
                 ikev2_anti_dos_threshold: Optional[pulumi.Input[builtins.int]] = None,
                 ikev2_anti_dos_threshold_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ikev2_local_ike_identity_type: Optional[pulumi.Input[builtins.str]] = None,
                 ikev2_local_ike_identity_type_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ikev2_local_ike_identity_value: Optional[pulumi.Input[builtins.str]] = None,
                 ikev2_local_ike_identity_value_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ikev2_security_association_lifetime: Optional[pulumi.Input[builtins.int]] = None,
                 ikev2_security_association_lifetime_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipsec_anti_replay_window_size: Optional[pulumi.Input[builtins.int]] = None,
                 ipsec_anti_replay_window_size_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipsec_enable_anti_replay: Optional[pulumi.Input[builtins.bool]] = None,
                 ipsec_enable_anti_replay_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipsec_enable_perfect_foward_secrecy: Optional[pulumi.Input[builtins.bool]] = None,
                 ipsec_enable_perfect_foward_secrecy_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipsec_security_association_lifetime: Optional[pulumi.Input[builtins.int]] = None,
                 ipsec_security_association_lifetime_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipv4_pool_size: Optional[pulumi.Input[builtins.int]] = None,
                 ipv4_pool_size_variable: Optional[pulumi.Input[builtins.str]] = None,
                 ipv6_pool_size: Optional[pulumi.Input[builtins.int]] = None,
                 ipv6_pool_size_variable: Optional[pulumi.Input[builtins.str]] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 psk_authentication_pre_shared_key: Optional[pulumi.Input[builtins.str]] = None,
                 psk_authentication_pre_shared_key_variable: Optional[pulumi.Input[builtins.str]] = None,
                 psk_authentication_type: Optional[pulumi.Input[builtins.str]] = None,
                 psk_authentication_type_variable: Optional[pulumi.Input[builtins.str]] = None,
                 radius_group_name: Optional[pulumi.Input[builtins.str]] = None,
                 radius_group_name_variable: Optional[pulumi.Input[builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SystemRemoteAccessFeatureArgs.__new__(SystemRemoteAccessFeatureArgs)

            __props__.__dict__["aaa_derive_name_from_peer_domain"] = aaa_derive_name_from_peer_domain
            __props__.__dict__["aaa_derive_name_from_peer_domain_variable"] = aaa_derive_name_from_peer_domain_variable
            __props__.__dict__["aaa_derive_name_from_peer_identity"] = aaa_derive_name_from_peer_identity
            __props__.__dict__["aaa_derive_name_from_peer_identity_variable"] = aaa_derive_name_from_peer_identity_variable
            __props__.__dict__["aaa_enable_accounting"] = aaa_enable_accounting
            __props__.__dict__["aaa_enable_accounting_variable"] = aaa_enable_accounting_variable
            __props__.__dict__["aaa_specify_name_policy_name"] = aaa_specify_name_policy_name
            __props__.__dict__["aaa_specify_name_policy_name_variable"] = aaa_specify_name_policy_name_variable
            __props__.__dict__["aaa_specify_name_policy_password"] = aaa_specify_name_policy_password
            __props__.__dict__["aaa_specify_name_policy_password_variable"] = aaa_specify_name_policy_password_variable
            __props__.__dict__["any_connect_eap_authentication_type"] = any_connect_eap_authentication_type
            __props__.__dict__["connection_type_ssl"] = connection_type_ssl
            __props__.__dict__["description"] = description
            __props__.__dict__["enable_certificate_list_check"] = enable_certificate_list_check
            __props__.__dict__["enable_certificate_list_check_variable"] = enable_certificate_list_check_variable
            if feature_profile_id is None and not opts.urn:
                raise TypeError("Missing required property 'feature_profile_id'")
            __props__.__dict__["feature_profile_id"] = feature_profile_id
            __props__.__dict__["ikev2_anti_dos_threshold"] = ikev2_anti_dos_threshold
            __props__.__dict__["ikev2_anti_dos_threshold_variable"] = ikev2_anti_dos_threshold_variable
            __props__.__dict__["ikev2_local_ike_identity_type"] = ikev2_local_ike_identity_type
            __props__.__dict__["ikev2_local_ike_identity_type_variable"] = ikev2_local_ike_identity_type_variable
            __props__.__dict__["ikev2_local_ike_identity_value"] = ikev2_local_ike_identity_value
            __props__.__dict__["ikev2_local_ike_identity_value_variable"] = ikev2_local_ike_identity_value_variable
            __props__.__dict__["ikev2_security_association_lifetime"] = ikev2_security_association_lifetime
            __props__.__dict__["ikev2_security_association_lifetime_variable"] = ikev2_security_association_lifetime_variable
            __props__.__dict__["ipsec_anti_replay_window_size"] = ipsec_anti_replay_window_size
            __props__.__dict__["ipsec_anti_replay_window_size_variable"] = ipsec_anti_replay_window_size_variable
            __props__.__dict__["ipsec_enable_anti_replay"] = ipsec_enable_anti_replay
            __props__.__dict__["ipsec_enable_anti_replay_variable"] = ipsec_enable_anti_replay_variable
            __props__.__dict__["ipsec_enable_perfect_foward_secrecy"] = ipsec_enable_perfect_foward_secrecy
            __props__.__dict__["ipsec_enable_perfect_foward_secrecy_variable"] = ipsec_enable_perfect_foward_secrecy_variable
            __props__.__dict__["ipsec_security_association_lifetime"] = ipsec_security_association_lifetime
            __props__.__dict__["ipsec_security_association_lifetime_variable"] = ipsec_security_association_lifetime_variable
            __props__.__dict__["ipv4_pool_size"] = ipv4_pool_size
            __props__.__dict__["ipv4_pool_size_variable"] = ipv4_pool_size_variable
            __props__.__dict__["ipv6_pool_size"] = ipv6_pool_size
            __props__.__dict__["ipv6_pool_size_variable"] = ipv6_pool_size_variable
            __props__.__dict__["name"] = name
            __props__.__dict__["psk_authentication_pre_shared_key"] = psk_authentication_pre_shared_key
            __props__.__dict__["psk_authentication_pre_shared_key_variable"] = psk_authentication_pre_shared_key_variable
            __props__.__dict__["psk_authentication_type"] = psk_authentication_type
            __props__.__dict__["psk_authentication_type_variable"] = psk_authentication_type_variable
            if radius_group_name is None and not opts.urn:
                raise TypeError("Missing required property 'radius_group_name'")
            __props__.__dict__["radius_group_name"] = radius_group_name
            __props__.__dict__["radius_group_name_variable"] = radius_group_name_variable
            __props__.__dict__["version"] = None
        super(SystemRemoteAccessFeature, __self__).__init__(
            'sdwan:index/systemRemoteAccessFeature:SystemRemoteAccessFeature',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            aaa_derive_name_from_peer_domain: Optional[pulumi.Input[builtins.str]] = None,
            aaa_derive_name_from_peer_domain_variable: Optional[pulumi.Input[builtins.str]] = None,
            aaa_derive_name_from_peer_identity: Optional[pulumi.Input[builtins.str]] = None,
            aaa_derive_name_from_peer_identity_variable: Optional[pulumi.Input[builtins.str]] = None,
            aaa_enable_accounting: Optional[pulumi.Input[builtins.bool]] = None,
            aaa_enable_accounting_variable: Optional[pulumi.Input[builtins.str]] = None,
            aaa_specify_name_policy_name: Optional[pulumi.Input[builtins.str]] = None,
            aaa_specify_name_policy_name_variable: Optional[pulumi.Input[builtins.str]] = None,
            aaa_specify_name_policy_password: Optional[pulumi.Input[builtins.str]] = None,
            aaa_specify_name_policy_password_variable: Optional[pulumi.Input[builtins.str]] = None,
            any_connect_eap_authentication_type: Optional[pulumi.Input[builtins.str]] = None,
            connection_type_ssl: Optional[pulumi.Input[builtins.bool]] = None,
            description: Optional[pulumi.Input[builtins.str]] = None,
            enable_certificate_list_check: Optional[pulumi.Input[builtins.bool]] = None,
            enable_certificate_list_check_variable: Optional[pulumi.Input[builtins.str]] = None,
            feature_profile_id: Optional[pulumi.Input[builtins.str]] = None,
            ikev2_anti_dos_threshold: Optional[pulumi.Input[builtins.int]] = None,
            ikev2_anti_dos_threshold_variable: Optional[pulumi.Input[builtins.str]] = None,
            ikev2_local_ike_identity_type: Optional[pulumi.Input[builtins.str]] = None,
            ikev2_local_ike_identity_type_variable: Optional[pulumi.Input[builtins.str]] = None,
            ikev2_local_ike_identity_value: Optional[pulumi.Input[builtins.str]] = None,
            ikev2_local_ike_identity_value_variable: Optional[pulumi.Input[builtins.str]] = None,
            ikev2_security_association_lifetime: Optional[pulumi.Input[builtins.int]] = None,
            ikev2_security_association_lifetime_variable: Optional[pulumi.Input[builtins.str]] = None,
            ipsec_anti_replay_window_size: Optional[pulumi.Input[builtins.int]] = None,
            ipsec_anti_replay_window_size_variable: Optional[pulumi.Input[builtins.str]] = None,
            ipsec_enable_anti_replay: Optional[pulumi.Input[builtins.bool]] = None,
            ipsec_enable_anti_replay_variable: Optional[pulumi.Input[builtins.str]] = None,
            ipsec_enable_perfect_foward_secrecy: Optional[pulumi.Input[builtins.bool]] = None,
            ipsec_enable_perfect_foward_secrecy_variable: Optional[pulumi.Input[builtins.str]] = None,
            ipsec_security_association_lifetime: Optional[pulumi.Input[builtins.int]] = None,
            ipsec_security_association_lifetime_variable: Optional[pulumi.Input[builtins.str]] = None,
            ipv4_pool_size: Optional[pulumi.Input[builtins.int]] = None,
            ipv4_pool_size_variable: Optional[pulumi.Input[builtins.str]] = None,
            ipv6_pool_size: Optional[pulumi.Input[builtins.int]] = None,
            ipv6_pool_size_variable: Optional[pulumi.Input[builtins.str]] = None,
            name: Optional[pulumi.Input[builtins.str]] = None,
            psk_authentication_pre_shared_key: Optional[pulumi.Input[builtins.str]] = None,
            psk_authentication_pre_shared_key_variable: Optional[pulumi.Input[builtins.str]] = None,
            psk_authentication_type: Optional[pulumi.Input[builtins.str]] = None,
            psk_authentication_type_variable: Optional[pulumi.Input[builtins.str]] = None,
            radius_group_name: Optional[pulumi.Input[builtins.str]] = None,
            radius_group_name_variable: Optional[pulumi.Input[builtins.str]] = None,
            version: Optional[pulumi.Input[builtins.int]] = None) -> 'SystemRemoteAccessFeature':
        """
        Get an existing SystemRemoteAccessFeature resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.str] aaa_derive_name_from_peer_domain: , Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.str] aaa_derive_name_from_peer_domain_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.str] aaa_derive_name_from_peer_identity: , Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.str] aaa_derive_name_from_peer_identity_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.bool] aaa_enable_accounting: Enable Accounting - Default value: `true`
        :param pulumi.Input[builtins.str] aaa_enable_accounting_variable: Variable name
        :param pulumi.Input[builtins.str] aaa_specify_name_policy_name_variable: Variable name
        :param pulumi.Input[builtins.str] aaa_specify_name_policy_password_variable: Variable name
        :param pulumi.Input[builtins.str] any_connect_eap_authentication_type: , Attribute conditional on `connection_type_ssl` being equal to `false` - Choices: `user`, `device`
        :param pulumi.Input[builtins.bool] connection_type_ssl: Enabled SSL VPN - Default value: `false`
        :param pulumi.Input[builtins.str] description: The description of the Feature
        :param pulumi.Input[builtins.bool] enable_certificate_list_check: - Default value: `false`
        :param pulumi.Input[builtins.str] enable_certificate_list_check_variable: Variable name
        :param pulumi.Input[builtins.str] feature_profile_id: Feature Profile ID
        :param pulumi.Input[builtins.int] ikev2_anti_dos_threshold: Anti-DOS Threshold, Attribute conditional on `connection_type_ssl` being equal to `false` - Range: `10`-`1000` - Default
               value: `100`
        :param pulumi.Input[builtins.str] ikev2_anti_dos_threshold_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.str] ikev2_local_ike_identity_type: , Attribute conditional on `connection_type_ssl` being equal to `false` - Choices: `EMAIL`, `FQDN`, `KEYID`, `IPv4
               ADDRESS`, `IPv6 ADDRESS`
        :param pulumi.Input[builtins.str] ikev2_local_ike_identity_type_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.str] ikev2_local_ike_identity_value: , Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.str] ikev2_local_ike_identity_value_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.int] ikev2_security_association_lifetime: Security Association Lifetime in Seconds, Attribute conditional on `connection_type_ssl` being equal to `false` - Range:
               `3600`-`86400` - Default value: `86400`
        :param pulumi.Input[builtins.str] ikev2_security_association_lifetime_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.int] ipsec_anti_replay_window_size: security Association Lifetime, Attribute conditional on `ipsec_enable_anti_replay` being equal to `true` - Default
               value: `64`
        :param pulumi.Input[builtins.str] ipsec_anti_replay_window_size_variable: Variable name, Attribute conditional on `ipsec_enable_anti_replay` being equal to `true`
        :param pulumi.Input[builtins.bool] ipsec_enable_anti_replay: Enable Anti-Replay, Attribute conditional on `connection_type_ssl` being equal to `false` - Default value: `true`
        :param pulumi.Input[builtins.str] ipsec_enable_anti_replay_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.bool] ipsec_enable_perfect_foward_secrecy: security Association Lifetime, Attribute conditional on `connection_type_ssl` being equal to `false` - Default value:
               `false`
        :param pulumi.Input[builtins.str] ipsec_enable_perfect_foward_secrecy_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.int] ipsec_security_association_lifetime: Security Association Lifetime in Seconds, Attribute conditional on `connection_type_ssl` being equal to `false` - Range:
               `3600`-`86400` - Default value: `3600`
        :param pulumi.Input[builtins.str] ipsec_security_association_lifetime_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.int] ipv4_pool_size: IPv4 Pool Size - Default value: `1000`
        :param pulumi.Input[builtins.str] ipv4_pool_size_variable: Variable name
        :param pulumi.Input[builtins.int] ipv6_pool_size: IPv6 Pool Size - Default value: `1024`
        :param pulumi.Input[builtins.str] ipv6_pool_size_variable: Variable name
        :param pulumi.Input[builtins.str] name: The name of the Feature
        :param pulumi.Input[builtins.str] psk_authentication_pre_shared_key: PSK Pre Shared Key, Attribute conditional on `psk_authentication_type` being equal to `group`
        :param pulumi.Input[builtins.str] psk_authentication_pre_shared_key_variable: Variable name, Attribute conditional on `psk_authentication_type` being equal to `group`
        :param pulumi.Input[builtins.str] psk_authentication_type: PSK Selection, Attribute conditional on `connection_type_ssl` being equal to `false` - Choices: `aaa`, `group`
        :param pulumi.Input[builtins.str] psk_authentication_type_variable: Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        :param pulumi.Input[builtins.str] radius_group_name_variable: Variable name
        :param pulumi.Input[builtins.int] version: The version of the Feature
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SystemRemoteAccessFeatureState.__new__(_SystemRemoteAccessFeatureState)

        __props__.__dict__["aaa_derive_name_from_peer_domain"] = aaa_derive_name_from_peer_domain
        __props__.__dict__["aaa_derive_name_from_peer_domain_variable"] = aaa_derive_name_from_peer_domain_variable
        __props__.__dict__["aaa_derive_name_from_peer_identity"] = aaa_derive_name_from_peer_identity
        __props__.__dict__["aaa_derive_name_from_peer_identity_variable"] = aaa_derive_name_from_peer_identity_variable
        __props__.__dict__["aaa_enable_accounting"] = aaa_enable_accounting
        __props__.__dict__["aaa_enable_accounting_variable"] = aaa_enable_accounting_variable
        __props__.__dict__["aaa_specify_name_policy_name"] = aaa_specify_name_policy_name
        __props__.__dict__["aaa_specify_name_policy_name_variable"] = aaa_specify_name_policy_name_variable
        __props__.__dict__["aaa_specify_name_policy_password"] = aaa_specify_name_policy_password
        __props__.__dict__["aaa_specify_name_policy_password_variable"] = aaa_specify_name_policy_password_variable
        __props__.__dict__["any_connect_eap_authentication_type"] = any_connect_eap_authentication_type
        __props__.__dict__["connection_type_ssl"] = connection_type_ssl
        __props__.__dict__["description"] = description
        __props__.__dict__["enable_certificate_list_check"] = enable_certificate_list_check
        __props__.__dict__["enable_certificate_list_check_variable"] = enable_certificate_list_check_variable
        __props__.__dict__["feature_profile_id"] = feature_profile_id
        __props__.__dict__["ikev2_anti_dos_threshold"] = ikev2_anti_dos_threshold
        __props__.__dict__["ikev2_anti_dos_threshold_variable"] = ikev2_anti_dos_threshold_variable
        __props__.__dict__["ikev2_local_ike_identity_type"] = ikev2_local_ike_identity_type
        __props__.__dict__["ikev2_local_ike_identity_type_variable"] = ikev2_local_ike_identity_type_variable
        __props__.__dict__["ikev2_local_ike_identity_value"] = ikev2_local_ike_identity_value
        __props__.__dict__["ikev2_local_ike_identity_value_variable"] = ikev2_local_ike_identity_value_variable
        __props__.__dict__["ikev2_security_association_lifetime"] = ikev2_security_association_lifetime
        __props__.__dict__["ikev2_security_association_lifetime_variable"] = ikev2_security_association_lifetime_variable
        __props__.__dict__["ipsec_anti_replay_window_size"] = ipsec_anti_replay_window_size
        __props__.__dict__["ipsec_anti_replay_window_size_variable"] = ipsec_anti_replay_window_size_variable
        __props__.__dict__["ipsec_enable_anti_replay"] = ipsec_enable_anti_replay
        __props__.__dict__["ipsec_enable_anti_replay_variable"] = ipsec_enable_anti_replay_variable
        __props__.__dict__["ipsec_enable_perfect_foward_secrecy"] = ipsec_enable_perfect_foward_secrecy
        __props__.__dict__["ipsec_enable_perfect_foward_secrecy_variable"] = ipsec_enable_perfect_foward_secrecy_variable
        __props__.__dict__["ipsec_security_association_lifetime"] = ipsec_security_association_lifetime
        __props__.__dict__["ipsec_security_association_lifetime_variable"] = ipsec_security_association_lifetime_variable
        __props__.__dict__["ipv4_pool_size"] = ipv4_pool_size
        __props__.__dict__["ipv4_pool_size_variable"] = ipv4_pool_size_variable
        __props__.__dict__["ipv6_pool_size"] = ipv6_pool_size
        __props__.__dict__["ipv6_pool_size_variable"] = ipv6_pool_size_variable
        __props__.__dict__["name"] = name
        __props__.__dict__["psk_authentication_pre_shared_key"] = psk_authentication_pre_shared_key
        __props__.__dict__["psk_authentication_pre_shared_key_variable"] = psk_authentication_pre_shared_key_variable
        __props__.__dict__["psk_authentication_type"] = psk_authentication_type
        __props__.__dict__["psk_authentication_type_variable"] = psk_authentication_type_variable
        __props__.__dict__["radius_group_name"] = radius_group_name
        __props__.__dict__["radius_group_name_variable"] = radius_group_name_variable
        __props__.__dict__["version"] = version
        return SystemRemoteAccessFeature(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="aaaDeriveNameFromPeerDomain")
    def aaa_derive_name_from_peer_domain(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        , Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "aaa_derive_name_from_peer_domain")

    @property
    @pulumi.getter(name="aaaDeriveNameFromPeerDomainVariable")
    def aaa_derive_name_from_peer_domain_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "aaa_derive_name_from_peer_domain_variable")

    @property
    @pulumi.getter(name="aaaDeriveNameFromPeerIdentity")
    def aaa_derive_name_from_peer_identity(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        , Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "aaa_derive_name_from_peer_identity")

    @property
    @pulumi.getter(name="aaaDeriveNameFromPeerIdentityVariable")
    def aaa_derive_name_from_peer_identity_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "aaa_derive_name_from_peer_identity_variable")

    @property
    @pulumi.getter(name="aaaEnableAccounting")
    def aaa_enable_accounting(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Enable Accounting - Default value: `true`
        """
        return pulumi.get(self, "aaa_enable_accounting")

    @property
    @pulumi.getter(name="aaaEnableAccountingVariable")
    def aaa_enable_accounting_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "aaa_enable_accounting_variable")

    @property
    @pulumi.getter(name="aaaSpecifyNamePolicyName")
    def aaa_specify_name_policy_name(self) -> pulumi.Output[Optional[builtins.str]]:
        return pulumi.get(self, "aaa_specify_name_policy_name")

    @property
    @pulumi.getter(name="aaaSpecifyNamePolicyNameVariable")
    def aaa_specify_name_policy_name_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "aaa_specify_name_policy_name_variable")

    @property
    @pulumi.getter(name="aaaSpecifyNamePolicyPassword")
    def aaa_specify_name_policy_password(self) -> pulumi.Output[Optional[builtins.str]]:
        return pulumi.get(self, "aaa_specify_name_policy_password")

    @property
    @pulumi.getter(name="aaaSpecifyNamePolicyPasswordVariable")
    def aaa_specify_name_policy_password_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "aaa_specify_name_policy_password_variable")

    @property
    @pulumi.getter(name="anyConnectEapAuthenticationType")
    def any_connect_eap_authentication_type(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        , Attribute conditional on `connection_type_ssl` being equal to `false` - Choices: `user`, `device`
        """
        return pulumi.get(self, "any_connect_eap_authentication_type")

    @property
    @pulumi.getter(name="connectionTypeSsl")
    def connection_type_ssl(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Enabled SSL VPN - Default value: `false`
        """
        return pulumi.get(self, "connection_type_ssl")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        The description of the Feature
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="enableCertificateListCheck")
    def enable_certificate_list_check(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        - Default value: `false`
        """
        return pulumi.get(self, "enable_certificate_list_check")

    @property
    @pulumi.getter(name="enableCertificateListCheckVariable")
    def enable_certificate_list_check_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "enable_certificate_list_check_variable")

    @property
    @pulumi.getter(name="featureProfileId")
    def feature_profile_id(self) -> pulumi.Output[builtins.str]:
        """
        Feature Profile ID
        """
        return pulumi.get(self, "feature_profile_id")

    @property
    @pulumi.getter(name="ikev2AntiDosThreshold")
    def ikev2_anti_dos_threshold(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        Anti-DOS Threshold, Attribute conditional on `connection_type_ssl` being equal to `false` - Range: `10`-`1000` - Default
        value: `100`
        """
        return pulumi.get(self, "ikev2_anti_dos_threshold")

    @property
    @pulumi.getter(name="ikev2AntiDosThresholdVariable")
    def ikev2_anti_dos_threshold_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "ikev2_anti_dos_threshold_variable")

    @property
    @pulumi.getter(name="ikev2LocalIkeIdentityType")
    def ikev2_local_ike_identity_type(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        , Attribute conditional on `connection_type_ssl` being equal to `false` - Choices: `EMAIL`, `FQDN`, `KEYID`, `IPv4
        ADDRESS`, `IPv6 ADDRESS`
        """
        return pulumi.get(self, "ikev2_local_ike_identity_type")

    @property
    @pulumi.getter(name="ikev2LocalIkeIdentityTypeVariable")
    def ikev2_local_ike_identity_type_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "ikev2_local_ike_identity_type_variable")

    @property
    @pulumi.getter(name="ikev2LocalIkeIdentityValue")
    def ikev2_local_ike_identity_value(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        , Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "ikev2_local_ike_identity_value")

    @property
    @pulumi.getter(name="ikev2LocalIkeIdentityValueVariable")
    def ikev2_local_ike_identity_value_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "ikev2_local_ike_identity_value_variable")

    @property
    @pulumi.getter(name="ikev2SecurityAssociationLifetime")
    def ikev2_security_association_lifetime(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        Security Association Lifetime in Seconds, Attribute conditional on `connection_type_ssl` being equal to `false` - Range:
        `3600`-`86400` - Default value: `86400`
        """
        return pulumi.get(self, "ikev2_security_association_lifetime")

    @property
    @pulumi.getter(name="ikev2SecurityAssociationLifetimeVariable")
    def ikev2_security_association_lifetime_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "ikev2_security_association_lifetime_variable")

    @property
    @pulumi.getter(name="ipsecAntiReplayWindowSize")
    def ipsec_anti_replay_window_size(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        security Association Lifetime, Attribute conditional on `ipsec_enable_anti_replay` being equal to `true` - Default
        value: `64`
        """
        return pulumi.get(self, "ipsec_anti_replay_window_size")

    @property
    @pulumi.getter(name="ipsecAntiReplayWindowSizeVariable")
    def ipsec_anti_replay_window_size_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name, Attribute conditional on `ipsec_enable_anti_replay` being equal to `true`
        """
        return pulumi.get(self, "ipsec_anti_replay_window_size_variable")

    @property
    @pulumi.getter(name="ipsecEnableAntiReplay")
    def ipsec_enable_anti_replay(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Enable Anti-Replay, Attribute conditional on `connection_type_ssl` being equal to `false` - Default value: `true`
        """
        return pulumi.get(self, "ipsec_enable_anti_replay")

    @property
    @pulumi.getter(name="ipsecEnableAntiReplayVariable")
    def ipsec_enable_anti_replay_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "ipsec_enable_anti_replay_variable")

    @property
    @pulumi.getter(name="ipsecEnablePerfectFowardSecrecy")
    def ipsec_enable_perfect_foward_secrecy(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        security Association Lifetime, Attribute conditional on `connection_type_ssl` being equal to `false` - Default value:
        `false`
        """
        return pulumi.get(self, "ipsec_enable_perfect_foward_secrecy")

    @property
    @pulumi.getter(name="ipsecEnablePerfectFowardSecrecyVariable")
    def ipsec_enable_perfect_foward_secrecy_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "ipsec_enable_perfect_foward_secrecy_variable")

    @property
    @pulumi.getter(name="ipsecSecurityAssociationLifetime")
    def ipsec_security_association_lifetime(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        Security Association Lifetime in Seconds, Attribute conditional on `connection_type_ssl` being equal to `false` - Range:
        `3600`-`86400` - Default value: `3600`
        """
        return pulumi.get(self, "ipsec_security_association_lifetime")

    @property
    @pulumi.getter(name="ipsecSecurityAssociationLifetimeVariable")
    def ipsec_security_association_lifetime_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "ipsec_security_association_lifetime_variable")

    @property
    @pulumi.getter(name="ipv4PoolSize")
    def ipv4_pool_size(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        IPv4 Pool Size - Default value: `1000`
        """
        return pulumi.get(self, "ipv4_pool_size")

    @property
    @pulumi.getter(name="ipv4PoolSizeVariable")
    def ipv4_pool_size_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ipv4_pool_size_variable")

    @property
    @pulumi.getter(name="ipv6PoolSize")
    def ipv6_pool_size(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        IPv6 Pool Size - Default value: `1024`
        """
        return pulumi.get(self, "ipv6_pool_size")

    @property
    @pulumi.getter(name="ipv6PoolSizeVariable")
    def ipv6_pool_size_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ipv6_pool_size_variable")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[builtins.str]:
        """
        The name of the Feature
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="pskAuthenticationPreSharedKey")
    def psk_authentication_pre_shared_key(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        PSK Pre Shared Key, Attribute conditional on `psk_authentication_type` being equal to `group`
        """
        return pulumi.get(self, "psk_authentication_pre_shared_key")

    @property
    @pulumi.getter(name="pskAuthenticationPreSharedKeyVariable")
    def psk_authentication_pre_shared_key_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name, Attribute conditional on `psk_authentication_type` being equal to `group`
        """
        return pulumi.get(self, "psk_authentication_pre_shared_key_variable")

    @property
    @pulumi.getter(name="pskAuthenticationType")
    def psk_authentication_type(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        PSK Selection, Attribute conditional on `connection_type_ssl` being equal to `false` - Choices: `aaa`, `group`
        """
        return pulumi.get(self, "psk_authentication_type")

    @property
    @pulumi.getter(name="pskAuthenticationTypeVariable")
    def psk_authentication_type_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name, Attribute conditional on `connection_type_ssl` being equal to `false`
        """
        return pulumi.get(self, "psk_authentication_type_variable")

    @property
    @pulumi.getter(name="radiusGroupName")
    def radius_group_name(self) -> pulumi.Output[builtins.str]:
        return pulumi.get(self, "radius_group_name")

    @property
    @pulumi.getter(name="radiusGroupNameVariable")
    def radius_group_name_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "radius_group_name_variable")

    @property
    @pulumi.getter
    def version(self) -> pulumi.Output[builtins.int]:
        """
        The version of the Feature
        """
        return pulumi.get(self, "version")

