# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['ObjectGroupPolicyDefinitionArgs', 'ObjectGroupPolicyDefinition']

@pulumi.input_type
class ObjectGroupPolicyDefinitionArgs:
    def __init__(__self__, *,
                 description: pulumi.Input[builtins.str],
                 data_fqdn_prefix_list_id: Optional[pulumi.Input[builtins.str]] = None,
                 data_fqdn_prefix_list_version: Optional[pulumi.Input[builtins.int]] = None,
                 data_ipv4_prefix_list_id: Optional[pulumi.Input[builtins.str]] = None,
                 data_ipv4_prefix_list_version: Optional[pulumi.Input[builtins.int]] = None,
                 fqdn: Optional[pulumi.Input[builtins.str]] = None,
                 geo_location: Optional[pulumi.Input[builtins.str]] = None,
                 geo_location_list_id: Optional[pulumi.Input[builtins.str]] = None,
                 geo_location_list_version: Optional[pulumi.Input[builtins.int]] = None,
                 ipv4_prefix: Optional[pulumi.Input[builtins.str]] = None,
                 ipv4_prefix_variable: Optional[pulumi.Input[builtins.str]] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 port: Optional[pulumi.Input[builtins.str]] = None,
                 port_list_id: Optional[pulumi.Input[builtins.str]] = None,
                 port_list_version: Optional[pulumi.Input[builtins.int]] = None):
        """
        The set of arguments for constructing a ObjectGroupPolicyDefinition resource.
        :param pulumi.Input[builtins.str] description: The description of the policy definition
        :param pulumi.Input[builtins.str] data_fqdn_prefix_list_id: Data FQDN prefix list ID
        :param pulumi.Input[builtins.int] data_fqdn_prefix_list_version: Data FQDN prefix list version
        :param pulumi.Input[builtins.str] data_ipv4_prefix_list_id: Data IPv4 prefix list ID
        :param pulumi.Input[builtins.int] data_ipv4_prefix_list_version: Data IPv4 prefix list version
        :param pulumi.Input[builtins.str] fqdn: Fully qualified domain name
        :param pulumi.Input[builtins.str] geo_location: Geo location
        :param pulumi.Input[builtins.str] geo_location_list_id: Geo location list ID
        :param pulumi.Input[builtins.int] geo_location_list_version: Geo location list version
        :param pulumi.Input[builtins.str] ipv4_prefix: IPv4 prefix
        :param pulumi.Input[builtins.str] ipv4_prefix_variable: IPv4 prefix variable name
        :param pulumi.Input[builtins.str] name: The name of the policy definition
        :param pulumi.Input[builtins.str] port: Port or range of ports
        :param pulumi.Input[builtins.str] port_list_id: Port list ID
        :param pulumi.Input[builtins.int] port_list_version: Port list version
        """
        pulumi.set(__self__, "description", description)
        if data_fqdn_prefix_list_id is not None:
            pulumi.set(__self__, "data_fqdn_prefix_list_id", data_fqdn_prefix_list_id)
        if data_fqdn_prefix_list_version is not None:
            pulumi.set(__self__, "data_fqdn_prefix_list_version", data_fqdn_prefix_list_version)
        if data_ipv4_prefix_list_id is not None:
            pulumi.set(__self__, "data_ipv4_prefix_list_id", data_ipv4_prefix_list_id)
        if data_ipv4_prefix_list_version is not None:
            pulumi.set(__self__, "data_ipv4_prefix_list_version", data_ipv4_prefix_list_version)
        if fqdn is not None:
            pulumi.set(__self__, "fqdn", fqdn)
        if geo_location is not None:
            pulumi.set(__self__, "geo_location", geo_location)
        if geo_location_list_id is not None:
            pulumi.set(__self__, "geo_location_list_id", geo_location_list_id)
        if geo_location_list_version is not None:
            pulumi.set(__self__, "geo_location_list_version", geo_location_list_version)
        if ipv4_prefix is not None:
            pulumi.set(__self__, "ipv4_prefix", ipv4_prefix)
        if ipv4_prefix_variable is not None:
            pulumi.set(__self__, "ipv4_prefix_variable", ipv4_prefix_variable)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if port is not None:
            pulumi.set(__self__, "port", port)
        if port_list_id is not None:
            pulumi.set(__self__, "port_list_id", port_list_id)
        if port_list_version is not None:
            pulumi.set(__self__, "port_list_version", port_list_version)

    @property
    @pulumi.getter
    def description(self) -> pulumi.Input[builtins.str]:
        """
        The description of the policy definition
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="dataFqdnPrefixListId")
    def data_fqdn_prefix_list_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Data FQDN prefix list ID
        """
        return pulumi.get(self, "data_fqdn_prefix_list_id")

    @data_fqdn_prefix_list_id.setter
    def data_fqdn_prefix_list_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "data_fqdn_prefix_list_id", value)

    @property
    @pulumi.getter(name="dataFqdnPrefixListVersion")
    def data_fqdn_prefix_list_version(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Data FQDN prefix list version
        """
        return pulumi.get(self, "data_fqdn_prefix_list_version")

    @data_fqdn_prefix_list_version.setter
    def data_fqdn_prefix_list_version(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "data_fqdn_prefix_list_version", value)

    @property
    @pulumi.getter(name="dataIpv4PrefixListId")
    def data_ipv4_prefix_list_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Data IPv4 prefix list ID
        """
        return pulumi.get(self, "data_ipv4_prefix_list_id")

    @data_ipv4_prefix_list_id.setter
    def data_ipv4_prefix_list_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "data_ipv4_prefix_list_id", value)

    @property
    @pulumi.getter(name="dataIpv4PrefixListVersion")
    def data_ipv4_prefix_list_version(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Data IPv4 prefix list version
        """
        return pulumi.get(self, "data_ipv4_prefix_list_version")

    @data_ipv4_prefix_list_version.setter
    def data_ipv4_prefix_list_version(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "data_ipv4_prefix_list_version", value)

    @property
    @pulumi.getter
    def fqdn(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Fully qualified domain name
        """
        return pulumi.get(self, "fqdn")

    @fqdn.setter
    def fqdn(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "fqdn", value)

    @property
    @pulumi.getter(name="geoLocation")
    def geo_location(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Geo location
        """
        return pulumi.get(self, "geo_location")

    @geo_location.setter
    def geo_location(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "geo_location", value)

    @property
    @pulumi.getter(name="geoLocationListId")
    def geo_location_list_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Geo location list ID
        """
        return pulumi.get(self, "geo_location_list_id")

    @geo_location_list_id.setter
    def geo_location_list_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "geo_location_list_id", value)

    @property
    @pulumi.getter(name="geoLocationListVersion")
    def geo_location_list_version(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Geo location list version
        """
        return pulumi.get(self, "geo_location_list_version")

    @geo_location_list_version.setter
    def geo_location_list_version(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "geo_location_list_version", value)

    @property
    @pulumi.getter(name="ipv4Prefix")
    def ipv4_prefix(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        IPv4 prefix
        """
        return pulumi.get(self, "ipv4_prefix")

    @ipv4_prefix.setter
    def ipv4_prefix(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipv4_prefix", value)

    @property
    @pulumi.getter(name="ipv4PrefixVariable")
    def ipv4_prefix_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        IPv4 prefix variable name
        """
        return pulumi.get(self, "ipv4_prefix_variable")

    @ipv4_prefix_variable.setter
    def ipv4_prefix_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipv4_prefix_variable", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The name of the policy definition
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def port(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Port or range of ports
        """
        return pulumi.get(self, "port")

    @port.setter
    def port(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "port", value)

    @property
    @pulumi.getter(name="portListId")
    def port_list_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Port list ID
        """
        return pulumi.get(self, "port_list_id")

    @port_list_id.setter
    def port_list_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "port_list_id", value)

    @property
    @pulumi.getter(name="portListVersion")
    def port_list_version(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Port list version
        """
        return pulumi.get(self, "port_list_version")

    @port_list_version.setter
    def port_list_version(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "port_list_version", value)


@pulumi.input_type
class _ObjectGroupPolicyDefinitionState:
    def __init__(__self__, *,
                 data_fqdn_prefix_list_id: Optional[pulumi.Input[builtins.str]] = None,
                 data_fqdn_prefix_list_version: Optional[pulumi.Input[builtins.int]] = None,
                 data_ipv4_prefix_list_id: Optional[pulumi.Input[builtins.str]] = None,
                 data_ipv4_prefix_list_version: Optional[pulumi.Input[builtins.int]] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 fqdn: Optional[pulumi.Input[builtins.str]] = None,
                 geo_location: Optional[pulumi.Input[builtins.str]] = None,
                 geo_location_list_id: Optional[pulumi.Input[builtins.str]] = None,
                 geo_location_list_version: Optional[pulumi.Input[builtins.int]] = None,
                 ipv4_prefix: Optional[pulumi.Input[builtins.str]] = None,
                 ipv4_prefix_variable: Optional[pulumi.Input[builtins.str]] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 port: Optional[pulumi.Input[builtins.str]] = None,
                 port_list_id: Optional[pulumi.Input[builtins.str]] = None,
                 port_list_version: Optional[pulumi.Input[builtins.int]] = None,
                 version: Optional[pulumi.Input[builtins.int]] = None):
        """
        Input properties used for looking up and filtering ObjectGroupPolicyDefinition resources.
        :param pulumi.Input[builtins.str] data_fqdn_prefix_list_id: Data FQDN prefix list ID
        :param pulumi.Input[builtins.int] data_fqdn_prefix_list_version: Data FQDN prefix list version
        :param pulumi.Input[builtins.str] data_ipv4_prefix_list_id: Data IPv4 prefix list ID
        :param pulumi.Input[builtins.int] data_ipv4_prefix_list_version: Data IPv4 prefix list version
        :param pulumi.Input[builtins.str] description: The description of the policy definition
        :param pulumi.Input[builtins.str] fqdn: Fully qualified domain name
        :param pulumi.Input[builtins.str] geo_location: Geo location
        :param pulumi.Input[builtins.str] geo_location_list_id: Geo location list ID
        :param pulumi.Input[builtins.int] geo_location_list_version: Geo location list version
        :param pulumi.Input[builtins.str] ipv4_prefix: IPv4 prefix
        :param pulumi.Input[builtins.str] ipv4_prefix_variable: IPv4 prefix variable name
        :param pulumi.Input[builtins.str] name: The name of the policy definition
        :param pulumi.Input[builtins.str] port: Port or range of ports
        :param pulumi.Input[builtins.str] port_list_id: Port list ID
        :param pulumi.Input[builtins.int] port_list_version: Port list version
        :param pulumi.Input[builtins.int] version: The version of the object
        """
        if data_fqdn_prefix_list_id is not None:
            pulumi.set(__self__, "data_fqdn_prefix_list_id", data_fqdn_prefix_list_id)
        if data_fqdn_prefix_list_version is not None:
            pulumi.set(__self__, "data_fqdn_prefix_list_version", data_fqdn_prefix_list_version)
        if data_ipv4_prefix_list_id is not None:
            pulumi.set(__self__, "data_ipv4_prefix_list_id", data_ipv4_prefix_list_id)
        if data_ipv4_prefix_list_version is not None:
            pulumi.set(__self__, "data_ipv4_prefix_list_version", data_ipv4_prefix_list_version)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if fqdn is not None:
            pulumi.set(__self__, "fqdn", fqdn)
        if geo_location is not None:
            pulumi.set(__self__, "geo_location", geo_location)
        if geo_location_list_id is not None:
            pulumi.set(__self__, "geo_location_list_id", geo_location_list_id)
        if geo_location_list_version is not None:
            pulumi.set(__self__, "geo_location_list_version", geo_location_list_version)
        if ipv4_prefix is not None:
            pulumi.set(__self__, "ipv4_prefix", ipv4_prefix)
        if ipv4_prefix_variable is not None:
            pulumi.set(__self__, "ipv4_prefix_variable", ipv4_prefix_variable)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if port is not None:
            pulumi.set(__self__, "port", port)
        if port_list_id is not None:
            pulumi.set(__self__, "port_list_id", port_list_id)
        if port_list_version is not None:
            pulumi.set(__self__, "port_list_version", port_list_version)
        if version is not None:
            pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter(name="dataFqdnPrefixListId")
    def data_fqdn_prefix_list_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Data FQDN prefix list ID
        """
        return pulumi.get(self, "data_fqdn_prefix_list_id")

    @data_fqdn_prefix_list_id.setter
    def data_fqdn_prefix_list_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "data_fqdn_prefix_list_id", value)

    @property
    @pulumi.getter(name="dataFqdnPrefixListVersion")
    def data_fqdn_prefix_list_version(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Data FQDN prefix list version
        """
        return pulumi.get(self, "data_fqdn_prefix_list_version")

    @data_fqdn_prefix_list_version.setter
    def data_fqdn_prefix_list_version(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "data_fqdn_prefix_list_version", value)

    @property
    @pulumi.getter(name="dataIpv4PrefixListId")
    def data_ipv4_prefix_list_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Data IPv4 prefix list ID
        """
        return pulumi.get(self, "data_ipv4_prefix_list_id")

    @data_ipv4_prefix_list_id.setter
    def data_ipv4_prefix_list_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "data_ipv4_prefix_list_id", value)

    @property
    @pulumi.getter(name="dataIpv4PrefixListVersion")
    def data_ipv4_prefix_list_version(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Data IPv4 prefix list version
        """
        return pulumi.get(self, "data_ipv4_prefix_list_version")

    @data_ipv4_prefix_list_version.setter
    def data_ipv4_prefix_list_version(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "data_ipv4_prefix_list_version", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The description of the policy definition
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def fqdn(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Fully qualified domain name
        """
        return pulumi.get(self, "fqdn")

    @fqdn.setter
    def fqdn(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "fqdn", value)

    @property
    @pulumi.getter(name="geoLocation")
    def geo_location(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Geo location
        """
        return pulumi.get(self, "geo_location")

    @geo_location.setter
    def geo_location(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "geo_location", value)

    @property
    @pulumi.getter(name="geoLocationListId")
    def geo_location_list_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Geo location list ID
        """
        return pulumi.get(self, "geo_location_list_id")

    @geo_location_list_id.setter
    def geo_location_list_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "geo_location_list_id", value)

    @property
    @pulumi.getter(name="geoLocationListVersion")
    def geo_location_list_version(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Geo location list version
        """
        return pulumi.get(self, "geo_location_list_version")

    @geo_location_list_version.setter
    def geo_location_list_version(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "geo_location_list_version", value)

    @property
    @pulumi.getter(name="ipv4Prefix")
    def ipv4_prefix(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        IPv4 prefix
        """
        return pulumi.get(self, "ipv4_prefix")

    @ipv4_prefix.setter
    def ipv4_prefix(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipv4_prefix", value)

    @property
    @pulumi.getter(name="ipv4PrefixVariable")
    def ipv4_prefix_variable(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        IPv4 prefix variable name
        """
        return pulumi.get(self, "ipv4_prefix_variable")

    @ipv4_prefix_variable.setter
    def ipv4_prefix_variable(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipv4_prefix_variable", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The name of the policy definition
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def port(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Port or range of ports
        """
        return pulumi.get(self, "port")

    @port.setter
    def port(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "port", value)

    @property
    @pulumi.getter(name="portListId")
    def port_list_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Port list ID
        """
        return pulumi.get(self, "port_list_id")

    @port_list_id.setter
    def port_list_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "port_list_id", value)

    @property
    @pulumi.getter(name="portListVersion")
    def port_list_version(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        Port list version
        """
        return pulumi.get(self, "port_list_version")

    @port_list_version.setter
    def port_list_version(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "port_list_version", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        The version of the object
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "version", value)


@pulumi.type_token("sdwan:index/objectGroupPolicyDefinition:ObjectGroupPolicyDefinition")
class ObjectGroupPolicyDefinition(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 data_fqdn_prefix_list_id: Optional[pulumi.Input[builtins.str]] = None,
                 data_fqdn_prefix_list_version: Optional[pulumi.Input[builtins.int]] = None,
                 data_ipv4_prefix_list_id: Optional[pulumi.Input[builtins.str]] = None,
                 data_ipv4_prefix_list_version: Optional[pulumi.Input[builtins.int]] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 fqdn: Optional[pulumi.Input[builtins.str]] = None,
                 geo_location: Optional[pulumi.Input[builtins.str]] = None,
                 geo_location_list_id: Optional[pulumi.Input[builtins.str]] = None,
                 geo_location_list_version: Optional[pulumi.Input[builtins.int]] = None,
                 ipv4_prefix: Optional[pulumi.Input[builtins.str]] = None,
                 ipv4_prefix_variable: Optional[pulumi.Input[builtins.str]] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 port: Optional[pulumi.Input[builtins.str]] = None,
                 port_list_id: Optional[pulumi.Input[builtins.str]] = None,
                 port_list_version: Optional[pulumi.Input[builtins.int]] = None,
                 __props__=None):
        """
        This resource can manage a Object Group Policy Definition .

        ## Example Usage

        ```python
        import pulumi
        import pulumi_sdwan as sdwan

        example = sdwan.ObjectGroupPolicyDefinition("example",
            name="Example",
            description="My description",
            ipv4_prefix="10.1.1.0/24",
            fqdn="cisco.com",
            port="80-90",
            geo_location="AF")
        ```

        ## Import

        The `pulumi import` command can be used, for example:

        ```sh
        $ pulumi import sdwan:index/objectGroupPolicyDefinition:ObjectGroupPolicyDefinition example "f6b2c44c-693c-4763-b010-895aa3d236bd"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.str] data_fqdn_prefix_list_id: Data FQDN prefix list ID
        :param pulumi.Input[builtins.int] data_fqdn_prefix_list_version: Data FQDN prefix list version
        :param pulumi.Input[builtins.str] data_ipv4_prefix_list_id: Data IPv4 prefix list ID
        :param pulumi.Input[builtins.int] data_ipv4_prefix_list_version: Data IPv4 prefix list version
        :param pulumi.Input[builtins.str] description: The description of the policy definition
        :param pulumi.Input[builtins.str] fqdn: Fully qualified domain name
        :param pulumi.Input[builtins.str] geo_location: Geo location
        :param pulumi.Input[builtins.str] geo_location_list_id: Geo location list ID
        :param pulumi.Input[builtins.int] geo_location_list_version: Geo location list version
        :param pulumi.Input[builtins.str] ipv4_prefix: IPv4 prefix
        :param pulumi.Input[builtins.str] ipv4_prefix_variable: IPv4 prefix variable name
        :param pulumi.Input[builtins.str] name: The name of the policy definition
        :param pulumi.Input[builtins.str] port: Port or range of ports
        :param pulumi.Input[builtins.str] port_list_id: Port list ID
        :param pulumi.Input[builtins.int] port_list_version: Port list version
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ObjectGroupPolicyDefinitionArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        This resource can manage a Object Group Policy Definition .

        ## Example Usage

        ```python
        import pulumi
        import pulumi_sdwan as sdwan

        example = sdwan.ObjectGroupPolicyDefinition("example",
            name="Example",
            description="My description",
            ipv4_prefix="10.1.1.0/24",
            fqdn="cisco.com",
            port="80-90",
            geo_location="AF")
        ```

        ## Import

        The `pulumi import` command can be used, for example:

        ```sh
        $ pulumi import sdwan:index/objectGroupPolicyDefinition:ObjectGroupPolicyDefinition example "f6b2c44c-693c-4763-b010-895aa3d236bd"
        ```

        :param str resource_name: The name of the resource.
        :param ObjectGroupPolicyDefinitionArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ObjectGroupPolicyDefinitionArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 data_fqdn_prefix_list_id: Optional[pulumi.Input[builtins.str]] = None,
                 data_fqdn_prefix_list_version: Optional[pulumi.Input[builtins.int]] = None,
                 data_ipv4_prefix_list_id: Optional[pulumi.Input[builtins.str]] = None,
                 data_ipv4_prefix_list_version: Optional[pulumi.Input[builtins.int]] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 fqdn: Optional[pulumi.Input[builtins.str]] = None,
                 geo_location: Optional[pulumi.Input[builtins.str]] = None,
                 geo_location_list_id: Optional[pulumi.Input[builtins.str]] = None,
                 geo_location_list_version: Optional[pulumi.Input[builtins.int]] = None,
                 ipv4_prefix: Optional[pulumi.Input[builtins.str]] = None,
                 ipv4_prefix_variable: Optional[pulumi.Input[builtins.str]] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 port: Optional[pulumi.Input[builtins.str]] = None,
                 port_list_id: Optional[pulumi.Input[builtins.str]] = None,
                 port_list_version: Optional[pulumi.Input[builtins.int]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ObjectGroupPolicyDefinitionArgs.__new__(ObjectGroupPolicyDefinitionArgs)

            __props__.__dict__["data_fqdn_prefix_list_id"] = data_fqdn_prefix_list_id
            __props__.__dict__["data_fqdn_prefix_list_version"] = data_fqdn_prefix_list_version
            __props__.__dict__["data_ipv4_prefix_list_id"] = data_ipv4_prefix_list_id
            __props__.__dict__["data_ipv4_prefix_list_version"] = data_ipv4_prefix_list_version
            if description is None and not opts.urn:
                raise TypeError("Missing required property 'description'")
            __props__.__dict__["description"] = description
            __props__.__dict__["fqdn"] = fqdn
            __props__.__dict__["geo_location"] = geo_location
            __props__.__dict__["geo_location_list_id"] = geo_location_list_id
            __props__.__dict__["geo_location_list_version"] = geo_location_list_version
            __props__.__dict__["ipv4_prefix"] = ipv4_prefix
            __props__.__dict__["ipv4_prefix_variable"] = ipv4_prefix_variable
            __props__.__dict__["name"] = name
            __props__.__dict__["port"] = port
            __props__.__dict__["port_list_id"] = port_list_id
            __props__.__dict__["port_list_version"] = port_list_version
            __props__.__dict__["version"] = None
        super(ObjectGroupPolicyDefinition, __self__).__init__(
            'sdwan:index/objectGroupPolicyDefinition:ObjectGroupPolicyDefinition',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            data_fqdn_prefix_list_id: Optional[pulumi.Input[builtins.str]] = None,
            data_fqdn_prefix_list_version: Optional[pulumi.Input[builtins.int]] = None,
            data_ipv4_prefix_list_id: Optional[pulumi.Input[builtins.str]] = None,
            data_ipv4_prefix_list_version: Optional[pulumi.Input[builtins.int]] = None,
            description: Optional[pulumi.Input[builtins.str]] = None,
            fqdn: Optional[pulumi.Input[builtins.str]] = None,
            geo_location: Optional[pulumi.Input[builtins.str]] = None,
            geo_location_list_id: Optional[pulumi.Input[builtins.str]] = None,
            geo_location_list_version: Optional[pulumi.Input[builtins.int]] = None,
            ipv4_prefix: Optional[pulumi.Input[builtins.str]] = None,
            ipv4_prefix_variable: Optional[pulumi.Input[builtins.str]] = None,
            name: Optional[pulumi.Input[builtins.str]] = None,
            port: Optional[pulumi.Input[builtins.str]] = None,
            port_list_id: Optional[pulumi.Input[builtins.str]] = None,
            port_list_version: Optional[pulumi.Input[builtins.int]] = None,
            version: Optional[pulumi.Input[builtins.int]] = None) -> 'ObjectGroupPolicyDefinition':
        """
        Get an existing ObjectGroupPolicyDefinition resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.str] data_fqdn_prefix_list_id: Data FQDN prefix list ID
        :param pulumi.Input[builtins.int] data_fqdn_prefix_list_version: Data FQDN prefix list version
        :param pulumi.Input[builtins.str] data_ipv4_prefix_list_id: Data IPv4 prefix list ID
        :param pulumi.Input[builtins.int] data_ipv4_prefix_list_version: Data IPv4 prefix list version
        :param pulumi.Input[builtins.str] description: The description of the policy definition
        :param pulumi.Input[builtins.str] fqdn: Fully qualified domain name
        :param pulumi.Input[builtins.str] geo_location: Geo location
        :param pulumi.Input[builtins.str] geo_location_list_id: Geo location list ID
        :param pulumi.Input[builtins.int] geo_location_list_version: Geo location list version
        :param pulumi.Input[builtins.str] ipv4_prefix: IPv4 prefix
        :param pulumi.Input[builtins.str] ipv4_prefix_variable: IPv4 prefix variable name
        :param pulumi.Input[builtins.str] name: The name of the policy definition
        :param pulumi.Input[builtins.str] port: Port or range of ports
        :param pulumi.Input[builtins.str] port_list_id: Port list ID
        :param pulumi.Input[builtins.int] port_list_version: Port list version
        :param pulumi.Input[builtins.int] version: The version of the object
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ObjectGroupPolicyDefinitionState.__new__(_ObjectGroupPolicyDefinitionState)

        __props__.__dict__["data_fqdn_prefix_list_id"] = data_fqdn_prefix_list_id
        __props__.__dict__["data_fqdn_prefix_list_version"] = data_fqdn_prefix_list_version
        __props__.__dict__["data_ipv4_prefix_list_id"] = data_ipv4_prefix_list_id
        __props__.__dict__["data_ipv4_prefix_list_version"] = data_ipv4_prefix_list_version
        __props__.__dict__["description"] = description
        __props__.__dict__["fqdn"] = fqdn
        __props__.__dict__["geo_location"] = geo_location
        __props__.__dict__["geo_location_list_id"] = geo_location_list_id
        __props__.__dict__["geo_location_list_version"] = geo_location_list_version
        __props__.__dict__["ipv4_prefix"] = ipv4_prefix
        __props__.__dict__["ipv4_prefix_variable"] = ipv4_prefix_variable
        __props__.__dict__["name"] = name
        __props__.__dict__["port"] = port
        __props__.__dict__["port_list_id"] = port_list_id
        __props__.__dict__["port_list_version"] = port_list_version
        __props__.__dict__["version"] = version
        return ObjectGroupPolicyDefinition(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="dataFqdnPrefixListId")
    def data_fqdn_prefix_list_id(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Data FQDN prefix list ID
        """
        return pulumi.get(self, "data_fqdn_prefix_list_id")

    @property
    @pulumi.getter(name="dataFqdnPrefixListVersion")
    def data_fqdn_prefix_list_version(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        Data FQDN prefix list version
        """
        return pulumi.get(self, "data_fqdn_prefix_list_version")

    @property
    @pulumi.getter(name="dataIpv4PrefixListId")
    def data_ipv4_prefix_list_id(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Data IPv4 prefix list ID
        """
        return pulumi.get(self, "data_ipv4_prefix_list_id")

    @property
    @pulumi.getter(name="dataIpv4PrefixListVersion")
    def data_ipv4_prefix_list_version(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        Data IPv4 prefix list version
        """
        return pulumi.get(self, "data_ipv4_prefix_list_version")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[builtins.str]:
        """
        The description of the policy definition
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def fqdn(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Fully qualified domain name
        """
        return pulumi.get(self, "fqdn")

    @property
    @pulumi.getter(name="geoLocation")
    def geo_location(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Geo location
        """
        return pulumi.get(self, "geo_location")

    @property
    @pulumi.getter(name="geoLocationListId")
    def geo_location_list_id(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Geo location list ID
        """
        return pulumi.get(self, "geo_location_list_id")

    @property
    @pulumi.getter(name="geoLocationListVersion")
    def geo_location_list_version(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        Geo location list version
        """
        return pulumi.get(self, "geo_location_list_version")

    @property
    @pulumi.getter(name="ipv4Prefix")
    def ipv4_prefix(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        IPv4 prefix
        """
        return pulumi.get(self, "ipv4_prefix")

    @property
    @pulumi.getter(name="ipv4PrefixVariable")
    def ipv4_prefix_variable(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        IPv4 prefix variable name
        """
        return pulumi.get(self, "ipv4_prefix_variable")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[builtins.str]:
        """
        The name of the policy definition
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def port(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Port or range of ports
        """
        return pulumi.get(self, "port")

    @property
    @pulumi.getter(name="portListId")
    def port_list_id(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Port list ID
        """
        return pulumi.get(self, "port_list_id")

    @property
    @pulumi.getter(name="portListVersion")
    def port_list_version(self) -> pulumi.Output[Optional[builtins.int]]:
        """
        Port list version
        """
        return pulumi.get(self, "port_list_version")

    @property
    @pulumi.getter
    def version(self) -> pulumi.Output[builtins.int]:
        """
        The version of the object
        """
        return pulumi.get(self, "version")

