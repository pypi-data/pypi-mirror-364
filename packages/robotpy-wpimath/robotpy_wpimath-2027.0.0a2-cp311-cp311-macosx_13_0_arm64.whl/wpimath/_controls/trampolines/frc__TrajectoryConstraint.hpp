// This file is autogenerated. DO NOT EDIT

#pragma once
#include <semiwrap.h>

// wrapped header

#include <frc/trajectory/constraint/TrajectoryConstraint.h>

namespace frc {

template <typename CfgBase = swgen::EmptyTrampolineCfg>
struct PyTrampolineCfg_TrajectoryConstraint : CfgBase
{
  using Base = frc::TrajectoryConstraint;
  using override_base_KMaxVelocity_KRTPose2d_Tcurvature_t_Tmeters_per_second_t = frc::TrajectoryConstraint;
  using override_base_KMinMaxAcceleration_KRTPose2d_Tcurvature_t_Tmeters_per_second_t = frc::TrajectoryConstraint;
};

template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_TrajectoryConstraint : PyTrampolineBase {
  using PyTrampolineBase::PyTrampolineBase;
  using MinMax [[maybe_unused]] = typename frc::TrajectoryConstraint::MinMax;

  #ifndef SWGEN_DISABLE_KMaxVelocity_KRTPose2d_Tcurvature_t_Tmeters_per_second_t
    units::meters_per_second_t MaxVelocity(const Pose2d& pose, units::curvature_t curvature, units::meters_per_second_t velocity) const override {
      using LookupBase = typename PyTrampolineCfg::Base;
      SEMIWRAP_OVERRIDE_PURE_NAME(TrajectoryConstraint, PYBIND11_TYPE(units::meters_per_second_t), LookupBase,
        "maxVelocity", MaxVelocity, pose, curvature, velocity);
    }
  #endif

  #ifndef SWGEN_DISABLE_KMinMaxAcceleration_KRTPose2d_Tcurvature_t_Tmeters_per_second_t
    MinMax MinMaxAcceleration(const Pose2d& pose, units::curvature_t curvature, units::meters_per_second_t speed) const override {
      using LookupBase = typename PyTrampolineCfg::Base;
      SEMIWRAP_OVERRIDE_PURE_NAME(TrajectoryConstraint, PYBIND11_TYPE(MinMax), LookupBase,
        "minMaxAcceleration", MinMaxAcceleration, pose, curvature, speed);
    }
  #endif
};

}; // namespace frc
