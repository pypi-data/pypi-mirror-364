"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import ansys.api.edb.v1.edb_messages_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import google.protobuf.wrappers_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class RlcMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    R_FIELD_NUMBER: builtins.int
    L_FIELD_NUMBER: builtins.int
    C_FIELD_NUMBER: builtins.int
    R_ENABLED_FIELD_NUMBER: builtins.int
    L_ENABLED_FIELD_NUMBER: builtins.int
    C_ENABLED_FIELD_NUMBER: builtins.int
    IS_PARALLEL_FIELD_NUMBER: builtins.int
    @property
    def r(self) -> ansys.api.edb.v1.edb_messages_pb2.ValueMessage: ...
    @property
    def l(self) -> ansys.api.edb.v1.edb_messages_pb2.ValueMessage: ...
    @property
    def c(self) -> ansys.api.edb.v1.edb_messages_pb2.ValueMessage: ...
    @property
    def r_enabled(self) -> google.protobuf.wrappers_pb2.BoolValue: ...
    @property
    def l_enabled(self) -> google.protobuf.wrappers_pb2.BoolValue: ...
    @property
    def c_enabled(self) -> google.protobuf.wrappers_pb2.BoolValue: ...
    @property
    def is_parallel(self) -> google.protobuf.wrappers_pb2.BoolValue: ...
    def __init__(self,
        *,
        r : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.ValueMessage] = ...,
        l : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.ValueMessage] = ...,
        c : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.ValueMessage] = ...,
        r_enabled : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        l_enabled : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        c_enabled : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        is_parallel : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["c",b"c","c_enabled",b"c_enabled","is_parallel",b"is_parallel","l",b"l","l_enabled",b"l_enabled","r",b"r","r_enabled",b"r_enabled"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["c",b"c","c_enabled",b"c_enabled","is_parallel",b"is_parallel","l",b"l","l_enabled",b"l_enabled","r",b"r","r_enabled",b"r_enabled"]) -> None: ...
global___RlcMessage = RlcMessage
