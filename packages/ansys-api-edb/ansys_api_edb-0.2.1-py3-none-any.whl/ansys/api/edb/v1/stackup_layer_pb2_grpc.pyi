"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.edb.v1.edb_messages_pb2
import ansys.api.edb.v1.stackup_layer_pb2
import google.protobuf.empty_pb2
import google.protobuf.wrappers_pb2
import grpc

class StackupLayerServiceStub:
    """Stackup layer service definition"""
    def __init__(self, channel: grpc.Channel) -> None: ...
    Create: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.stackup_layer_pb2.StackupLayerCreationMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...
    """summary: Creates a stackup layer
    io_flags:
      - buffer
      - returns_future
      - write_no_cache_invalidation
    """

    GetNegative: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.BoolValue] = ...
    """summary: Get the negative property of the stackup layer
    io_flags:
      - cache
    """

    SetNegative: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.stackup_layer_pb2.SetNegativeMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Set the negative property of the stackup layer
    io_flags:
      - buffer
    """

    GetThickness: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.edb_messages_pb2.ValueMessage] = ...
    """summary: Get the thickness of the layer
    io_flags:
      - cache
    """

    SetThickness: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.stackup_layer_pb2.StackupLayerValueMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Set the thickness of the layer
    io_flags:
      - buffer
    """

    GetLowerElevation: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.edb_messages_pb2.ValueMessage] = ...
    """summary: Get the lower elevation of the layer
    io_flags:
      - cache
    """

    SetLowerElevation: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.stackup_layer_pb2.StackupLayerValueMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Set the lower elevation of the layer
    io_flags:
      - buffer
    """

    GetUpperElevation: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.edb_messages_pb2.ValueMessage] = ...
    """summary: Get the upper elevation of the layer
    io_flags:
      - cache
    """

    GetMaterial: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.stackup_layer_pb2.GetLayerMaterialMessage,
        google.protobuf.wrappers_pb2.StringValue] = ...
    """summary: Get the material of the layer
    io_flags:
      - cache
    """

    SetMaterial: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.stackup_layer_pb2.SetLayerMaterialMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Set the material of the layer
    io_flags:
      - buffer
    """

    GetFillMaterial: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.stackup_layer_pb2.GetLayerMaterialMessage,
        google.protobuf.wrappers_pb2.StringValue] = ...
    """summary: Get the fill material of the layer
    io_flags:
      - cache
    """

    SetFillMaterial: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.stackup_layer_pb2.SetLayerMaterialMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Set the fill material of the layer
    io_flags:
      - buffer
    """

    SetRoughnessEnabled: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.stackup_layer_pb2.SetLayerPropEnabledMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Enable/Disable surface roughness for the layer
    io_flags:
      - buffer
    """

    IsRoughnessEnabled: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.BoolValue] = ...
    """summary: Check if surface roughness is enabled for the layer
    io_flags:
      - cache
    """

    GetRoughnessModel: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.stackup_layer_pb2.LayerRoughnessRegionMessage,
        ansys.api.edb.v1.stackup_layer_pb2.RoughnessModelMessage] = ...
    """summary: Get the roughness model of the layer
    io_flags:
      - cache
    """

    SetRoughnessModel: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.stackup_layer_pb2.SetRoughnessModelMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Set the roughness model of the layer
    io_flags:
      - buffer
    """

    IsEtchFactorEnabled: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.BoolValue] = ...
    """summary: Check if etch factor is enabled for the layer
    io_flags:
      - cache
    """

    SetEtchFactorEnabled: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.stackup_layer_pb2.SetLayerPropEnabledMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Enable/Disable etch factor for the layer
    io_flags:
      - buffer
    """

    SetEtchFactor: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.stackup_layer_pb2.StackupLayerValueMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Set the etch factor of the layer
    io_flags:
      - buffer
    """

    GetEtchFactor: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.edb_messages_pb2.ValueMessage] = ...
    """summary: Get the etch factor of the layer
    io_flags:
      - cache
    """

    SetEtchNetClass: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.stackup_layer_pb2.StackupLayerEtchNetClassMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Set the etch net class of the layer
    io_flags:
      - buffer
    """

    GetEtchNetClass: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.stackup_layer_pb2.EtchNetClassMessage] = ...
    """summary: Get the etch net class of the layer
    io_flags:
      - cache
    """

    GetUseSolverProperties: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.BoolValue] = ...
    """summary: Check if solver properties are enabled for the layer
    io_flags:
      - cache
    """

    SetUseSolverProperties: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.stackup_layer_pb2.SetLayerPropEnabledMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Enable/Disable solver properties for the layer
    io_flags:
      - buffer
    """

    GetHFSSSolverProperties: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.stackup_layer_pb2.HFSSSolverPropertiesMessage] = ...
    """summary: Get the HFSS solver-specific properties of the layer
    io_flags:
      - cache
    """

    SetHFSSSolverProperties: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.stackup_layer_pb2.SetHFSSSolverPropertiesMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Set the HFSS solver-specific properties of the layer
    io_flags:
      - buffer
    """

    GetReferencingViaLayerIds: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.stackup_layer_pb2.ViaLayerIdsMessage] = ...
    """summary: Retrieves the layer ids of all via layers referencing the layer.
    io_flags:
      - cache
    """


class StackupLayerServiceServicer(metaclass=abc.ABCMeta):
    """Stackup layer service definition"""
    @abc.abstractmethod
    def Create(self,
        request: ansys.api.edb.v1.stackup_layer_pb2.StackupLayerCreationMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage:
        """summary: Creates a stackup layer
        io_flags:
          - buffer
          - returns_future
          - write_no_cache_invalidation
        """
        pass

    @abc.abstractmethod
    def GetNegative(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.BoolValue:
        """summary: Get the negative property of the stackup layer
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def SetNegative(self,
        request: ansys.api.edb.v1.stackup_layer_pb2.SetNegativeMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Set the negative property of the stackup layer
        io_flags:
          - buffer
        """
        pass

    @abc.abstractmethod
    def GetThickness(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.ValueMessage:
        """summary: Get the thickness of the layer
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def SetThickness(self,
        request: ansys.api.edb.v1.stackup_layer_pb2.StackupLayerValueMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Set the thickness of the layer
        io_flags:
          - buffer
        """
        pass

    @abc.abstractmethod
    def GetLowerElevation(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.ValueMessage:
        """summary: Get the lower elevation of the layer
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def SetLowerElevation(self,
        request: ansys.api.edb.v1.stackup_layer_pb2.StackupLayerValueMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Set the lower elevation of the layer
        io_flags:
          - buffer
        """
        pass

    @abc.abstractmethod
    def GetUpperElevation(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.ValueMessage:
        """summary: Get the upper elevation of the layer
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def GetMaterial(self,
        request: ansys.api.edb.v1.stackup_layer_pb2.GetLayerMaterialMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.StringValue:
        """summary: Get the material of the layer
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def SetMaterial(self,
        request: ansys.api.edb.v1.stackup_layer_pb2.SetLayerMaterialMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Set the material of the layer
        io_flags:
          - buffer
        """
        pass

    @abc.abstractmethod
    def GetFillMaterial(self,
        request: ansys.api.edb.v1.stackup_layer_pb2.GetLayerMaterialMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.StringValue:
        """summary: Get the fill material of the layer
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def SetFillMaterial(self,
        request: ansys.api.edb.v1.stackup_layer_pb2.SetLayerMaterialMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Set the fill material of the layer
        io_flags:
          - buffer
        """
        pass

    @abc.abstractmethod
    def SetRoughnessEnabled(self,
        request: ansys.api.edb.v1.stackup_layer_pb2.SetLayerPropEnabledMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Enable/Disable surface roughness for the layer
        io_flags:
          - buffer
        """
        pass

    @abc.abstractmethod
    def IsRoughnessEnabled(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.BoolValue:
        """summary: Check if surface roughness is enabled for the layer
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def GetRoughnessModel(self,
        request: ansys.api.edb.v1.stackup_layer_pb2.LayerRoughnessRegionMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.stackup_layer_pb2.RoughnessModelMessage:
        """summary: Get the roughness model of the layer
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def SetRoughnessModel(self,
        request: ansys.api.edb.v1.stackup_layer_pb2.SetRoughnessModelMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Set the roughness model of the layer
        io_flags:
          - buffer
        """
        pass

    @abc.abstractmethod
    def IsEtchFactorEnabled(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.BoolValue:
        """summary: Check if etch factor is enabled for the layer
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def SetEtchFactorEnabled(self,
        request: ansys.api.edb.v1.stackup_layer_pb2.SetLayerPropEnabledMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Enable/Disable etch factor for the layer
        io_flags:
          - buffer
        """
        pass

    @abc.abstractmethod
    def SetEtchFactor(self,
        request: ansys.api.edb.v1.stackup_layer_pb2.StackupLayerValueMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Set the etch factor of the layer
        io_flags:
          - buffer
        """
        pass

    @abc.abstractmethod
    def GetEtchFactor(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.ValueMessage:
        """summary: Get the etch factor of the layer
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def SetEtchNetClass(self,
        request: ansys.api.edb.v1.stackup_layer_pb2.StackupLayerEtchNetClassMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Set the etch net class of the layer
        io_flags:
          - buffer
        """
        pass

    @abc.abstractmethod
    def GetEtchNetClass(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.stackup_layer_pb2.EtchNetClassMessage:
        """summary: Get the etch net class of the layer
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def GetUseSolverProperties(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.BoolValue:
        """summary: Check if solver properties are enabled for the layer
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def SetUseSolverProperties(self,
        request: ansys.api.edb.v1.stackup_layer_pb2.SetLayerPropEnabledMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Enable/Disable solver properties for the layer
        io_flags:
          - buffer
        """
        pass

    @abc.abstractmethod
    def GetHFSSSolverProperties(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.stackup_layer_pb2.HFSSSolverPropertiesMessage:
        """summary: Get the HFSS solver-specific properties of the layer
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def SetHFSSSolverProperties(self,
        request: ansys.api.edb.v1.stackup_layer_pb2.SetHFSSSolverPropertiesMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Set the HFSS solver-specific properties of the layer
        io_flags:
          - buffer
        """
        pass

    @abc.abstractmethod
    def GetReferencingViaLayerIds(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.stackup_layer_pb2.ViaLayerIdsMessage:
        """summary: Retrieves the layer ids of all via layers referencing the layer.
        io_flags:
          - cache
        """
        pass


def add_StackupLayerServiceServicer_to_server(servicer: StackupLayerServiceServicer, server: grpc.Server) -> None: ...
