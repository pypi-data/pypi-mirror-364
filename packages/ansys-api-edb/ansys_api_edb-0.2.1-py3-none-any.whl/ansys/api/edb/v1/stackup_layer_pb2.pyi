"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import ansys.api.edb.v1.edb_messages_pb2
import ansys.api.edb.v1.layer_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _EtchNetClass:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _EtchNetClassEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EtchNetClass.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    NO_ETCH_POWER_GROUND: EtchNetClass.ValueType = ...  # 0
    ETCH_ALL_NETS: EtchNetClass.ValueType = ...  # 1
class EtchNetClass(_EtchNetClass, metaclass=_EtchNetClassEnumTypeWrapper):
    pass

NO_ETCH_POWER_GROUND: EtchNetClass.ValueType = ...  # 0
ETCH_ALL_NETS: EtchNetClass.ValueType = ...  # 1
global___EtchNetClass = EtchNetClass


class StackupLayerCreationMessage(google.protobuf.message.Message):
    """Message for StackupLayerService::Create"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    THICKNESS_FIELD_NUMBER: builtins.int
    ELEVATION_FIELD_NUMBER: builtins.int
    MATERIAL_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    type: ansys.api.edb.v1.layer_pb2.LayerType.ValueType = ...
    @property
    def thickness(self) -> ansys.api.edb.v1.edb_messages_pb2.ValueMessage: ...
    @property
    def elevation(self) -> ansys.api.edb.v1.edb_messages_pb2.ValueMessage: ...
    material: typing.Text = ...
    def __init__(self,
        *,
        name : typing.Text = ...,
        type : ansys.api.edb.v1.layer_pb2.LayerType.ValueType = ...,
        thickness : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.ValueMessage] = ...,
        elevation : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.ValueMessage] = ...,
        material : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["elevation",b"elevation","thickness",b"thickness"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["elevation",b"elevation","material",b"material","name",b"name","thickness",b"thickness","type",b"type"]) -> None: ...
global___StackupLayerCreationMessage = StackupLayerCreationMessage

class SetNegativeMessage(google.protobuf.message.Message):
    """Message for StackupLayerService::SetNegative"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LAYER_FIELD_NUMBER: builtins.int
    IS_NEGATIVE_FIELD_NUMBER: builtins.int
    @property
    def layer(self) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage: ...
    is_negative: builtins.bool = ...
    def __init__(self,
        *,
        layer : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...,
        is_negative : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["layer",b"layer"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["is_negative",b"is_negative","layer",b"layer"]) -> None: ...
global___SetNegativeMessage = SetNegativeMessage

class StackupLayerValueMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LAYER_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    @property
    def layer(self) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage: ...
    @property
    def value(self) -> ansys.api.edb.v1.edb_messages_pb2.ValueMessage: ...
    def __init__(self,
        *,
        layer : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...,
        value : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.ValueMessage] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["layer",b"layer","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["layer",b"layer","value",b"value"]) -> None: ...
global___StackupLayerValueMessage = StackupLayerValueMessage

class GetLayerMaterialMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LAYER_FIELD_NUMBER: builtins.int
    EVALUATED_FIELD_NUMBER: builtins.int
    @property
    def layer(self) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage: ...
    evaluated: builtins.bool = ...
    def __init__(self,
        *,
        layer : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...,
        evaluated : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["layer",b"layer"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["evaluated",b"evaluated","layer",b"layer"]) -> None: ...
global___GetLayerMaterialMessage = GetLayerMaterialMessage

class SetLayerMaterialMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LAYER_FIELD_NUMBER: builtins.int
    MATERIAL_FIELD_NUMBER: builtins.int
    @property
    def layer(self) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage: ...
    material: typing.Text = ...
    def __init__(self,
        *,
        layer : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...,
        material : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["layer",b"layer"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["layer",b"layer","material",b"material"]) -> None: ...
global___SetLayerMaterialMessage = SetLayerMaterialMessage

class SetLayerPropEnabledMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LAYER_FIELD_NUMBER: builtins.int
    ENABLED_FIELD_NUMBER: builtins.int
    @property
    def layer(self) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage: ...
    enabled: builtins.bool = ...
    def __init__(self,
        *,
        layer : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...,
        enabled : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["layer",b"layer"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled","layer",b"layer"]) -> None: ...
global___SetLayerPropEnabledMessage = SetLayerPropEnabledMessage

class GroisseRoughnessModelMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ROUGHNESS_FIELD_NUMBER: builtins.int
    @property
    def roughness(self) -> ansys.api.edb.v1.edb_messages_pb2.ValueMessage: ...
    def __init__(self,
        *,
        roughness : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.ValueMessage] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["roughness",b"roughness"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["roughness",b"roughness"]) -> None: ...
global___GroisseRoughnessModelMessage = GroisseRoughnessModelMessage

class HurrayRoughnessModelMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NODULE_RADIUS_FIELD_NUMBER: builtins.int
    SURFACE_RATIO_FIELD_NUMBER: builtins.int
    @property
    def nodule_radius(self) -> ansys.api.edb.v1.edb_messages_pb2.ValueMessage: ...
    @property
    def surface_ratio(self) -> ansys.api.edb.v1.edb_messages_pb2.ValueMessage: ...
    def __init__(self,
        *,
        nodule_radius : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.ValueMessage] = ...,
        surface_ratio : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.ValueMessage] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["nodule_radius",b"nodule_radius","surface_ratio",b"surface_ratio"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["nodule_radius",b"nodule_radius","surface_ratio",b"surface_ratio"]) -> None: ...
global___HurrayRoughnessModelMessage = HurrayRoughnessModelMessage

class RoughnessModelMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ROUGHNESS_FIELD_NUMBER: builtins.int
    SURFACE_RATIO_FIELD_NUMBER: builtins.int
    @property
    def roughness(self) -> ansys.api.edb.v1.edb_messages_pb2.ValueMessage: ...
    @property
    def surface_ratio(self) -> ansys.api.edb.v1.edb_messages_pb2.ValueMessage: ...
    def __init__(self,
        *,
        roughness : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.ValueMessage] = ...,
        surface_ratio : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.ValueMessage] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["huray_surface_ratio",b"huray_surface_ratio","roughness",b"roughness","surface_ratio",b"surface_ratio"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["huray_surface_ratio",b"huray_surface_ratio","roughness",b"roughness","surface_ratio",b"surface_ratio"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["huray_surface_ratio",b"huray_surface_ratio"]) -> typing.Optional[typing_extensions.Literal["surface_ratio"]]: ...
global___RoughnessModelMessage = RoughnessModelMessage

class LayerRoughnessRegionMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _RoughnessRegion:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _RoughnessRegionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_RoughnessRegion.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        TOP: LayerRoughnessRegionMessage.RoughnessRegion.ValueType = ...  # 0
        BOTTOM: LayerRoughnessRegionMessage.RoughnessRegion.ValueType = ...  # 1
        SIDE: LayerRoughnessRegionMessage.RoughnessRegion.ValueType = ...  # 2
    class RoughnessRegion(_RoughnessRegion, metaclass=_RoughnessRegionEnumTypeWrapper):
        pass

    TOP: LayerRoughnessRegionMessage.RoughnessRegion.ValueType = ...  # 0
    BOTTOM: LayerRoughnessRegionMessage.RoughnessRegion.ValueType = ...  # 1
    SIDE: LayerRoughnessRegionMessage.RoughnessRegion.ValueType = ...  # 2

    LAYER_FIELD_NUMBER: builtins.int
    ROUGHNESS_REGION_FIELD_NUMBER: builtins.int
    @property
    def layer(self) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage: ...
    roughness_region: global___LayerRoughnessRegionMessage.RoughnessRegion.ValueType = ...
    def __init__(self,
        *,
        layer : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...,
        roughness_region : global___LayerRoughnessRegionMessage.RoughnessRegion.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["layer",b"layer"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["layer",b"layer","roughness_region",b"roughness_region"]) -> None: ...
global___LayerRoughnessRegionMessage = LayerRoughnessRegionMessage

class SetRoughnessModelMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LAYER_ROUGH_REGION_FIELD_NUMBER: builtins.int
    ROUGHNESS_MODEL_FIELD_NUMBER: builtins.int
    @property
    def layer_rough_region(self) -> global___LayerRoughnessRegionMessage: ...
    @property
    def roughness_model(self) -> global___RoughnessModelMessage: ...
    def __init__(self,
        *,
        layer_rough_region : typing.Optional[global___LayerRoughnessRegionMessage] = ...,
        roughness_model : typing.Optional[global___RoughnessModelMessage] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["layer_rough_region",b"layer_rough_region","roughness_model",b"roughness_model"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["layer_rough_region",b"layer_rough_region","roughness_model",b"roughness_model"]) -> None: ...
global___SetRoughnessModelMessage = SetRoughnessModelMessage

class HFSSSolverPropertiesMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _DCThicknessType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _DCThicknessTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DCThicknessType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        EFFECTIVE: HFSSSolverPropertiesMessage.DCThicknessType.ValueType = ...  # 0
        LAYER: HFSSSolverPropertiesMessage.DCThicknessType.ValueType = ...  # 1
        MANUAL: HFSSSolverPropertiesMessage.DCThicknessType.ValueType = ...  # 2
    class DCThicknessType(_DCThicknessType, metaclass=_DCThicknessTypeEnumTypeWrapper):
        pass

    EFFECTIVE: HFSSSolverPropertiesMessage.DCThicknessType.ValueType = ...  # 0
    LAYER: HFSSSolverPropertiesMessage.DCThicknessType.ValueType = ...  # 1
    MANUAL: HFSSSolverPropertiesMessage.DCThicknessType.ValueType = ...  # 2

    SOLVE_INSIDE_FIELD_NUMBER: builtins.int
    DC_THICKNESS_TYPE_FIELD_NUMBER: builtins.int
    DC_THICKNESS_FIELD_NUMBER: builtins.int
    solve_inside: builtins.bool = ...
    dc_thickness_type: global___HFSSSolverPropertiesMessage.DCThicknessType.ValueType = ...
    @property
    def dc_thickness(self) -> ansys.api.edb.v1.edb_messages_pb2.ValueMessage: ...
    def __init__(self,
        *,
        solve_inside : builtins.bool = ...,
        dc_thickness_type : global___HFSSSolverPropertiesMessage.DCThicknessType.ValueType = ...,
        dc_thickness : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.ValueMessage] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dc_thickness",b"dc_thickness"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dc_thickness",b"dc_thickness","dc_thickness_type",b"dc_thickness_type","solve_inside",b"solve_inside"]) -> None: ...
global___HFSSSolverPropertiesMessage = HFSSSolverPropertiesMessage

class SetHFSSSolverPropertiesMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LAYER_FIELD_NUMBER: builtins.int
    HFSS_SOLVER_PROPS_FIELD_NUMBER: builtins.int
    @property
    def layer(self) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage: ...
    @property
    def hfss_solver_props(self) -> global___HFSSSolverPropertiesMessage: ...
    def __init__(self,
        *,
        layer : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...,
        hfss_solver_props : typing.Optional[global___HFSSSolverPropertiesMessage] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["hfss_solver_props",b"hfss_solver_props","layer",b"layer"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["hfss_solver_props",b"hfss_solver_props","layer",b"layer"]) -> None: ...
global___SetHFSSSolverPropertiesMessage = SetHFSSSolverPropertiesMessage

class ViaLayerIdsMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REF_LAYER_IDS_FIELD_NUMBER: builtins.int
    @property
    def ref_layer_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    def __init__(self,
        *,
        ref_layer_ids : typing.Optional[typing.Iterable[builtins.int]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ref_layer_ids",b"ref_layer_ids"]) -> None: ...
global___ViaLayerIdsMessage = ViaLayerIdsMessage

class EtchNetClassMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ETCH_NET_CLASS_FIELD_NUMBER: builtins.int
    etch_net_class: global___EtchNetClass.ValueType = ...
    def __init__(self,
        *,
        etch_net_class : global___EtchNetClass.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["etch_net_class",b"etch_net_class"]) -> None: ...
global___EtchNetClassMessage = EtchNetClassMessage

class StackupLayerEtchNetClassMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LAYER_FIELD_NUMBER: builtins.int
    ETCH_NET_CLASS_FIELD_NUMBER: builtins.int
    @property
    def layer(self) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage: ...
    etch_net_class: global___EtchNetClass.ValueType = ...
    def __init__(self,
        *,
        layer : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...,
        etch_net_class : global___EtchNetClass.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["layer",b"layer"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["etch_net_class",b"etch_net_class","layer",b"layer"]) -> None: ...
global___StackupLayerEtchNetClassMessage = StackupLayerEtchNetClassMessage
