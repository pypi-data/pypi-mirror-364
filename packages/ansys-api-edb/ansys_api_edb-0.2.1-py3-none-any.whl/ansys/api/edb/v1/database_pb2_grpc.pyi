"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.edb.v1.database_pb2
import ansys.api.edb.v1.edb_messages_pb2
import google.protobuf.empty_pb2
import google.protobuf.wrappers_pb2
import grpc
import typing

class DatabaseServiceStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    Create: grpc.UnaryUnaryMultiCallable[
        google.protobuf.wrappers_pb2.StringValue,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...
    """summary: Creates a database"""

    Open: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.database_pb2.OpenDatabaseMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...
    """summary: Opens a database"""

    Delete: grpc.UnaryUnaryMultiCallable[
        google.protobuf.wrappers_pb2.StringValue,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Deletes a database"""

    Save: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Saves a database"""

    Close: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Closes a database"""

    IsReadOnly: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.BoolValue] = ...
    """summary: Determines whether the database is read only
    io_flags:
      - cache
    """

    GetTopCircuits: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage] = ...
    """summary: Gets the top circuits in a database
    io_flags:
      - cache
    """

    StreamTopCircuits: grpc.UnaryStreamMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage] = ...
    """summary: Streams the top circuits in a database"""

    GetId: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.Int64Value] = ...
    """summary: Gets the id of a database
    io_flags:
      - cache
    """

    FindById: grpc.UnaryUnaryMultiCallable[
        google.protobuf.wrappers_pb2.Int64Value,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...
    """summary: Finds a database with the provided id
    io_flags:
      - cache
    """

    SaveAs: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.database_pb2.SaveAsDatabaseMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Save the database to new location and optionally to older edb version"""

    GetVersionByRelease: grpc.UnaryUnaryMultiCallable[
        google.protobuf.wrappers_pb2.StringValue,
        google.protobuf.wrappers_pb2.StringValue] = ...
    """summary: Get EDB version by release name
    io_flags:
      - cache
    """

    GetDirectory: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.StringValue] = ...
    """summary: Get the directory of the Database
    io_flags:
      - cache
    """

    GetProductProperty: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.GetProductPropertyMessage,
        google.protobuf.wrappers_pb2.StringValue] = ...
    """summary: Get the product property of the Database
    io_flags:
      - cache
    """

    SetProductProperty: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.SetProductPropertyMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Set the product property of the Database
    io_flags:
      - buffer
    """

    GetProductPropertyIds: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.GetProductPropertyIdsMessage,
        ansys.api.edb.v1.edb_messages_pb2.ProductPropertyIdsMessage] = ...
    """summary: Get the product property ids of the Database
    io_flags:
      - cache
    """

    ImportMaterialFromControlFile: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.database_pb2.ImportMaterialFromControlFileMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Get the product property ids of the Database"""

    GetVersion: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.database_pb2.GetVersionMessage] = ...
    """summary: Get the version of the Database
    io_flags:
      - cache
    """

    Scale: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.DoublePropertyMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Scale the geometry of the Database
    io_flags:
      - buffer
    """

    GetSource: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.StringValue] = ...
    """summary: Get the source of the Database
    io_flags:
      - cache
    """

    SetSource: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjNameMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Set the source of the Database
    io_flags:
      - buffer
    """

    GetSourceVersion: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.StringValue] = ...
    """summary: Get the source version of the Database
    io_flags:
      - cache
    """

    SetSourceVersion: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjNameMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Set the source version of the Database
    io_flags:
      - buffer
    """

    CopyCells: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.database_pb2.CopyCellsMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage] = ...
    """summary: copy cells"""

    GetDefinitionObjs: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.database_pb2.GetDefinitionObjsMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage] = ...
    """summary: Get defs
    io_flags:
      - cache
    """

    StreamDefinitionObjs: grpc.UnaryStreamMultiCallable[
        ansys.api.edb.v1.database_pb2.GetDefinitionObjsMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage] = ...
    """summary: Stream defs"""

    TopCircuitCells: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage] = ...
    """summary: Get top cells
    io_flags:
      - cache
    """

    GetCircuits: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage] = ...
    """summary: Get cells
    io_flags:
      - cache
    """

    StreamCircuits: grpc.UnaryStreamMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage] = ...
    """summary: Stream cells"""

    GetFootprints: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage] = ...
    """summary: Get footprint cells
    io_flags:
      - cache
    """

    StreamFootprints: grpc.UnaryStreamMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage] = ...
    """summary: Stream footprint cells"""


class DatabaseServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Create(self,
        request: google.protobuf.wrappers_pb2.StringValue,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage:
        """summary: Creates a database"""
        pass

    @abc.abstractmethod
    def Open(self,
        request: ansys.api.edb.v1.database_pb2.OpenDatabaseMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage:
        """summary: Opens a database"""
        pass

    @abc.abstractmethod
    def Delete(self,
        request: google.protobuf.wrappers_pb2.StringValue,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Deletes a database"""
        pass

    @abc.abstractmethod
    def Save(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Saves a database"""
        pass

    @abc.abstractmethod
    def Close(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Closes a database"""
        pass

    @abc.abstractmethod
    def IsReadOnly(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.BoolValue:
        """summary: Determines whether the database is read only
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def GetTopCircuits(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage:
        """summary: Gets the top circuits in a database
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def StreamTopCircuits(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> typing.Iterator[ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage]:
        """summary: Streams the top circuits in a database"""
        pass

    @abc.abstractmethod
    def GetId(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.Int64Value:
        """summary: Gets the id of a database
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def FindById(self,
        request: google.protobuf.wrappers_pb2.Int64Value,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage:
        """summary: Finds a database with the provided id
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def SaveAs(self,
        request: ansys.api.edb.v1.database_pb2.SaveAsDatabaseMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Save the database to new location and optionally to older edb version"""
        pass

    @abc.abstractmethod
    def GetVersionByRelease(self,
        request: google.protobuf.wrappers_pb2.StringValue,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.StringValue:
        """summary: Get EDB version by release name
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def GetDirectory(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.StringValue:
        """summary: Get the directory of the Database
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def GetProductProperty(self,
        request: ansys.api.edb.v1.edb_messages_pb2.GetProductPropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.StringValue:
        """summary: Get the product property of the Database
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def SetProductProperty(self,
        request: ansys.api.edb.v1.edb_messages_pb2.SetProductPropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Set the product property of the Database
        io_flags:
          - buffer
        """
        pass

    @abc.abstractmethod
    def GetProductPropertyIds(self,
        request: ansys.api.edb.v1.edb_messages_pb2.GetProductPropertyIdsMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.ProductPropertyIdsMessage:
        """summary: Get the product property ids of the Database
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def ImportMaterialFromControlFile(self,
        request: ansys.api.edb.v1.database_pb2.ImportMaterialFromControlFileMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Get the product property ids of the Database"""
        pass

    @abc.abstractmethod
    def GetVersion(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.database_pb2.GetVersionMessage:
        """summary: Get the version of the Database
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def Scale(self,
        request: ansys.api.edb.v1.edb_messages_pb2.DoublePropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Scale the geometry of the Database
        io_flags:
          - buffer
        """
        pass

    @abc.abstractmethod
    def GetSource(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.StringValue:
        """summary: Get the source of the Database
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def SetSource(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjNameMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Set the source of the Database
        io_flags:
          - buffer
        """
        pass

    @abc.abstractmethod
    def GetSourceVersion(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.StringValue:
        """summary: Get the source version of the Database
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def SetSourceVersion(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjNameMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Set the source version of the Database
        io_flags:
          - buffer
        """
        pass

    @abc.abstractmethod
    def CopyCells(self,
        request: ansys.api.edb.v1.database_pb2.CopyCellsMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage:
        """summary: copy cells"""
        pass

    @abc.abstractmethod
    def GetDefinitionObjs(self,
        request: ansys.api.edb.v1.database_pb2.GetDefinitionObjsMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage:
        """summary: Get defs
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def StreamDefinitionObjs(self,
        request: ansys.api.edb.v1.database_pb2.GetDefinitionObjsMessage,
        context: grpc.ServicerContext,
    ) -> typing.Iterator[ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage]:
        """summary: Stream defs"""
        pass

    @abc.abstractmethod
    def TopCircuitCells(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage:
        """summary: Get top cells
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def GetCircuits(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage:
        """summary: Get cells
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def StreamCircuits(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> typing.Iterator[ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage]:
        """summary: Stream cells"""
        pass

    @abc.abstractmethod
    def GetFootprints(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage:
        """summary: Get footprint cells
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def StreamFootprints(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> typing.Iterator[ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage]:
        """summary: Stream footprint cells"""
        pass


def add_DatabaseServiceServicer_to_server(servicer: DatabaseServiceServicer, server: grpc.Server) -> None: ...
