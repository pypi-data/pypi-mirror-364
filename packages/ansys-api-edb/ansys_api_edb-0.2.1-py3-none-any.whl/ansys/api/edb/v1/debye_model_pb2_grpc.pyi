"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.edb.v1.debye_model_pb2
import ansys.api.edb.v1.edb_messages_pb2
import google.protobuf.empty_pb2
import google.protobuf.wrappers_pb2
import grpc

class DebyeModelServiceStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    Create: grpc.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...
    """summary: Create a DebyeModelService
    io_flags:
      - buffer
      - returns_future
      - write_no_cache_invalidation
    """

    GetFrequencyRange: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.debye_model_pb2.FrequencyRangeMessage] = ...
    """summary: Get frequency range
    io_flags:
      - cache
    """

    SetFrequencyRange: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.debye_model_pb2.SetFrequencyRangeMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Get frequency range
    io_flags:
      - buffer
    """

    GetRelativePermitivityAtHighLowFrequency: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.debye_model_pb2.FrequencyRangeMessage] = ...
    """summary: Get the relative permitivity at high low frequency
    io_flags:
      - cache
    """

    SetRelativePermitivityAtHighLowFrequency: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.debye_model_pb2.SetFrequencyRangeMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Set the relative permitivity at high low frequency
    io_flags:
      - buffer
    """

    IsRelativePermitivityEnabledAtOpticalFrequency: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.BoolValue] = ...
    """summary: Is relative permitivity enabled at optical frequency
    io_flags:
      - cache
    """

    SetRelativePermitivityEnabledAtOpticalFrequency: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.BoolPropertyMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Set is relative permitivity enabled at optical frequency
    io_flags:
      - buffer
    """

    GetRelativePermitivityAtOpticalFrequency: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.DoubleValue] = ...
    """summary: Get relative permitivity at optical frequency
    io_flags:
      - cache
    """

    SetRelativePermitivityAtOpticalFrequency: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.DoublePropertyMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Set relative permitivity at optical frequency
    io_flags:
      - buffer
    """

    UseDCConductivity: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.BoolValue] = ...
    """summary: Get use dc conductivity
    io_flags:
      - cache
    """

    SetUseDCConductivity: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.BoolPropertyMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Set use dc conductivity
    io_flags:
      - buffer
    """

    GetDCConductivity: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.DoubleValue] = ...
    """summary: Get dc conductivity
    io_flags:
      - cache
    """

    SetDCConductivity: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.DoublePropertyMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Get dc conductivity
    io_flags:
      - buffer
    """

    GetLossTangentAtHighLowFrequency: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.debye_model_pb2.FrequencyRangeMessage] = ...
    """summary: Get dc conductivity
    io_flags:
      - cache
    """

    SetLossTangentAtHighLowFrequency: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.debye_model_pb2.SetFrequencyRangeMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Get dc conductivity
    io_flags:
      - buffer
    """


class DebyeModelServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Create(self,
        request: google.protobuf.empty_pb2.Empty,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage:
        """summary: Create a DebyeModelService
        io_flags:
          - buffer
          - returns_future
          - write_no_cache_invalidation
        """
        pass

    @abc.abstractmethod
    def GetFrequencyRange(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.debye_model_pb2.FrequencyRangeMessage:
        """summary: Get frequency range
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def SetFrequencyRange(self,
        request: ansys.api.edb.v1.debye_model_pb2.SetFrequencyRangeMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Get frequency range
        io_flags:
          - buffer
        """
        pass

    @abc.abstractmethod
    def GetRelativePermitivityAtHighLowFrequency(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.debye_model_pb2.FrequencyRangeMessage:
        """summary: Get the relative permitivity at high low frequency
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def SetRelativePermitivityAtHighLowFrequency(self,
        request: ansys.api.edb.v1.debye_model_pb2.SetFrequencyRangeMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Set the relative permitivity at high low frequency
        io_flags:
          - buffer
        """
        pass

    @abc.abstractmethod
    def IsRelativePermitivityEnabledAtOpticalFrequency(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.BoolValue:
        """summary: Is relative permitivity enabled at optical frequency
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def SetRelativePermitivityEnabledAtOpticalFrequency(self,
        request: ansys.api.edb.v1.edb_messages_pb2.BoolPropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Set is relative permitivity enabled at optical frequency
        io_flags:
          - buffer
        """
        pass

    @abc.abstractmethod
    def GetRelativePermitivityAtOpticalFrequency(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.DoubleValue:
        """summary: Get relative permitivity at optical frequency
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def SetRelativePermitivityAtOpticalFrequency(self,
        request: ansys.api.edb.v1.edb_messages_pb2.DoublePropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Set relative permitivity at optical frequency
        io_flags:
          - buffer
        """
        pass

    @abc.abstractmethod
    def UseDCConductivity(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.BoolValue:
        """summary: Get use dc conductivity
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def SetUseDCConductivity(self,
        request: ansys.api.edb.v1.edb_messages_pb2.BoolPropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Set use dc conductivity
        io_flags:
          - buffer
        """
        pass

    @abc.abstractmethod
    def GetDCConductivity(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.DoubleValue:
        """summary: Get dc conductivity
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def SetDCConductivity(self,
        request: ansys.api.edb.v1.edb_messages_pb2.DoublePropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Get dc conductivity
        io_flags:
          - buffer
        """
        pass

    @abc.abstractmethod
    def GetLossTangentAtHighLowFrequency(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.debye_model_pb2.FrequencyRangeMessage:
        """summary: Get dc conductivity
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def SetLossTangentAtHighLowFrequency(self,
        request: ansys.api.edb.v1.debye_model_pb2.SetFrequencyRangeMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Get dc conductivity
        io_flags:
          - buffer
        """
        pass


def add_DebyeModelServiceServicer_to_server(servicer: DebyeModelServiceServicer, server: grpc.Server) -> None: ...
