"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.edb.v1.edb_messages_pb2
import ansys.api.edb.v1.hierarchy_obj_pb2
import ansys.api.edb.v1.polygon_data_pb2
import ansys.api.edb.v1.via_group_pb2
import google.protobuf.wrappers_pb2
import grpc

class ViaGroupServiceStub:
    """ViaGroup service definition"""
    def __init__(self, channel: grpc.Channel) -> None: ...
    CreateWithPrimitives: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.via_group_pb2.ViaGroupCreateWithPrimitivesMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage] = ...
    """summary: Creates ViaGroups"""

    CreateWithOutline: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.via_group_pb2.ViaGroupCreateWithOutlineMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...
    """summary: Creates a ViaGroup with outline
    io_flags:
      - buffer
      - returns_future
    """

    FindByName: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.hierarchy_obj_pb2.ObjectNameInLayoutMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...
    """summary: Find the ViaGroup by name in the given layout
    io_flags:
      - cache
    """

    GetOutline: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataMessage] = ...
    """summary: Get the ViaGroup outline
    io_flags:
      - cache
    """

    GetConductorPercentage: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.DoubleValue] = ...
    """summary: Get conductor percentage of the ViaGroup
    io_flags:
      - cache
    """

    IsPersistent: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.BoolValue] = ...
    """summary: Check if the ViaGroup is persistent
    io_flags:
      - cache
    """


class ViaGroupServiceServicer(metaclass=abc.ABCMeta):
    """ViaGroup service definition"""
    @abc.abstractmethod
    def CreateWithPrimitives(self,
        request: ansys.api.edb.v1.via_group_pb2.ViaGroupCreateWithPrimitivesMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage:
        """summary: Creates ViaGroups"""
        pass

    @abc.abstractmethod
    def CreateWithOutline(self,
        request: ansys.api.edb.v1.via_group_pb2.ViaGroupCreateWithOutlineMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage:
        """summary: Creates a ViaGroup with outline
        io_flags:
          - buffer
          - returns_future
        """
        pass

    @abc.abstractmethod
    def FindByName(self,
        request: ansys.api.edb.v1.hierarchy_obj_pb2.ObjectNameInLayoutMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage:
        """summary: Find the ViaGroup by name in the given layout
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def GetOutline(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.polygon_data_pb2.PolygonDataMessage:
        """summary: Get the ViaGroup outline
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def GetConductorPercentage(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.DoubleValue:
        """summary: Get conductor percentage of the ViaGroup
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def IsPersistent(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.BoolValue:
        """summary: Check if the ViaGroup is persistent
        io_flags:
          - cache
        """
        pass


def add_ViaGroupServiceServicer_to_server(servicer: ViaGroupServiceServicer, server: grpc.Server) -> None: ...
