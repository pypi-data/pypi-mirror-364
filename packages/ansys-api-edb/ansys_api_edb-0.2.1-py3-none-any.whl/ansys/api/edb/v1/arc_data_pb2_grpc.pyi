"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.edb.v1.arc_data_pb2
import ansys.api.edb.v1.point_data_pb2
import google.protobuf.wrappers_pb2
import grpc

class ArcDataServiceStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    GetHeight: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.arc_data_pb2.ArcMessage,
        google.protobuf.wrappers_pb2.FloatValue] = ...
    """summary: Get height of an arc
    io_flags:
      - cache
    """

    GetCenter: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.arc_data_pb2.ArcMessage,
        ansys.api.edb.v1.point_data_pb2.PointMessage] = ...
    """summary: Get center point of an arc
    io_flags:
      - cache
    """

    GetMidpoint: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.arc_data_pb2.ArcMessage,
        ansys.api.edb.v1.point_data_pb2.PointMessage] = ...
    """summary: Get midpoint of an arc
    io_flags:
      - cache
    """

    GetRadius: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.arc_data_pb2.ArcMessage,
        google.protobuf.wrappers_pb2.FloatValue] = ...
    """summary: Get radius of an arc
    io_flags:
      - cache
    """

    GetBoundingBox: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.arc_data_pb2.ArcMessage,
        ansys.api.edb.v1.point_data_pb2.BoxMessage] = ...
    """summary: Get bounding box of an arc
    io_flags:
      - cache
    """

    GetAngle: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.arc_data_pb2.ArcMessage,
        google.protobuf.wrappers_pb2.FloatValue] = ...
    """summary: Get angle between two arcs.
    io_flags:
      - cache
    """

    ClosestPoints: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.arc_data_pb2.ArcDataTwoArcsMessage,
        ansys.api.edb.v1.point_data_pb2.BoxMessage] = ...
    """summary: Get closest points between two arcs.
    io_flags:
      - cache
    """


class ArcDataServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def GetHeight(self,
        request: ansys.api.edb.v1.arc_data_pb2.ArcMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.FloatValue:
        """summary: Get height of an arc
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def GetCenter(self,
        request: ansys.api.edb.v1.arc_data_pb2.ArcMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.point_data_pb2.PointMessage:
        """summary: Get center point of an arc
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def GetMidpoint(self,
        request: ansys.api.edb.v1.arc_data_pb2.ArcMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.point_data_pb2.PointMessage:
        """summary: Get midpoint of an arc
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def GetRadius(self,
        request: ansys.api.edb.v1.arc_data_pb2.ArcMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.FloatValue:
        """summary: Get radius of an arc
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def GetBoundingBox(self,
        request: ansys.api.edb.v1.arc_data_pb2.ArcMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.point_data_pb2.BoxMessage:
        """summary: Get bounding box of an arc
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def GetAngle(self,
        request: ansys.api.edb.v1.arc_data_pb2.ArcMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.FloatValue:
        """summary: Get angle between two arcs.
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def ClosestPoints(self,
        request: ansys.api.edb.v1.arc_data_pb2.ArcDataTwoArcsMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.point_data_pb2.BoxMessage:
        """summary: Get closest points between two arcs.
        io_flags:
          - cache
        """
        pass


def add_ArcDataServiceServicer_to_server(servicer: ArcDataServiceServicer, server: grpc.Server) -> None: ...
