"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import ansys.api.edb.v1.edb_messages_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class MaterialPropertyThermalModifierParamsMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TEMP_REF_FIELD_NUMBER: builtins.int
    C1_FIELD_NUMBER: builtins.int
    C2_FIELD_NUMBER: builtins.int
    TEMP_LOWER_LIMIT_FIELD_NUMBER: builtins.int
    TEMP_UPPER_LIMIT_FIELD_NUMBER: builtins.int
    AUTO_CALC_CONSTANT_THERMAL_MODIFIER_FIELD_NUMBER: builtins.int
    LOWER_CONST_THERM_MOD_FIELD_NUMBER: builtins.int
    UPPER_CONST_THERM_MOD_FIELD_NUMBER: builtins.int
    @property
    def temp_ref(self) -> ansys.api.edb.v1.edb_messages_pb2.ValueMessage: ...
    @property
    def c1(self) -> ansys.api.edb.v1.edb_messages_pb2.ValueMessage: ...
    @property
    def c2(self) -> ansys.api.edb.v1.edb_messages_pb2.ValueMessage: ...
    @property
    def temp_lower_limit(self) -> ansys.api.edb.v1.edb_messages_pb2.ValueMessage: ...
    @property
    def temp_upper_limit(self) -> ansys.api.edb.v1.edb_messages_pb2.ValueMessage: ...
    auto_calc_constant_thermal_modifier: builtins.bool = ...
    @property
    def lower_const_therm_mod(self) -> ansys.api.edb.v1.edb_messages_pb2.ValueMessage: ...
    @property
    def upper_const_therm_mod(self) -> ansys.api.edb.v1.edb_messages_pb2.ValueMessage: ...
    def __init__(self,
        *,
        temp_ref : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.ValueMessage] = ...,
        c1 : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.ValueMessage] = ...,
        c2 : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.ValueMessage] = ...,
        temp_lower_limit : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.ValueMessage] = ...,
        temp_upper_limit : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.ValueMessage] = ...,
        auto_calc_constant_thermal_modifier : builtins.bool = ...,
        lower_const_therm_mod : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.ValueMessage] = ...,
        upper_const_therm_mod : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.ValueMessage] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["c1",b"c1","c2",b"c2","lower_const_therm_mod",b"lower_const_therm_mod","temp_lower_limit",b"temp_lower_limit","temp_ref",b"temp_ref","temp_upper_limit",b"temp_upper_limit","upper_const_therm_mod",b"upper_const_therm_mod"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["auto_calc_constant_thermal_modifier",b"auto_calc_constant_thermal_modifier","c1",b"c1","c2",b"c2","lower_const_therm_mod",b"lower_const_therm_mod","temp_lower_limit",b"temp_lower_limit","temp_ref",b"temp_ref","temp_upper_limit",b"temp_upper_limit","upper_const_therm_mod",b"upper_const_therm_mod"]) -> None: ...
global___MaterialPropertyThermalModifierParamsMessage = MaterialPropertyThermalModifierParamsMessage
