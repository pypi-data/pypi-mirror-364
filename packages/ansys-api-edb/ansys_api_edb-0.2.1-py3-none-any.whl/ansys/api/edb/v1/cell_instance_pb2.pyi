"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import ansys.api.edb.v1.edb_messages_pb2
import ansys.api.edb.v1.hierarchy_obj_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class CellInstanceCreationMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TARGET_FIELD_NUMBER: builtins.int
    REF_FIELD_NUMBER: builtins.int
    @property
    def target(self) -> ansys.api.edb.v1.hierarchy_obj_pb2.ObjectNameInLayoutMessage: ...
    @property
    def ref(self) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage: ...
    def __init__(self,
        *,
        target : typing.Optional[ansys.api.edb.v1.hierarchy_obj_pb2.ObjectNameInLayoutMessage] = ...,
        ref : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["ref",b"ref","target",b"target"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ref",b"ref","target",b"target"]) -> None: ...
global___CellInstanceCreationMessage = CellInstanceCreationMessage

class CellInstanceParameterOverride(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TARGET_FIELD_NUMBER: builtins.int
    PNAME_FIELD_NUMBER: builtins.int
    PVAL_FIELD_NUMBER: builtins.int
    @property
    def target(self) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage: ...
    pname: typing.Text = ...
    @property
    def pval(self) -> ansys.api.edb.v1.edb_messages_pb2.ValueMessage: ...
    def __init__(self,
        *,
        target : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...,
        pname : typing.Text = ...,
        pval : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.ValueMessage] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["pval",b"pval","target",b"target"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["pname",b"pname","pval",b"pval","target",b"target"]) -> None: ...
global___CellInstanceParameterOverride = CellInstanceParameterOverride
