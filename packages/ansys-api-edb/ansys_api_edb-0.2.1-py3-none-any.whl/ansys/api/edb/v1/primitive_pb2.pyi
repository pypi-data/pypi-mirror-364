"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import ansys.api.edb.v1.edb_messages_pb2
import ansys.api.edb.v1.refs_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _PrimitiveType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _PrimitiveTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PrimitiveType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    RECTANGLE: PrimitiveType.ValueType = ...  # 0
    CIRCLE: PrimitiveType.ValueType = ...  # 1
    POLYGON: PrimitiveType.ValueType = ...  # 2
    PATH: PrimitiveType.ValueType = ...  # 3
    BONDWIRE: PrimitiveType.ValueType = ...  # 4
    PRIM_PLUGIN: PrimitiveType.ValueType = ...  # 5
    TEXT: PrimitiveType.ValueType = ...  # 6
    PATH_3D: PrimitiveType.ValueType = ...  # 7
    BOARD_BEND: PrimitiveType.ValueType = ...  # 8
    PRIM_INST_COLLECTION: PrimitiveType.ValueType = ...  # 11
    INVALID_TYPE: PrimitiveType.ValueType = ...  # 9
class PrimitiveType(_PrimitiveType, metaclass=_PrimitiveTypeEnumTypeWrapper):
    """Primitive type enum"""
    pass

RECTANGLE: PrimitiveType.ValueType = ...  # 0
CIRCLE: PrimitiveType.ValueType = ...  # 1
POLYGON: PrimitiveType.ValueType = ...  # 2
PATH: PrimitiveType.ValueType = ...  # 3
BONDWIRE: PrimitiveType.ValueType = ...  # 4
PRIM_PLUGIN: PrimitiveType.ValueType = ...  # 5
TEXT: PrimitiveType.ValueType = ...  # 6
PATH_3D: PrimitiveType.ValueType = ...  # 7
BOARD_BEND: PrimitiveType.ValueType = ...  # 8
PRIM_INST_COLLECTION: PrimitiveType.ValueType = ...  # 11
INVALID_TYPE: PrimitiveType.ValueType = ...  # 9
global___PrimitiveType = PrimitiveType


class PrimitiveTypeMessage(google.protobuf.message.Message):
    """Message for GetPrimitiveType"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TYPE_FIELD_NUMBER: builtins.int
    type: global___PrimitiveType.ValueType = ...
    def __init__(self,
        *,
        type : global___PrimitiveType.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["type",b"type"]) -> None: ...
global___PrimitiveTypeMessage = PrimitiveTypeMessage

class PrimitiveVoidCreationMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TARGET_FIELD_NUMBER: builtins.int
    HOLE_FIELD_NUMBER: builtins.int
    @property
    def target(self) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage: ...
    @property
    def hole(self) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage: ...
    def __init__(self,
        *,
        target : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...,
        hole : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["hole",b"hole","target",b"target"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["hole",b"hole","target",b"target"]) -> None: ...
global___PrimitiveVoidCreationMessage = PrimitiveVoidCreationMessage

class PrimitiveHfssPropMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TARGET_FIELD_NUMBER: builtins.int
    MATERIAL_NAME_FIELD_NUMBER: builtins.int
    SOLVE_INSIDE_FIELD_NUMBER: builtins.int
    @property
    def target(self) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage: ...
    material_name: typing.Text = ...
    solve_inside: builtins.bool = ...
    def __init__(self,
        *,
        target : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...,
        material_name : typing.Text = ...,
        solve_inside : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["target",b"target"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["material_name",b"material_name","solve_inside",b"solve_inside","target",b"target"]) -> None: ...
global___PrimitiveHfssPropMessage = PrimitiveHfssPropMessage

class GetPrimitiveHfssPropMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MATERIAL_NAME_FIELD_NUMBER: builtins.int
    SOLVE_INSIDE_FIELD_NUMBER: builtins.int
    material_name: typing.Text = ...
    solve_inside: builtins.bool = ...
    def __init__(self,
        *,
        material_name : typing.Text = ...,
        solve_inside : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["material_name",b"material_name","solve_inside",b"solve_inside"]) -> None: ...
global___GetPrimitiveHfssPropMessage = GetPrimitiveHfssPropMessage

class SetLayerMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TARGET_FIELD_NUMBER: builtins.int
    LAYER_FIELD_NUMBER: builtins.int
    @property
    def target(self) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage: ...
    @property
    def layer(self) -> ansys.api.edb.v1.refs_pb2.LayerRefMessage: ...
    def __init__(self,
        *,
        target : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...,
        layer : typing.Optional[ansys.api.edb.v1.refs_pb2.LayerRefMessage] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["layer",b"layer","target",b"target"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["layer",b"layer","target",b"target"]) -> None: ...
global___SetLayerMessage = SetLayerMessage

class SetIsNegativeMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TARGET_FIELD_NUMBER: builtins.int
    IS_NEGATIVE_FIELD_NUMBER: builtins.int
    @property
    def target(self) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage: ...
    is_negative: builtins.bool = ...
    def __init__(self,
        *,
        target : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...,
        is_negative : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["target",b"target"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["is_negative",b"is_negative","target",b"target"]) -> None: ...
global___SetIsNegativeMessage = SetIsNegativeMessage
