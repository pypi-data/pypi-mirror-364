"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.edb.v1.point_data_pb2
import ansys.api.edb.v1.polygon_data_pb2
import google.protobuf.wrappers_pb2
import grpc
import typing

class PolygonDataServiceStub:
    """Polygon Data service definition"""
    def __init__(self, channel: grpc.Channel) -> None: ...
    GetNormalizedPoints: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataMessage,
        ansys.api.edb.v1.point_data_pb2.PointsMessage] = ...
    """io_flags:
      - cache
    """

    IsCircle: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataMessage,
        google.protobuf.wrappers_pb2.BoolValue] = ...
    """io_flags:
      - cache
    """

    IsBox: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataMessage,
        google.protobuf.wrappers_pb2.BoolValue] = ...
    """io_flags:
      - cache
    """

    HasSelfIntersections: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataWithToleranceMessage,
        google.protobuf.wrappers_pb2.BoolValue] = ...
    """io_flags:
      - cache
    """

    RemoveSelfIntersections: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataWithToleranceMessage,
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataListMessage] = ...
    """io_flags:
      - cache
    """

    IsConvex: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataMessage,
        google.protobuf.wrappers_pb2.BoolValue] = ...
    """io_flags:
      - cache
    """

    GetArea: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataMessage,
        google.protobuf.wrappers_pb2.FloatValue] = ...
    """io_flags:
      - cache
    """

    Transform: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataTransformMessage,
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataMessage] = ...
    """io_flags:
      - cache
    """

    GetBBox: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataListMessage,
        ansys.api.edb.v1.point_data_pb2.BoxMessage] = ...
    """io_flags:
      - cache
    """

    GetStreamedBBox: grpc.StreamUnaryMultiCallable[
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataListMessage,
        ansys.api.edb.v1.point_data_pb2.BoxMessage] = ...
    """io_flags:
      - read_no_cache
    """

    GetConvexHull: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataListMessage,
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataMessage] = ...
    """io_flags:
      - cache
    """

    RemoveArcs: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataRemoveArcMessage,
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataMessage] = ...
    """io_flags:
      - cache
    """

    Defeature: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataWithToleranceMessage,
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataMessage] = ...
    """io_flags:
      - cache
    """

    GetBoundingCircle: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataMessage,
        ansys.api.edb.v1.point_data_pb2.CircleMessage] = ...
    """io_flags:
      - cache
    """

    IsInside: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataWithPointMessage,
        google.protobuf.wrappers_pb2.BoolValue] = ...
    """io_flags:
      - cache
    """

    CircleIntersectsPolygon: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataWithCircleMessage,
        google.protobuf.wrappers_pb2.BoolValue] = ...
    """io_flags:
      - cache
    """

    GetIntersectionType: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataPairWithToleranceMessage,
        ansys.api.edb.v1.polygon_data_pb2.IntersectionTypeMessage] = ...
    """io_flags:
      - cache
    """

    GetClosestPoints: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataWithPointsMessage,
        ansys.api.edb.v1.point_data_pb2.PointsMessage] = ...
    """io_flags:
      - cache
    """

    GetUnion: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataListMessage,
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataListMessage] = ...
    """io_flags:
      - cache
    """

    GetIntersection: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataPairMessage,
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataListMessage] = ...
    """io_flags:
      - cache
    """

    Subtract: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataPairMessage,
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataListMessage] = ...
    """io_flags:
      - cache
    """

    Xor: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataPairMessage,
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataListMessage] = ...
    """io_flags:
      - cache
    """

    Expand: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataExpandMessage,
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataListMessage] = ...
    """io_flags:
      - cache
    """

    Get2DAlphaShape: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataGetAlphaShapeMessage,
        ansys.api.edb.v1.polygon_data_pb2.PolygonDataListMessage] = ...
    """io_flags:
      - cache
    """


class PolygonDataServiceServicer(metaclass=abc.ABCMeta):
    """Polygon Data service definition"""
    @abc.abstractmethod
    def GetNormalizedPoints(self,
        request: ansys.api.edb.v1.polygon_data_pb2.PolygonDataMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.point_data_pb2.PointsMessage:
        """io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def IsCircle(self,
        request: ansys.api.edb.v1.polygon_data_pb2.PolygonDataMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.BoolValue:
        """io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def IsBox(self,
        request: ansys.api.edb.v1.polygon_data_pb2.PolygonDataMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.BoolValue:
        """io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def HasSelfIntersections(self,
        request: ansys.api.edb.v1.polygon_data_pb2.PolygonDataWithToleranceMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.BoolValue:
        """io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def RemoveSelfIntersections(self,
        request: ansys.api.edb.v1.polygon_data_pb2.PolygonDataWithToleranceMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.polygon_data_pb2.PolygonDataListMessage:
        """io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def IsConvex(self,
        request: ansys.api.edb.v1.polygon_data_pb2.PolygonDataMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.BoolValue:
        """io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def GetArea(self,
        request: ansys.api.edb.v1.polygon_data_pb2.PolygonDataMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.FloatValue:
        """io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def Transform(self,
        request: ansys.api.edb.v1.polygon_data_pb2.PolygonDataTransformMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.polygon_data_pb2.PolygonDataMessage:
        """io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def GetBBox(self,
        request: ansys.api.edb.v1.polygon_data_pb2.PolygonDataListMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.point_data_pb2.BoxMessage:
        """io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def GetStreamedBBox(self,
        request: typing.Iterator[ansys.api.edb.v1.polygon_data_pb2.PolygonDataListMessage],
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.point_data_pb2.BoxMessage:
        """io_flags:
          - read_no_cache
        """
        pass

    @abc.abstractmethod
    def GetConvexHull(self,
        request: ansys.api.edb.v1.polygon_data_pb2.PolygonDataListMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.polygon_data_pb2.PolygonDataMessage:
        """io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def RemoveArcs(self,
        request: ansys.api.edb.v1.polygon_data_pb2.PolygonDataRemoveArcMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.polygon_data_pb2.PolygonDataMessage:
        """io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def Defeature(self,
        request: ansys.api.edb.v1.polygon_data_pb2.PolygonDataWithToleranceMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.polygon_data_pb2.PolygonDataMessage:
        """io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def GetBoundingCircle(self,
        request: ansys.api.edb.v1.polygon_data_pb2.PolygonDataMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.point_data_pb2.CircleMessage:
        """io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def IsInside(self,
        request: ansys.api.edb.v1.polygon_data_pb2.PolygonDataWithPointMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.BoolValue:
        """io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def CircleIntersectsPolygon(self,
        request: ansys.api.edb.v1.polygon_data_pb2.PolygonDataWithCircleMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.BoolValue:
        """io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def GetIntersectionType(self,
        request: ansys.api.edb.v1.polygon_data_pb2.PolygonDataPairWithToleranceMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.polygon_data_pb2.IntersectionTypeMessage:
        """io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def GetClosestPoints(self,
        request: ansys.api.edb.v1.polygon_data_pb2.PolygonDataWithPointsMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.point_data_pb2.PointsMessage:
        """io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def GetUnion(self,
        request: ansys.api.edb.v1.polygon_data_pb2.PolygonDataListMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.polygon_data_pb2.PolygonDataListMessage:
        """io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def GetIntersection(self,
        request: ansys.api.edb.v1.polygon_data_pb2.PolygonDataPairMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.polygon_data_pb2.PolygonDataListMessage:
        """io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def Subtract(self,
        request: ansys.api.edb.v1.polygon_data_pb2.PolygonDataPairMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.polygon_data_pb2.PolygonDataListMessage:
        """io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def Xor(self,
        request: ansys.api.edb.v1.polygon_data_pb2.PolygonDataPairMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.polygon_data_pb2.PolygonDataListMessage:
        """io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def Expand(self,
        request: ansys.api.edb.v1.polygon_data_pb2.PolygonDataExpandMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.polygon_data_pb2.PolygonDataListMessage:
        """io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def Get2DAlphaShape(self,
        request: ansys.api.edb.v1.polygon_data_pb2.PolygonDataGetAlphaShapeMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.polygon_data_pb2.PolygonDataListMessage:
        """io_flags:
          - cache
        """
        pass


def add_PolygonDataServiceServicer_to_server(servicer: PolygonDataServiceServicer, server: grpc.Server) -> None: ...
