"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.edb.v1.edb_messages_pb2
import ansys.api.edb.v1.layer_collection_pb2
import ansys.api.edb.v1.layer_pb2
import google.protobuf.empty_pb2
import google.protobuf.wrappers_pb2
import grpc
import typing

class LayerCollectionServiceStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    Create: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.layer_collection_pb2.LayerCollectionModeMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...
    """summary: Creates an empty LayerCollection
    io_flags:
      - buffer
      - returns_future
      - write_no_cache_invalidation
    """

    Clone: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...
    """summary: Clone an existing LayerCollection
    io_flags:
      - buffer
      - returns_future
      - write_no_cache_invalidation
    """

    GetMode: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.layer_collection_pb2.LayerCollectionModeMessage] = ...
    """summary: Get the LayerCollection mode
    io_flags:
      - cache
      - write_no_cache_invalidation
    """

    SetMode: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.layer_collection_pb2.SetLayerCollectionModeMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Set the LayerCollection mode
    io_flags:
      - buffer
    """

    AddLayers: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.layer_collection_pb2.AddLayersMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Adds the provided layers to the LayerCollection
    io_flags:
      - buffer
    """

    ImportFromControlFile: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.layer_collection_pb2.ImportFromControlFileMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Import a LayerCollection from a control file"""

    AddLayer: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.layer_collection_pb2.AddLayerMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...
    """summary: Add a new layer to the LayerCollection
    io_flags:
      - buffer
      - returns_future
    """

    IsValid: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.BoolValue] = ...
    """summary: Check whether there is layer overlapping or gap for laminate stackup. Check whether there is dielectric layer overlapping or gap for overlapping stackup.
    io_flags:
      - cache
    """

    FindByName: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.layer_collection_pb2.FindLayerByNameMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...
    """summary: Finds a layer with the given name in the layer collection
    io_flags:
      - cache
    """

    GetTopBottomStackupLayers: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.layer_collection_pb2.GetTopBottomStackupLayersMessage,
        ansys.api.edb.v1.layer_collection_pb2.TopBottomStackupLayersMessage] = ...
    """summary: Get top bottom stackup layers of specific type
    io_flags:
      - cache
    """

    GetLayers: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.layer_collection_pb2.GetLayersMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage] = ...
    """summary: Get a list of layers in the LayerCollection filtered by the given layer filter
    io_flags:
      - read_no_cache
    """

    StreamLayers: grpc.UnaryStreamMultiCallable[
        ansys.api.edb.v1.layer_collection_pb2.GetLayersMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage] = ...
    """summary: Stream a list of layers in the LayerCollection filtered by the given layer filter
    io_flags:
      - read_no_cache
    """

    GetProductProperty: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.GetProductPropertyMessage,
        google.protobuf.wrappers_pb2.StringValue] = ...
    """summary: Get the layer's product property corresponding to the given product and attribute ids
    io_flags:
      - cache
    """

    SetProductProperty: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.SetProductPropertyMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Set the layer's product property corresponding to the given product and attribute ids
    io_flags:
      - buffer
    """

    GetProductPropertyIds: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.GetProductPropertyIdsMessage,
        ansys.api.edb.v1.edb_messages_pb2.ProductPropertyIdsMessage] = ...
    """summary: Get a list of property ids associated with the layer for the given product
    io_flags:
      - cache
    """

    MergeDielectrics: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.layer_collection_pb2.MergeDielectricsMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...
    """summary: Merges the dielectric layers in a range of layers into one large dielectric layer that spans the elevation range of all merged dielectric layers
    io_flags:
      - buffer
      - returns_future
    """

    GetZoneIds: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.layer_pb2.ZonesMessage] = ...
    """summary: Retrieves a list of all zones in the LayerCollection
    io_flags:
      - cache
    """

    GetZoneName: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.layer_collection_pb2.LayerCollectionZoneMessage,
        google.protobuf.wrappers_pb2.StringValue] = ...
    """summary: Retrieves the name corresponding to the specified zone
    io_flags:
      - cache
    """

    SetZoneName: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.layer_collection_pb2.SetZoneNameMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Set the name corresponding to the specified zone
    io_flags:
      - buffer
    """

    InsertZone: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.layer_collection_pb2.InsertZoneMessage,
        google.protobuf.wrappers_pb2.Int64Value] = ...
    """summary: Inserts a new zone"""

    RemoveZone: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.layer_collection_pb2.LayerCollectionZoneMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Removes a zone
    io_flags:
      - buffer
    """

    SimplifyDielectricsForPhi: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.layer_collection_pb2.SimplifyDielectricsForPhiMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage] = ...
    """summary: Simplifies dielectric layers by splitting them at the boundaries of signal layers and merging them"""

    AddZoneToLayer: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.layer_collection_pb2.AddZoneToLayerMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Sets the zone to the layer and updates the layer in the collection
    io_flags:
      - buffer
    """


class LayerCollectionServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Create(self,
        request: ansys.api.edb.v1.layer_collection_pb2.LayerCollectionModeMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage:
        """summary: Creates an empty LayerCollection
        io_flags:
          - buffer
          - returns_future
          - write_no_cache_invalidation
        """
        pass

    @abc.abstractmethod
    def Clone(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage:
        """summary: Clone an existing LayerCollection
        io_flags:
          - buffer
          - returns_future
          - write_no_cache_invalidation
        """
        pass

    @abc.abstractmethod
    def GetMode(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.layer_collection_pb2.LayerCollectionModeMessage:
        """summary: Get the LayerCollection mode
        io_flags:
          - cache
          - write_no_cache_invalidation
        """
        pass

    @abc.abstractmethod
    def SetMode(self,
        request: ansys.api.edb.v1.layer_collection_pb2.SetLayerCollectionModeMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Set the LayerCollection mode
        io_flags:
          - buffer
        """
        pass

    @abc.abstractmethod
    def AddLayers(self,
        request: ansys.api.edb.v1.layer_collection_pb2.AddLayersMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Adds the provided layers to the LayerCollection
        io_flags:
          - buffer
        """
        pass

    @abc.abstractmethod
    def ImportFromControlFile(self,
        request: ansys.api.edb.v1.layer_collection_pb2.ImportFromControlFileMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Import a LayerCollection from a control file"""
        pass

    @abc.abstractmethod
    def AddLayer(self,
        request: ansys.api.edb.v1.layer_collection_pb2.AddLayerMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage:
        """summary: Add a new layer to the LayerCollection
        io_flags:
          - buffer
          - returns_future
        """
        pass

    @abc.abstractmethod
    def IsValid(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.BoolValue:
        """summary: Check whether there is layer overlapping or gap for laminate stackup. Check whether there is dielectric layer overlapping or gap for overlapping stackup.
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def FindByName(self,
        request: ansys.api.edb.v1.layer_collection_pb2.FindLayerByNameMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage:
        """summary: Finds a layer with the given name in the layer collection
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def GetTopBottomStackupLayers(self,
        request: ansys.api.edb.v1.layer_collection_pb2.GetTopBottomStackupLayersMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.layer_collection_pb2.TopBottomStackupLayersMessage:
        """summary: Get top bottom stackup layers of specific type
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def GetLayers(self,
        request: ansys.api.edb.v1.layer_collection_pb2.GetLayersMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage:
        """summary: Get a list of layers in the LayerCollection filtered by the given layer filter
        io_flags:
          - read_no_cache
        """
        pass

    @abc.abstractmethod
    def StreamLayers(self,
        request: ansys.api.edb.v1.layer_collection_pb2.GetLayersMessage,
        context: grpc.ServicerContext,
    ) -> typing.Iterator[ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage]:
        """summary: Stream a list of layers in the LayerCollection filtered by the given layer filter
        io_flags:
          - read_no_cache
        """
        pass

    @abc.abstractmethod
    def GetProductProperty(self,
        request: ansys.api.edb.v1.edb_messages_pb2.GetProductPropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.StringValue:
        """summary: Get the layer's product property corresponding to the given product and attribute ids
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def SetProductProperty(self,
        request: ansys.api.edb.v1.edb_messages_pb2.SetProductPropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Set the layer's product property corresponding to the given product and attribute ids
        io_flags:
          - buffer
        """
        pass

    @abc.abstractmethod
    def GetProductPropertyIds(self,
        request: ansys.api.edb.v1.edb_messages_pb2.GetProductPropertyIdsMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.ProductPropertyIdsMessage:
        """summary: Get a list of property ids associated with the layer for the given product
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def MergeDielectrics(self,
        request: ansys.api.edb.v1.layer_collection_pb2.MergeDielectricsMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage:
        """summary: Merges the dielectric layers in a range of layers into one large dielectric layer that spans the elevation range of all merged dielectric layers
        io_flags:
          - buffer
          - returns_future
        """
        pass

    @abc.abstractmethod
    def GetZoneIds(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.layer_pb2.ZonesMessage:
        """summary: Retrieves a list of all zones in the LayerCollection
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def GetZoneName(self,
        request: ansys.api.edb.v1.layer_collection_pb2.LayerCollectionZoneMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.StringValue:
        """summary: Retrieves the name corresponding to the specified zone
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def SetZoneName(self,
        request: ansys.api.edb.v1.layer_collection_pb2.SetZoneNameMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Set the name corresponding to the specified zone
        io_flags:
          - buffer
        """
        pass

    @abc.abstractmethod
    def InsertZone(self,
        request: ansys.api.edb.v1.layer_collection_pb2.InsertZoneMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.Int64Value:
        """summary: Inserts a new zone"""
        pass

    @abc.abstractmethod
    def RemoveZone(self,
        request: ansys.api.edb.v1.layer_collection_pb2.LayerCollectionZoneMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Removes a zone
        io_flags:
          - buffer
        """
        pass

    @abc.abstractmethod
    def SimplifyDielectricsForPhi(self,
        request: ansys.api.edb.v1.layer_collection_pb2.SimplifyDielectricsForPhiMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage:
        """summary: Simplifies dielectric layers by splitting them at the boundaries of signal layers and merging them"""
        pass

    @abc.abstractmethod
    def AddZoneToLayer(self,
        request: ansys.api.edb.v1.layer_collection_pb2.AddZoneToLayerMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Sets the zone to the layer and updates the layer in the collection
        io_flags:
          - buffer
        """
        pass


def add_LayerCollectionServiceServicer_to_server(servicer: LayerCollectionServiceServicer, server: grpc.Server) -> None: ...
