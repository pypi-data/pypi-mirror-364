"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import ansys.api.edb.v1.edb_messages_pb2
import ansys.api.edb.v1.refs_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class TermInstTermCreationMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LAYOUT_FIELD_NUMBER: builtins.int
    NET_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    TERM_INST_FIELD_NUMBER: builtins.int
    IS_REF_FIELD_NUMBER: builtins.int
    @property
    def layout(self) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage: ...
    @property
    def net(self) -> ansys.api.edb.v1.refs_pb2.NetRefMessage: ...
    name: typing.Text = ...
    @property
    def term_inst(self) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage: ...
    is_ref: builtins.bool = ...
    def __init__(self,
        *,
        layout : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...,
        net : typing.Optional[ansys.api.edb.v1.refs_pb2.NetRefMessage] = ...,
        name : typing.Text = ...,
        term_inst : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...,
        is_ref : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["layout",b"layout","net",b"net","term_inst",b"term_inst"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["is_ref",b"is_ref","layout",b"layout","name",b"name","net",b"net","term_inst",b"term_inst"]) -> None: ...
global___TermInstTermCreationMessage = TermInstTermCreationMessage

class TermInstTermSetInstanceMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TERM_FIELD_NUMBER: builtins.int
    TERM_INST_FIELD_NUMBER: builtins.int
    @property
    def term(self) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage: ...
    @property
    def term_inst(self) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage: ...
    def __init__(self,
        *,
        term : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...,
        term_inst : typing.Optional[ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["term",b"term","term_inst",b"term_inst"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["term",b"term","term_inst",b"term_inst"]) -> None: ...
global___TermInstTermSetInstanceMessage = TermInstTermSetInstanceMessage
