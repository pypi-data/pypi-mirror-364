"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.edb.v1.differential_pair_pb2
import ansys.api.edb.v1.edb_messages_pb2
import google.protobuf.empty_pb2
import grpc

class DifferentialPairServiceStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    Create: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.differential_pair_pb2.DifferentialPairCreationMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...
    """summary: create a differential pair
    io_flags:
      - buffer
      - returns_future
    """

    FindByName: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.StringPropertyMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...
    """summary: find a differential pair
    io_flags:
      - cache
    """

    GetDifferentialPair: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.differential_pair_pb2.DifferentialPairNetRefsMessage] = ...
    """summary: Get differential pair
    io_flags:
      - cache
    """

    SetDifferentialPair: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.differential_pair_pb2.DifferentialPairNetRefsMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """summary: Set differential pair
    io_flags:
      - buffer
    """


class DifferentialPairServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Create(self,
        request: ansys.api.edb.v1.differential_pair_pb2.DifferentialPairCreationMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage:
        """summary: create a differential pair
        io_flags:
          - buffer
          - returns_future
        """
        pass

    @abc.abstractmethod
    def FindByName(self,
        request: ansys.api.edb.v1.edb_messages_pb2.StringPropertyMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage:
        """summary: find a differential pair
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def GetDifferentialPair(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.differential_pair_pb2.DifferentialPairNetRefsMessage:
        """summary: Get differential pair
        io_flags:
          - cache
        """
        pass

    @abc.abstractmethod
    def SetDifferentialPair(self,
        request: ansys.api.edb.v1.differential_pair_pb2.DifferentialPairNetRefsMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """summary: Set differential pair
        io_flags:
          - buffer
        """
        pass


def add_DifferentialPairServiceServicer_to_server(servicer: DifferentialPairServiceServicer, server: grpc.Server) -> None: ...
