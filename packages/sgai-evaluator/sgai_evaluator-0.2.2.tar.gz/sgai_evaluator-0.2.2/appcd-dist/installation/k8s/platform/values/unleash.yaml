
# HorizontalPodAutoscaler
# https://kubernetes.io/de/docs/tasks/run-application/horizontal-pod-autoscale/

# Unleash v4 comes with basic username/password and API tokens.
#
# To login the first time use the following:
#    username: admin
#    password: unleash4all
#
# You can also add your own custom auth:
# See https://github.com/Unleash/unleash-examples/tree/main/v4 for an example index.js configmap. Do be aware that since 6.0.0 of Unleash OSS, it no longer bundles passport libraries, so the v4 examples are no longer valid.
# If you want SSO, you can use images from our community repos. There are prebuilt images for Google, Azure and OIDC.
# Update your image.repository setting in your custom values.yaml file to use the image from the [community repo](https://github.com/Unleash/unleash-docker-community?tab=readme-ov-file#looking-for-sso-and-coming-from-httpsgithubcomunleashhelm-charts-), then configure the environment variables for the image as documented in the community repo.
configMaps: {}

containerPort: 4242

dbConfig:
  # ssl value must be a stringified JSON object https://docs.getunleash.io/reference/deploy/configuring-unleash#dbssl-vs-database_ssl-options
  # ssl: { rejectUnauthorized: false }
  # sslConfigFile can be a path to a json file containing the keys listed in https://docs.getunleash.io/reference/deploy/configuring-unleash#dbssl-vs-database_ssl-options
  # sslConfigFile:
  # sslCaFile should be a path to a CA file in pem format
  # sslCaFile:
  # sslCertFile should be a path to the cert file in pem format to use to connect to postgres
  # sslCertFile:
  # sslKeyFile should be a path to the key file in pem format to use to connect to postgres
  # sslKeyFile:
  # sslRejectUnauthorized can be set to true|false. Don't set this to false in production, it will void any security you get from using SSL to connect
  # sslRejectUnauthorized

env: []
#  - name: GOOGLE_CLIENT_ID
#    value: 999999999999-999z99zz9zzzzzz99z9zz9z9zzzzzz9z.apps.googleusercontent.com
#  - name: GOOGLE_CALLBACK_URL
#    value: https://unleash.example.com/api/auth/callback

# adds environmentvars for existing secrets to the container via tpl function
existingSecrets:
  []
  # - name: GOOGLE_CLIENT_SECRET
  #   valueFrom:
  #     secretKeyRef:
  #       name: secretname
  #       key: secretkey

fullnameOverride: ""

image:
  repository: ghcr.io/appcd-dev/unleashorg/unleash-community-google
  tag: 6.9.1
  pullPolicy: IfNotPresent

imagePullSecrets: []

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

initContainers: []

livenessProbe:
  enabled: true
  path: /health
  initialDelaySeconds: 30
  timeoutSeconds: 10

nameOverride: ""

nodeSelector: {}

deploymentAnnotations: {}

podAnnotations: {}

readinessProbe:
  enabled: true
  path: /health
  initialDelaySeconds: 30
  timeoutSeconds: 10
  periodSeconds: 10
  successThreshold: 5

replicaCount: 2

resources:
  limits:
    cpu: 1000m
    memory: 768Mi
  requests:
    cpu: 100m
    memory: 384Mi

# The key value pairs under secrets will be included in a Kubernetes Secret,
# and they will generate environment variables that use `valueFrom` to refer to
# the secrets in the Kubernetes Secret.
secrets: {}
#  SHARED_SECRET: 999z9z9z99https://meet.google.com/rtk-rbjr-tkv99zzz9
#  GOOGLE_CLIENT_SECRET: zzzZZz9ZZzZzZzz9Z9zZZZZZ

# postgresql dependency chart config
# https://github.com/bitnami/charts/blob/master/bitnami/postgresql/values.yaml
postgresql:
  enabled: false


securityContext: {}
# Autoscaling
# https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
# Allows Unleash to setup HPA
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 2
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 70

podDisruptionBudget: {}
  # enabled: true
  # minAvailable: 1

topologySpreadConstraints: {}
  # - maxSkew: 1
  #   topologyKey: topology.kubernetes.io/zone
  #   whenUnsatisfiable: DoNotSchedule

# Add additional volumes and mounts, for example to read other secrets.
volumes:
  - name: unleash-config
    defaultMode: 420
    configMap:
      name: unleash-config
volumeMounts:
  - name: unleash-config
    mountPath: /unleash/index.js
    subPath: index_js
    readOnly: true
  - name: unleash-config
    mountPath: /unleash/google-auth-hook.js
    subPath: google_auth_hook_js
    readOnly: true
