apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tf-module-service.fullname" . }}
  labels:
    {{- include "tf-module-service.labels" . | nindent 4 }}
  annotations:
    deploymentTime: {{ now | date "2006-01-02T15:04:05" }}
    rollme: {{ randAlphaNum 5 | quote }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "tf-module-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        rollme: {{ randAlphaNum 5 | quote }}
        {{- include "tf-module-service.labels" . | nindent 8 }}
	{{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "tf-module-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: Always
          command: ["/bin/tf-module-service"]
          args:
            - "--config"
            - "/config/config.yaml"
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          # livenessProbe: null
            # httpGet:
            #   path: /v1/health
            #   port: http
          # readinessProbe: null
            # httpGet:
            #   path: /v1/health
            #   port: http
          envFrom:
            - configMapRef:
                name: "stackgen-platform-configmap"
            {{- range $key, $value := .Values.secrets }}
            - secretRef:
                name: {{ $value }}
            {{- end }}
          env:
            {{- toYaml .Values.env | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          {{- if .Values.storage.worm.enabled }}
            - name: persistent-storage
              mountPath: /data
          {{- end }}
            - name: config
              mountPath: /config/config.yaml
              subPath: config.yaml
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
      {{- if .Values.storage.worm.enabled }}
        - name: persistent-storage
          persistentVolumeClaim:
            claimName: {{ printf "storage-%s" .Release.Namespace }}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "tf-module-service.fullname" . }}-configmap
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
