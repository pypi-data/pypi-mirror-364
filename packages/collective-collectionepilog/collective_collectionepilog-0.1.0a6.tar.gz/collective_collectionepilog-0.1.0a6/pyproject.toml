[project]
name = "collective-collectionepilog"
dynamic = ["version"]
description = "Provides a behavior for collections to add epilog RichText field under the collection results."
readme = "README.md"
requires-python = ">=3.12"
authors = [{ name = "Maik Derstappen - md@derico.de", email = "md@derico.de" }]
keywords = ["CMS", "Plone", "Python"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Web Environment",
    "Framework :: Plone",
    "Framework :: Plone :: 6.1",
    "Framework :: Plone :: Addon",
    "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.12",
]
dependencies = ["Products.CMFPlone", "plone.api", "plone.app.contenttypes"]

[project.optional-dependencies]
test = [
    "horse-with-no-namespace",
    "plone.app.testing",
    "plone.restapi[test]",
    "pytest",
    "pytest-cov",
    "pytest-plone>=0.5.0",
]

[project.urls]
Homepage = "https://github.com/collective/collective.collectionepilog"
PyPI = "https://pypi.org/project/collective.collectionepilog"
Source = "https://github.com/collective/collective.collectionepilog"
Tracker = "https://github.com/collective/collective.collectionepilog/issues"


[project.entry-points."plone.autoinclude.plugin"]
target = "plone"
module = "collective.collectionepilog"

[tool.uv]
managed = true

[build-system]
requires = ["setuptools>=68.2", "wheel"]
build-backend = "setuptools.build_meta"

# [tool.setuptools.package-data]
# "collective.collectionepilog" = ["*.zcml", "*.pt", "*.xml", "*.txt", "*.rst"]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools]
package-dir = { "" = "src" }
include-package-data = true

[tool.setuptools.dynamic]
version = {attr = "collective.collectionepilog.__version__"}

[tool.zest-releaser]
python-file-with-version = "src/collective/collectionepilog/__init__.py"
version-levels = 3


# [tool.hatch.version]
# path = "src/collective/collectionepilog/__init__.py"

# [build-system]
# requires = ["hatchling"]
# build-backend = "hatchling.build"

# [tool.hatch.build]
# strict-naming = true

# [tool.hatch.build.targets.sdist]
# exclude = ["/.github"]

# [tool.hatch.build.targets.wheel]
# # sources = ["src"]
# packages = ["src/collective"]

[tool.towncrier]
directory = "news/"
filename = "CHANGELOG.md"
start_string = "<!-- towncrier release notes start -->\n"
title_format = "## {version} ({project_date})"
template = "news/.changelog_template.jinja"
issue_format = "[#{issue}](https://github.com/collective/collective.collectionepilog/issues/{issue})"
underlines = ["", "", ""]

[[tool.towncrier.type]]
directory = "breaking"
name = "Breaking changes:"
showcontent = true

[[tool.towncrier.type]]
directory = "feature"
name = "New features:"
showcontent = true

[[tool.towncrier.type]]
directory = "bugfix"
name = "Bug fixes:"
showcontent = true

[[tool.towncrier.type]]
directory = "internal"
name = "Internal:"
showcontent = true

[[tool.towncrier.type]]
directory = "documentation"
name = "Documentation:"
showcontent = true

[[tool.towncrier.type]]
directory = "tests"
name = "Tests"
showcontent = true

[tool.ruff]
target-version = "py313"
line-length = 88
fix = true
lint.select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # mccabe
    "C90",
    # pycodestyle
    "E",
    "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
]
lint.ignore = [
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.lint.isort]
case-sensitive = false
no-sections = true
force-single-line = true
from-first = true
lines-after-imports = 2
lines-between-types = 1
order-by-type = false

[tool.ruff.format]
preview = true

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["E501", "RUF001", "S101"]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.coverage.run]
source_pkgs = ["collective.collectionepilog", "tests"]
branch = true
parallel = true
omit = ["src/collective/collectionepilog/locales/*.py"]
