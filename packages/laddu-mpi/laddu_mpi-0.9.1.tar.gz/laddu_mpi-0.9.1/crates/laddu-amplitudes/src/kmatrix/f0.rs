use nalgebra::{matrix, vector};
use nalgebra::{SMatrix, SVector};
use serde::{Deserialize, Serialize};
use std::array;

use laddu_core::{
    amplitudes::{Amplitude, AmplitudeID, ParameterLike},
    data::Event,
    resources::{Cache, ComplexVectorID, MatrixID, ParameterID, Parameters, Resources},
    utils::variables::{Mass, Variable},
    Complex, DVector, Float, LadduError,
};

#[cfg(feature = "python")]
use laddu_python::{
    amplitudes::{PyAmplitude, PyParameterLike},
    utils::variables::PyMass,
};
#[cfg(feature = "python")]
use pyo3::prelude::*;

use super::{AdlerZero, FixedKMatrix};

const G_F0: SMatrix<Float, 5, 5> = matrix![
     0.74987,  0.06401, -0.23417,  0.01270, -0.14242;
    -0.01257,  0.00204, -0.01032,  0.26700,  0.22780;
     0.27536,  0.77413,  0.72283,  0.09214,  0.15981;
    -0.15102,  0.50999,  0.11934,  0.02742,  0.16272;
     0.36103,  0.13112,  0.36792, -0.04025, -0.17397

];

const C_F0: SMatrix<Float, 5, 5> = matrix![
     0.03728,  0.00000, -0.01398, -0.02203,  0.01397;
     0.00000,  0.00000,  0.00000,  0.00000,  0.00000;
    -0.01398,  0.00000,  0.02349,  0.03101, -0.04003;
    -0.02203,  0.00000,  0.03101, -0.13769, -0.06722;
     0.01397,  0.00000, -0.04003, -0.06722, -0.28401
];

const M_F0: SVector<Float, 5> = vector![0.51461, 0.90630, 1.23089, 1.46104, 1.69611];

const COV_F0: SMatrix<Float, 56, 56> = matrix![

    0.00000, 0.00001, 0.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 0.00009, 0.00000, 0.00000, -0.00001, -0.00000, -0.00001, 0.00001, -0.00000, 0.00002, 0.00001, -0.00000, 0.00006, -0.00000, 0.00002, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00002, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00001, -0.00001, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00000, 0.00000, 0.00000, -0.00001, -0.00000, 0.00000;
    -0.00000, 0.00000, 0.00006, 0.00000, 0.00001, 0.00000, -0.00000, -0.00002, 0.00002, -0.00002, 0.00001, -0.00001, -0.00008, -0.00001, 0.00003, -0.00000, 0.00014, 0.00015, -0.00001, 0.00005, 0.00001, 0.00000, -0.00001, 0.00002, -0.00000, -0.00001, 0.00000, 0.00001, -0.00001, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00001, -0.00003, 0.00000, 0.00000, 0.00000, -0.00002, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00003, 0.00003, 0.00001, 0.00003, -0.00000;
    0.00000, 0.00000, 0.00000, 0.00002, 0.00000, 0.00001, 0.00000, 0.00002, 0.00004, -0.00002, 0.00000, 0.00001, -0.00003, -0.00006, -0.00001, 0.00000, 0.00004, 0.00002, -0.00000, 0.00000, 0.00000, 0.00000, 0.00001, -0.00001, -0.00001, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00001, 0.00000, 0.00000, 0.00000, -0.00001, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00000, -0.00001, -0.00001, -0.00001, 0.00002, -0.00000;
    -0.00000, -0.00000, 0.00001, 0.00000, 0.00003, 0.00001, -0.00000, -0.00009, -0.00001, -0.00001, -0.00000, 0.00007, 0.00003, 0.00005, 0.00012, 0.00000, 0.00012, 0.00007, 0.00004, 0.00003, -0.00000, 0.00000, 0.00007, 0.00007, 0.00013, 0.00000, 0.00000, -0.00000, -0.00001, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00006, -0.00001, -0.00003, 0.00000, 0.00000, 0.00000, -0.00002, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00000, -0.00002, -0.00001, 0.00001, 0.00004, 0.00000;
    0.00000, 0.00000, 0.00000, 0.00001, 0.00001, 0.00003, 0.00000, -0.00001, 0.00001, -0.00003, -0.00000, 0.00004, -0.00001, -0.00003, -0.00000, -0.00000, 0.00004, 0.00004, 0.00001, -0.00000, 0.00000, -0.00000, 0.00003, 0.00003, 0.00002, 0.00000, 0.00000, -0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00001, 0.00000, -0.00001, 0.00000, 0.00000, 0.00000, -0.00001, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00001, -0.00001, 0.00000, 0.00003, -0.00000;
    0.00000, 0.00000, -0.00000, 0.00000, -0.00000, 0.00000, 0.00001, 0.00003, 0.00000, 0.00000, 0.00000, 0.00001, 0.00000, -0.00002, -0.00000, -0.00000, 0.00001, 0.00000, -0.00001, 0.00000, -0.00000, -0.00000, -0.00000, -0.00002, -0.00001, 0.00000, 0.00000, -0.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 0.00000, -0.00000, 0.00000, -0.00000, -0.00000, 0.00000;
    0.00000, 0.00000, -0.00002, 0.00002, -0.00009, -0.00001, 0.00003, 0.00065, 0.00011, 0.00003, 0.00002, -0.00044, -0.00018, -0.00037, -0.00050, -0.00000, -0.00044, -0.00033, -0.00018, -0.00007, -0.00001, -0.00002, -0.00050, -0.00046, -0.00057, -0.00001, 0.00000, 0.00002, 0.00005, -0.00001, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00018, 0.00002, 0.00012, 0.00000, 0.00000, 0.00000, 0.00002, 0.00001, 0.00000, 0.00000, 0.00000, 0.00000, 0.00002, 0.00000, 0.00008, 0.00002, -0.00007, -0.00018, -0.00000;
    0.00000, 0.00000, 0.00002, 0.00004, -0.00001, 0.00001, 0.00000, 0.00011, 0.00024, -0.00007, 0.00000, 0.00003, -0.00006, -0.00034, 0.00003, -0.00000, 0.00013, 0.00012, -0.00003, 0.00001, -0.00001, 0.00001, 0.00006, 0.00003, -0.00007, -0.00000, 0.00000, 0.00000, -0.00001, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00002, -0.00001, -0.00003, 0.00000, 0.00000, 0.00000, -0.00002, 0.00001, 0.00000, 0.00000, 0.00000, 0.00000, -0.00001, -0.00000, -0.00002, -0.00001, -0.00014, 0.00005, -0.00000;
    -0.00000, -0.00000, -0.00002, -0.00002, -0.00001, -0.00003, 0.00000, 0.00003, -0.00007, 0.00012, -0.00000, -0.00001, 0.00015, 0.00016, 0.00014, -0.00000, -0.00012, -0.00012, 0.00003, 0.00006, 0.00000, -0.00000, -0.00005, -0.00008, 0.00008, 0.00000, 0.00000, -0.00001, 0.00001, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00008, -0.00003, 0.00004, 0.00000, 0.00000, 0.00000, -0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00002, 0.00001, 0.00001, -0.00005, 0.00000;

    0.00000, 0.00009, -0.00001, 0.00001, 0.00007, 0.00004, 0.00001, -0.00044, 0.00003, -0.00001, -0.00004, 0.00345, 0.00055, -0.00024, 0.00087, 0.00001, 0.00068, 0.00115, 0.00023, 0.00051, 0.00023, 0.00013, 0.00221, 0.00032, 0.00098, 0.00003, 0.00000, -0.00005, -0.00008, -0.00006, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00013, 0.00004, -0.00005, 0.00000, 0.00000, 0.00000, -0.00025, -0.00014, 0.00000, 0.00000, 0.00000, 0.00000, -0.00014, -0.00001, -0.00015, 0.00001, -0.00015, 0.00018, -0.00000;
    -0.00000, 0.00000, -0.00008, -0.00003, 0.00003, -0.00001, 0.00000, -0.00018, -0.00006, 0.00015, -0.00005, 0.00055, 0.00155, 0.00002, 0.00135, 0.00001, -0.00021, 0.00013, 0.00017, 0.00036, -0.00004, -0.00001, 0.00046, 0.00032, 0.00086, 0.00004, 0.00000, -0.00010, -0.00002, -0.00002, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00026, -0.00007, 0.00005, 0.00000, 0.00000, 0.00000, -0.00000, -0.00003, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00002, 0.00005, 0.00018, -0.00010, 0.00005, -0.00000;
    -0.00000, 0.00000, -0.00001, -0.00006, 0.00005, -0.00003, -0.00002, -0.00037, -0.00034, 0.00016, 0.00001, -0.00024, 0.00002, 0.00172, 0.00000, -0.00000, -0.00013, -0.00022, 0.00009, 0.00041, -0.00000, -0.00003, -0.00030, 0.00008, 0.00038, 0.00000, 0.00000, 0.00000, 0.00005, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00002, -0.00002, 0.00008, 0.00000, 0.00000, 0.00000, -0.00010, 0.00001, 0.00000, 0.00000, 0.00000, 0.00000, 0.00005, 0.00000, 0.00001, 0.00005, 0.00033, 0.00004, -0.00000;
    -0.00001, -0.00001, 0.00003, -0.00001, 0.00012, -0.00000, -0.00000, -0.00050, 0.00003, 0.00014, -0.00005, 0.00087, 0.00135, 0.00000, 0.00218, 0.00000, 0.00054, 0.00066, 0.00029, 0.00064, -0.00004, 0.00002, 0.00091, 0.00069, 0.00133, 0.00003, 0.00000, -0.00010, -0.00007, -0.00001, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00064, -0.00020, -0.00011, 0.00000, 0.00000, 0.00000, -0.00003, -0.00001, 0.00000, 0.00000, 0.00000, 0.00000, -0.00004, 0.00001, -0.00009, 0.00013, -0.00019, 0.00027, -0.00000;

    -0.00000, -0.00001, 0.00014, 0.00004, 0.00012, 0.00004, 0.00001, -0.00044, 0.00013, -0.00012, 0.00000, 0.00068, -0.00021, -0.00013, 0.00054, -0.00000, 0.00236, 0.00105, 0.00010, 0.00016, -0.00008, 0.00011, 0.00078, 0.00062, 0.00073, -0.00001, 0.00000, 0.00001, -0.00008, 0.00001, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00043, 0.00004, -0.00042, 0.00000, 0.00000, 0.00000, 0.00007, 0.00007, 0.00000, 0.00000, 0.00000, 0.00000, -0.00005, -0.00001, -0.00046, -0.00006, -0.00001, 0.00025, -0.00000;
    -0.00000, 0.00001, 0.00015, 0.00002, 0.00007, 0.00004, 0.00000, -0.00033, 0.00012, -0.00012, 0.00001, 0.00115, 0.00013, -0.00022, 0.00066, 0.00000, 0.00105, 0.00147, 0.00008, 0.00029, 0.00008, 0.00003, 0.00071, 0.00039, 0.00033, -0.00000, 0.00000, -0.00001, -0.00009, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00004, -0.00006, -0.00015, 0.00000, 0.00000, 0.00000, -0.00006, -0.00001, 0.00000, 0.00000, 0.00000, 0.00000, -0.00003, -0.00001, -0.00017, 0.00004, -0.00006, 0.00023, 0.00000;
    -0.00000, -0.00000, -0.00001, -0.00000, 0.00004, 0.00001, -0.00001, -0.00018, -0.00003, 0.00003, -0.00001, 0.00023, 0.00017, 0.00009, 0.00029, -0.00000, 0.00010, 0.00008, 0.00016, 0.00009, 0.00000, 0.00001, 0.00023, 0.00017, 0.00027, 0.00001, 0.00000, -0.00001, -0.00002, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00010, -0.00002, -0.00003, 0.00000, 0.00000, 0.00000, -0.00004, -0.00001, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 0.00000, -0.00002, -0.00000, 0.00000, 0.00006, 0.00000;
    -0.00000, 0.00002, 0.00005, 0.00000, 0.00003, -0.00000, 0.00000, -0.00007, 0.00001, 0.00006, -0.00000, 0.00051, 0.00036, 0.00041, 0.00064, -0.00000, 0.00016, 0.00029, 0.00009, 0.00071, 0.00001, -0.00000, 0.00025, 0.00017, 0.00048, 0.00000, 0.00000, -0.00002, 0.00000, -0.00001, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00007, -0.00007, 0.00000, 0.00000, 0.00000, 0.00000, -0.00023, -0.00002, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00006, 0.00009, -0.00001, 0.00012, -0.00000;
    -0.00000, 0.00001, 0.00001, 0.00000, -0.00000, 0.00000, -0.00000, -0.00001, -0.00001, 0.00000, -0.00000, 0.00023, -0.00004, -0.00000, -0.00004, 0.00000, -0.00008, 0.00008, 0.00000, 0.00001, 0.00005, 0.00000, 0.00008, -0.00005, -0.00003, -0.00000, 0.00000, 0.00000, -0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00007, -0.00000, 0.00003, 0.00000, 0.00000, 0.00000, -0.00003, -0.00002, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00000, 0.00001, -0.00001, -0.00000, -0.00000, 0.00000;
    -0.00000, -0.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00000, -0.00002, 0.00001, -0.00000, -0.00000, 0.00013, -0.00001, -0.00003, 0.00002, -0.00000, 0.00011, 0.00003, 0.00001, -0.00000, 0.00000, 0.00003, 0.00012, 0.00001, 0.00004, 0.00000, 0.00000, 0.00000, -0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00002, 0.00001, -0.00002, 0.00000, 0.00000, 0.00000, 0.00001, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00001, -0.00000, -0.00003, 0.00000, -0.00000, 0.00000, 0.00000;
    -0.00000, 0.00006, -0.00001, 0.00001, 0.00007, 0.00003, -0.00000, -0.00050, 0.00006, -0.00005, -0.00004, 0.00221, 0.00046, -0.00030, 0.00091, 0.00001, 0.00078, 0.00071, 0.00023, 0.00025, 0.00008, 0.00012, 0.00205, 0.00059, 0.00112, 0.00003, 0.00000, -0.00005, -0.00007, -0.00004, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00023, 0.00001, -0.00025, 0.00000, 0.00000, 0.00000, -0.00001, -0.00011, 0.00000, 0.00000, 0.00000, 0.00000, -0.00012, -0.00000, -0.00015, 0.00002, -0.00013, 0.00017, -0.00000;
    -0.00000, -0.00000, 0.00002, -0.00001, 0.00007, 0.00003, -0.00002, -0.00046, 0.00003, -0.00008, -0.00001, 0.00032, 0.00032, 0.00008, 0.00069, -0.00000, 0.00062, 0.00039, 0.00017, 0.00017, -0.00005, 0.00001, 0.00059, 0.00107, 0.00070, 0.00001, 0.00000, -0.00003, -0.00005, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00030, -0.00004, -0.00019, 0.00000, 0.00000, 0.00000, 0.00003, -0.00001, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 0.00000, -0.00010, 0.00001, -0.00002, 0.00016, 0.00000;
    -0.00001, 0.00002, -0.00000, -0.00001, 0.00013, 0.00002, -0.00001, -0.00057, -0.00007, 0.00008, -0.00005, 0.00098, 0.00086, 0.00038, 0.00133, -0.00000, 0.00073, 0.00033, 0.00027, 0.00048, -0.00003, 0.00004, 0.00112, 0.00070, 0.00155, 0.00003, 0.00000, -0.00007, -0.00004, -0.00001, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00054, -0.00006, -0.00022, 0.00000, 0.00000, 0.00000, -0.00007, -0.00005, 0.00000, 0.00000, 0.00000, 0.00000, -0.00002, 0.00000, -0.00015, 0.00005, -0.00002, 0.00020, -0.00000;
    -0.00000, 0.00000, -0.00001, -0.00000, 0.00000, 0.00000, 0.00000, -0.00001, -0.00000, 0.00000, -0.00000, 0.00003, 0.00004, 0.00000, 0.00003, 0.00000, -0.00001, -0.00000, 0.00001, 0.00000, -0.00000, 0.00000, 0.00003, 0.00001, 0.00003, 0.00000, 0.00000, -0.00000, -0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00001, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 0.00000, -0.00000, -0.00000, 0.00000, 0.00000;

    0.00000, 0.00000, 0.00001, 0.00000, -0.00000, -0.00000, -0.00000, 0.00002, 0.00000, -0.00001, 0.00001, -0.00005, -0.00010, 0.00000, -0.00010, -0.00000, 0.00001, -0.00001, -0.00001, -0.00002, 0.00000, 0.00000, -0.00005, -0.00003, -0.00007, -0.00000, 0.00000, 0.00001, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00002, 0.00001, -0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00000, -0.00001, 0.00001, -0.00001, -0.00000;
    -0.00000, 0.00000, -0.00001, -0.00000, -0.00001, -0.00000, 0.00000, 0.00005, -0.00001, 0.00001, 0.00000, -0.00008, -0.00002, 0.00005, -0.00007, -0.00000, -0.00008, -0.00009, -0.00002, 0.00000, -0.00000, -0.00000, -0.00007, -0.00005, -0.00004, -0.00000, 0.00000, 0.00000, 0.00001, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00002, 0.00000, 0.00002, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00001, 0.00000, 0.00001, -0.00002, 0.00000;
    -0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00001, -0.00000, -0.00000, -0.00000, -0.00006, -0.00002, 0.00000, -0.00001, -0.00000, 0.00001, -0.00000, -0.00000, -0.00001, -0.00000, -0.00000, -0.00004, 0.00000, -0.00001, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00001, -0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00000, -0.00000, 0.00001, 0.00000, -0.00000;







    0.00001, 0.00002, -0.00000, 0.00000, -0.00006, 0.00001, 0.00000, 0.00018, -0.00002, -0.00008, 0.00002, 0.00013, -0.00026, 0.00002, -0.00064, 0.00000, -0.00043, 0.00004, -0.00010, -0.00007, 0.00007, -0.00002, -0.00023, -0.00030, -0.00054, -0.00001, 0.00000, 0.00002, 0.00002, -0.00001, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00047, 0.00006, 0.00014, 0.00000, 0.00000, 0.00000, -0.00005, -0.00002, 0.00000, 0.00000, 0.00000, 0.00000, 0.00002, -0.00000, 0.00009, 0.00001, 0.00006, -0.00006, 0.00000;
    0.00000, 0.00000, -0.00001, 0.00000, -0.00001, 0.00000, 0.00000, 0.00002, -0.00001, -0.00003, -0.00000, 0.00004, -0.00007, -0.00002, -0.00020, 0.00000, 0.00004, -0.00006, -0.00002, -0.00007, -0.00000, 0.00001, 0.00001, -0.00004, -0.00006, -0.00000, 0.00000, 0.00001, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00006, 0.00005, -0.00001, 0.00000, 0.00000, 0.00000, 0.00001, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 0.00000, -0.00001, -0.00000, 0.00002, -0.00002, 0.00000;
    0.00000, 0.00000, -0.00003, -0.00001, -0.00003, -0.00001, 0.00000, 0.00012, -0.00003, 0.00004, 0.00001, -0.00005, 0.00005, 0.00008, -0.00011, 0.00000, -0.00042, -0.00015, -0.00003, 0.00000, 0.00003, -0.00002, -0.00025, -0.00019, -0.00022, 0.00000, 0.00000, -0.00000, 0.00002, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00014, -0.00001, 0.00013, 0.00000, 0.00000, 0.00000, -0.00003, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00001, 0.00000, 0.00008, 0.00000, 0.00000, -0.00005, 0.00000;



    -0.00000, -0.00001, -0.00002, -0.00001, -0.00002, -0.00001, 0.00000, 0.00002, -0.00002, -0.00000, 0.00000, -0.00025, -0.00000, -0.00010, -0.00003, -0.00000, 0.00007, -0.00006, -0.00004, -0.00023, -0.00003, 0.00001, -0.00001, 0.00003, -0.00007, 0.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00005, 0.00001, -0.00003, 0.00000, 0.00000, 0.00000, 0.00020, 0.00001, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 0.00001, -0.00000, -0.00000, -0.00005, -0.00000;
    -0.00000, -0.00001, 0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 0.00001, 0.00001, -0.00000, 0.00000, -0.00014, -0.00003, 0.00001, -0.00001, -0.00000, 0.00007, -0.00001, -0.00001, -0.00002, -0.00002, 0.00000, -0.00011, -0.00001, -0.00005, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00002, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00001, 0.00002, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00001, -0.00001, 0.00000, 0.00001, -0.00000;




    0.00000, -0.00000, 0.00000, -0.00000, -0.00000, 0.00000, -0.00000, 0.00002, -0.00001, 0.00000, 0.00000, -0.00014, 0.00000, 0.00005, -0.00004, -0.00000, -0.00005, -0.00003, -0.00000, 0.00000, -0.00000, -0.00001, -0.00012, -0.00000, -0.00002, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00002, -0.00000, 0.00001, 0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00002, 0.00000, 0.00001, 0.00000, 0.00001, -0.00001, 0.00000;
    0.00000, -0.00000, -0.00000, -0.00000, -0.00000, -0.00000, 0.00000, 0.00000, -0.00000, 0.00000, -0.00000, -0.00001, 0.00002, 0.00000, 0.00001, 0.00000, -0.00001, -0.00001, 0.00000, 0.00000, -0.00000, -0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00000, -0.00000;
    0.00000, 0.00000, -0.00003, -0.00001, -0.00002, -0.00001, -0.00000, 0.00008, -0.00002, 0.00002, -0.00000, -0.00015, 0.00005, 0.00001, -0.00009, 0.00000, -0.00046, -0.00017, -0.00002, -0.00006, 0.00001, -0.00003, -0.00015, -0.00010, -0.00015, 0.00000, 0.00000, -0.00000, 0.00001, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00009, -0.00001, 0.00008, 0.00000, 0.00000, 0.00000, 0.00001, -0.00001, 0.00000, 0.00000, 0.00000, 0.00000, 0.00001, 0.00000, 0.00009, 0.00001, -0.00000, -0.00005, -0.00000;
    -0.00000, 0.00000, 0.00003, -0.00001, -0.00001, -0.00001, 0.00000, 0.00002, -0.00001, 0.00001, -0.00000, 0.00001, 0.00018, 0.00005, 0.00013, 0.00000, -0.00006, 0.00004, -0.00000, 0.00009, -0.00001, 0.00000, 0.00002, 0.00001, 0.00005, -0.00000, 0.00000, -0.00001, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00001, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, -0.00001, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00001, 0.00008, 0.00001, 0.00000, 0.00000;
    0.00000, -0.00001, 0.00001, -0.00001, 0.00001, 0.00000, -0.00000, -0.00007, -0.00014, 0.00001, -0.00000, -0.00015, -0.00010, 0.00033, -0.00019, -0.00000, -0.00001, -0.00006, 0.00000, -0.00001, -0.00000, -0.00000, -0.00013, -0.00002, -0.00002, -0.00000, 0.00000, 0.00001, 0.00001, 0.00001, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00006, 0.00002, 0.00000, 0.00000, 0.00000, 0.00000, -0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00001, -0.00000, -0.00000, 0.00001, 0.00017, -0.00000, -0.00000;
    -0.00000, -0.00000, 0.00003, 0.00002, 0.00004, 0.00003, -0.00000, -0.00018, 0.00005, -0.00005, -0.00001, 0.00018, 0.00005, 0.00004, 0.00027, 0.00000, 0.00025, 0.00023, 0.00006, 0.00012, -0.00000, 0.00000, 0.00017, 0.00016, 0.00020, 0.00000, 0.00000, -0.00001, -0.00002, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00006, -0.00002, -0.00005, 0.00000, 0.00000, 0.00000, -0.00005, 0.00001, 0.00000, 0.00000, 0.00000, 0.00000, -0.00001, -0.00000, -0.00005, 0.00000, -0.00000, 0.00013, -0.00000;

];

/// A K-matrix parameterization for $`f_0`$ particles described by Kopf et al.[^1] with fixed couplings and mass poles
/// (free production couplings only).
///
/// [^1]: Kopf, B., Albrecht, M., Koch, H., Küßner, M., Pychy, J., Qin, X., & Wiedner, U. (2021). Investigation of the lightest hybrid meson candidate with a coupled-channel analysis of $`\bar{p}p`$-, $`\pi^- p`$- and $`\pi \pi`$-Data. The European Physical Journal C, 81(12). [doi:10.1140/epjc/s10052-021-09821-2](https://doi.org/10.1140/epjc/s10052-021-09821-2)
#[derive(Clone, Serialize, Deserialize)]
pub struct KopfKMatrixF0 {
    name: String,
    channel: usize,
    mass: Mass,
    constants: super::FixedKMatrix<5, 5>,
    couplings_real: [ParameterLike; 5],
    couplings_imag: [ParameterLike; 5],
    couplings_indices_real: [ParameterID; 5],
    couplings_indices_imag: [ParameterID; 5],
    ikc_cache_index: ComplexVectorID<5>,
    p_vec_cache_index: MatrixID<5, 5>,
}

impl KopfKMatrixF0 {
    /// Construct a new [`KopfKMatrixF0`] with the given name, production couplings, channel,
    /// and input mass.
    ///
    /// | Channel index | Channel |
    /// | ------------- | ------- |
    /// | 0             | $`\pi\pi`$ |
    /// | 1             | $`2\pi 2\pi`$ |
    /// | 2             | $`K\bar{K}`$ |
    /// | 3             | $`\eta\eta`$ |
    /// | 4             | $`\eta\eta'`$ |
    ///
    /// | Pole names |
    /// | ---------- |
    /// | $`f_0(500)`$ |
    /// | $`f_0(980)`$ |
    /// | $`f_0(1370)`$ |
    /// | $`f_0(1500)`$ |
    /// | $`f_0(1710)`$ |
    pub fn new(
        name: &str,
        couplings: [[ParameterLike; 2]; 5],
        channel: usize,
        mass: &Mass,
        seed: Option<usize>,
    ) -> Box<Self> {
        let mut couplings_real: [ParameterLike; 5] = array::from_fn(|_| ParameterLike::default());
        let mut couplings_imag: [ParameterLike; 5] = array::from_fn(|_| ParameterLike::default());
        for i in 0..5 {
            couplings_real[i] = couplings[i][0].clone();
            couplings_imag[i] = couplings[i][1].clone();
        }
        Self {
            name: name.to_string(),
            channel,
            mass: mass.clone(),
            constants: FixedKMatrix::new(
                G_F0,
                C_F0,
                vector![0.1349768, 2.0 * 0.1349768, 0.493677, 0.547862, 0.547862],
                vector![0.1349768, 2.0 * 0.1349768, 0.497611, 0.547862, 0.95778],
                M_F0,
                Some(AdlerZero {
                    s_0: 0.0091125,
                    s_norm: 1.0,
                }),
                0,
                COV_F0,
                seed,
            ),
            couplings_real,
            couplings_imag,
            couplings_indices_real: [ParameterID::default(); 5],
            couplings_indices_imag: [ParameterID::default(); 5],
            ikc_cache_index: ComplexVectorID::default(),
            p_vec_cache_index: MatrixID::default(),
        }
        .into()
    }
}

#[typetag::serde]
impl Amplitude for KopfKMatrixF0 {
    fn register(&mut self, resources: &mut Resources) -> Result<AmplitudeID, LadduError> {
        for i in 0..self.couplings_indices_real.len() {
            self.couplings_indices_real[i] = resources.register_parameter(&self.couplings_real[i]);
            self.couplings_indices_imag[i] = resources.register_parameter(&self.couplings_imag[i]);
        }
        self.ikc_cache_index = resources
            .register_complex_vector(Some(&format!("KopfKMatrixF0<{}> ikc_vec", self.name)));
        self.p_vec_cache_index =
            resources.register_matrix(Some(&format!("KopfKMatrixF0<{}> p_vec", self.name)));
        resources.register_amplitude(&self.name)
    }

    fn precompute(&self, event: &Event, cache: &mut Cache) {
        let s = self.mass.value(event).powi(2);
        cache.store_complex_vector(
            self.ikc_cache_index,
            self.constants.ikc_inv_vec(s, self.channel),
        );
        cache.store_matrix(self.p_vec_cache_index, self.constants.p_vec_constants(s));
    }

    fn compute(&self, parameters: &Parameters, _event: &Event, cache: &Cache) -> Complex<Float> {
        let betas = SVector::from_fn(|i, _| {
            Complex::new(
                parameters.get(self.couplings_indices_real[i]),
                parameters.get(self.couplings_indices_imag[i]),
            )
        });
        let ikc_inv_vec = cache.get_complex_vector(self.ikc_cache_index);
        let p_vec_constants = cache.get_matrix(self.p_vec_cache_index);
        FixedKMatrix::compute(&betas, &ikc_inv_vec, &p_vec_constants)
    }

    fn compute_gradient(
        &self,
        _parameters: &Parameters,
        _event: &Event,
        cache: &Cache,
        gradient: &mut DVector<Complex<Float>>,
    ) {
        let ikc_inv_vec = cache.get_complex_vector(self.ikc_cache_index);
        let p_vec_constants = cache.get_matrix(self.p_vec_cache_index);
        let internal_gradient = FixedKMatrix::compute_gradient(&ikc_inv_vec, &p_vec_constants);
        for i in 0..5 {
            if let ParameterID::Parameter(index) = self.couplings_indices_real[i] {
                gradient[index] = internal_gradient[i];
            }
            if let ParameterID::Parameter(index) = self.couplings_indices_imag[i] {
                gradient[index] = Complex::<Float>::I * internal_gradient[i];
            }
        }
    }
}

/// A fixed K-Matrix Amplitude for :math:`f_0` mesons
///
/// Parameters
/// ----------
/// name : str
///     The Amplitude name
/// couplings : list of list of laddu.ParameterLike
///     Each initial-state coupling (as a list of pairs of real and imaginary parts)
/// channel : int
///     The channel onto which the K-Matrix is projected
/// mass: laddu.Mass
///     The total mass of the resonance
/// seed: int, optional
///     Seed used to resample fixed K-matrix components according to their covariance
///     No resampling is done if seed is None
///
/// Returns
/// -------
/// laddu.Amplitude
///     An Amplitude which can be registered by a laddu.Manager
///
/// See Also
/// --------
/// laddu.Manager
///
/// Notes
/// -----
/// This Amplitude follows the prescription of [Kopf]_ and fixes the K-Matrix to data
/// from that paper, leaving the couplings to the initial state free
///
/// +---------------+-------------------+
/// | Channel index | Channel           |
/// +===============+===================+
/// | 0             | :math:`\pi\pi`    |
/// +---------------+-------------------+
/// | 1             | :math:`2\pi 2\pi` |
/// +---------------+-------------------+
/// | 2             | :math:`K\bar{K}`  |
/// +---------------+-------------------+
/// | 3             | :math:`\eta\eta`  |
/// +---------------+-------------------+
/// | 4             | :math:`\eta\eta'` |
/// +---------------+-------------------+
///
/// +-------------------+
/// | Pole names        |
/// +===================+
/// | :math:`f_0(500)`  |
/// +-------------------+
/// | :math:`f_0(980)`  |
/// +-------------------+
/// | :math:`f_0(1370)` |
/// +-------------------+
/// | :math:`f_0(1500)` |
/// +-------------------+
/// | :math:`f_0(1710)` |
/// +-------------------+
///
/// .. [Kopf] Kopf, B., Albrecht, M., Koch, H., Küßner, M., Pychy, J., Qin, X., & Wiedner, U. (2021). Investigation of the lightest hybrid meson candidate with a coupled-channel analysis of :math:`\bar{p}p`-, :math:`\pi^- p`- and :math:`\pi \pi`-Data. The European Physical Journal C, 81(12). `doi:10.1140/epjc/s10052-021-09821-2 <https://doi.org/10.1140/epjc/s10052-021-09821-2>`__
///
#[cfg(feature = "python")]
#[pyfunction(name = "KopfKMatrixF0", signature = (name, couplings, channel, mass, seed = None))]
pub fn py_kopf_kmatrix_f0(
    name: &str,
    couplings: [[PyParameterLike; 2]; 5],
    channel: usize,
    mass: PyMass,
    seed: Option<usize>,
) -> PyAmplitude {
    PyAmplitude(KopfKMatrixF0::new(
        name,
        array::from_fn(|i| array::from_fn(|j| couplings[i][j].clone().0)),
        channel,
        &mass.0,
        seed,
    ))
}

#[cfg(test)]
mod tests {
    // Note: These tests are not exhaustive, they only check one channel
    use std::sync::Arc;

    use super::*;
    use approx::assert_relative_eq;
    use laddu_core::{data::test_dataset, parameter, Manager, Mass};

    #[test]
    fn test_f0_evaluation() {
        let mut manager = Manager::default();
        let res_mass = Mass::new([2, 3]);
        let amp = KopfKMatrixF0::new(
            "f0",
            [
                [parameter("p0"), parameter("p1")],
                [parameter("p2"), parameter("p3")],
                [parameter("p4"), parameter("p5")],
                [parameter("p6"), parameter("p7")],
                [parameter("p8"), parameter("p9")],
            ],
            1,
            &res_mass,
            None,
        );
        let aid = manager.register(amp).unwrap();

        let dataset = Arc::new(test_dataset());
        let expr = aid.into();
        let model = manager.model(&expr);
        let evaluator = model.load(&dataset);

        let result = evaluator.evaluate(&[0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]);

        assert_relative_eq!(result[0].re, 0.26749455, epsilon = Float::EPSILON.sqrt());
        assert_relative_eq!(result[0].im, 0.72894511, epsilon = Float::EPSILON.sqrt());
    }

    #[test]
    fn test_f0_gradient() {
        let mut manager = Manager::default();
        let res_mass = Mass::new([2, 3]);
        let amp = KopfKMatrixF0::new(
            "f0",
            [
                [parameter("p0"), parameter("p1")],
                [parameter("p2"), parameter("p3")],
                [parameter("p4"), parameter("p5")],
                [parameter("p6"), parameter("p7")],
                [parameter("p8"), parameter("p9")],
            ],
            1,
            &res_mass,
            None,
        );
        let aid = manager.register(amp).unwrap();

        let dataset = Arc::new(test_dataset());
        let expr = aid.into();
        let model = manager.model(&expr);
        let evaluator = model.load(&dataset);

        let result =
            evaluator.evaluate_gradient(&[0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]);

        assert_relative_eq!(result[0][0].re, -0.0324912, epsilon = Float::EPSILON.cbrt());
        assert_relative_eq!(result[0][0].im, -0.0110734, epsilon = Float::EPSILON.cbrt());
        assert_relative_eq!(result[0][1].re, -result[0][0].im);
        assert_relative_eq!(result[0][1].im, result[0][0].re);
        assert_relative_eq!(result[0][2].re, 0.0241053, epsilon = Float::EPSILON.cbrt());
        assert_relative_eq!(result[0][2].im, 0.0079184, epsilon = Float::EPSILON.cbrt());
        assert_relative_eq!(result[0][3].re, -result[0][2].im);
        assert_relative_eq!(result[0][3].im, result[0][2].re);
        assert_relative_eq!(result[0][4].re, -0.0316345, epsilon = Float::EPSILON.cbrt());
        assert_relative_eq!(result[0][4].im, 0.0149155, epsilon = Float::EPSILON.cbrt());
        assert_relative_eq!(result[0][5].re, -result[0][4].im);
        assert_relative_eq!(result[0][5].im, result[0][4].re);
        assert_relative_eq!(result[0][6].re, 0.5838982, epsilon = Float::EPSILON.cbrt());
        assert_relative_eq!(result[0][6].im, 0.2071617, epsilon = Float::EPSILON.cbrt());
        assert_relative_eq!(result[0][7].re, -result[0][6].im);
        assert_relative_eq!(result[0][7].im, result[0][6].re);
        assert_relative_eq!(result[0][8].re, 0.0914546, epsilon = Float::EPSILON.cbrt());
        assert_relative_eq!(result[0][8].im, 0.0360771, epsilon = Float::EPSILON.cbrt());
        assert_relative_eq!(result[0][9].re, -result[0][8].im);
        assert_relative_eq!(result[0][9].im, result[0][8].re);
    }
}
