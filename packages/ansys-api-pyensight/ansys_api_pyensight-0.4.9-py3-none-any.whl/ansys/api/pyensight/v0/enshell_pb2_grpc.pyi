"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.pyensight.v0.enshell_pb2
import google.protobuf.empty_pb2
import grpc

class EnShellServiceStub:
    """mimic EnShell commands by always returning EnShellReturnEnum and any other value(s)"""
    def __init__(self, channel: grpc.Channel) -> None: ...
    exit_cleanly: grpc.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        google.protobuf.empty_pb2.Empty] = ...

    is_enshell_running: grpc.UnaryUnaryMultiCallable[
        ansys.api.pyensight.v0.enshell_pb2.EnShellRoleName,
        ansys.api.pyensight.v0.enshell_pb2.EnShellReturnString] = ...

    is_everyone_ready: grpc.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        ansys.api.pyensight.v0.enshell_pb2.EnShellReturnString] = ...

    run_command: grpc.UnaryUnaryMultiCallable[
        ansys.api.pyensight.v0.enshell_pb2.EnShellCommandLine,
        ansys.api.pyensight.v0.enshell_pb2.EnShellReturnString] = ...

    run_command_with_env: grpc.UnaryUnaryMultiCallable[
        ansys.api.pyensight.v0.enshell_pb2.EnShellCommandWithEnvLine,
        ansys.api.pyensight.v0.enshell_pb2.EnShellReturnString] = ...

    show_net: grpc.UnaryUnaryMultiCallable[
        google.protobuf.empty_pb2.Empty,
        ansys.api.pyensight.v0.enshell_pb2.EnShellReturnString] = ...


class EnShellServiceServicer(metaclass=abc.ABCMeta):
    """mimic EnShell commands by always returning EnShellReturnEnum and any other value(s)"""
    @abc.abstractmethod
    def exit_cleanly(self,
        request: google.protobuf.empty_pb2.Empty,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    @abc.abstractmethod
    def is_enshell_running(self,
        request: ansys.api.pyensight.v0.enshell_pb2.EnShellRoleName,
        context: grpc.ServicerContext,
    ) -> ansys.api.pyensight.v0.enshell_pb2.EnShellReturnString: ...

    @abc.abstractmethod
    def is_everyone_ready(self,
        request: google.protobuf.empty_pb2.Empty,
        context: grpc.ServicerContext,
    ) -> ansys.api.pyensight.v0.enshell_pb2.EnShellReturnString: ...

    @abc.abstractmethod
    def run_command(self,
        request: ansys.api.pyensight.v0.enshell_pb2.EnShellCommandLine,
        context: grpc.ServicerContext,
    ) -> ansys.api.pyensight.v0.enshell_pb2.EnShellReturnString: ...

    @abc.abstractmethod
    def run_command_with_env(self,
        request: ansys.api.pyensight.v0.enshell_pb2.EnShellCommandWithEnvLine,
        context: grpc.ServicerContext,
    ) -> ansys.api.pyensight.v0.enshell_pb2.EnShellReturnString: ...

    @abc.abstractmethod
    def show_net(self,
        request: google.protobuf.empty_pb2.Empty,
        context: grpc.ServicerContext,
    ) -> ansys.api.pyensight.v0.enshell_pb2.EnShellReturnString: ...


def add_EnShellServiceServicer_to_server(servicer: EnShellServiceServicer, server: grpc.Server) -> None: ...
