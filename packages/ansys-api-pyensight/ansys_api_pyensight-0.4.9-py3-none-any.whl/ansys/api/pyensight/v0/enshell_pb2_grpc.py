# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ansys.api.pyensight.v0 import enshell_pb2 as ansys_dot_api_dot_pyensight_dot_v0_dot_enshell__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class EnShellServiceStub(object):
    """mimic EnShell commands by always returning EnShellReturnEnum and any other value(s)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.exit_cleanly = channel.unary_unary(
                '/enshell.EnShellService/exit_cleanly',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.is_enshell_running = channel.unary_unary(
                '/enshell.EnShellService/is_enshell_running',
                request_serializer=ansys_dot_api_dot_pyensight_dot_v0_dot_enshell__pb2.EnShellRoleName.SerializeToString,
                response_deserializer=ansys_dot_api_dot_pyensight_dot_v0_dot_enshell__pb2.EnShellReturnString.FromString,
                )
        self.is_everyone_ready = channel.unary_unary(
                '/enshell.EnShellService/is_everyone_ready',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=ansys_dot_api_dot_pyensight_dot_v0_dot_enshell__pb2.EnShellReturnString.FromString,
                )
        self.run_command = channel.unary_unary(
                '/enshell.EnShellService/run_command',
                request_serializer=ansys_dot_api_dot_pyensight_dot_v0_dot_enshell__pb2.EnShellCommandLine.SerializeToString,
                response_deserializer=ansys_dot_api_dot_pyensight_dot_v0_dot_enshell__pb2.EnShellReturnString.FromString,
                )
        self.run_command_with_env = channel.unary_unary(
                '/enshell.EnShellService/run_command_with_env',
                request_serializer=ansys_dot_api_dot_pyensight_dot_v0_dot_enshell__pb2.EnShellCommandWithEnvLine.SerializeToString,
                response_deserializer=ansys_dot_api_dot_pyensight_dot_v0_dot_enshell__pb2.EnShellReturnString.FromString,
                )
        self.show_net = channel.unary_unary(
                '/enshell.EnShellService/show_net',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=ansys_dot_api_dot_pyensight_dot_v0_dot_enshell__pb2.EnShellReturnString.FromString,
                )


class EnShellServiceServicer(object):
    """mimic EnShell commands by always returning EnShellReturnEnum and any other value(s)
    """

    def exit_cleanly(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def is_enshell_running(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def is_everyone_ready(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def run_command(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def run_command_with_env(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def show_net(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EnShellServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'exit_cleanly': grpc.unary_unary_rpc_method_handler(
                    servicer.exit_cleanly,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'is_enshell_running': grpc.unary_unary_rpc_method_handler(
                    servicer.is_enshell_running,
                    request_deserializer=ansys_dot_api_dot_pyensight_dot_v0_dot_enshell__pb2.EnShellRoleName.FromString,
                    response_serializer=ansys_dot_api_dot_pyensight_dot_v0_dot_enshell__pb2.EnShellReturnString.SerializeToString,
            ),
            'is_everyone_ready': grpc.unary_unary_rpc_method_handler(
                    servicer.is_everyone_ready,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=ansys_dot_api_dot_pyensight_dot_v0_dot_enshell__pb2.EnShellReturnString.SerializeToString,
            ),
            'run_command': grpc.unary_unary_rpc_method_handler(
                    servicer.run_command,
                    request_deserializer=ansys_dot_api_dot_pyensight_dot_v0_dot_enshell__pb2.EnShellCommandLine.FromString,
                    response_serializer=ansys_dot_api_dot_pyensight_dot_v0_dot_enshell__pb2.EnShellReturnString.SerializeToString,
            ),
            'run_command_with_env': grpc.unary_unary_rpc_method_handler(
                    servicer.run_command_with_env,
                    request_deserializer=ansys_dot_api_dot_pyensight_dot_v0_dot_enshell__pb2.EnShellCommandWithEnvLine.FromString,
                    response_serializer=ansys_dot_api_dot_pyensight_dot_v0_dot_enshell__pb2.EnShellReturnString.SerializeToString,
            ),
            'show_net': grpc.unary_unary_rpc_method_handler(
                    servicer.show_net,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=ansys_dot_api_dot_pyensight_dot_v0_dot_enshell__pb2.EnShellReturnString.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'enshell.EnShellService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EnShellService(object):
    """mimic EnShell commands by always returning EnShellReturnEnum and any other value(s)
    """

    @staticmethod
    def exit_cleanly(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/enshell.EnShellService/exit_cleanly',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def is_enshell_running(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/enshell.EnShellService/is_enshell_running',
            ansys_dot_api_dot_pyensight_dot_v0_dot_enshell__pb2.EnShellRoleName.SerializeToString,
            ansys_dot_api_dot_pyensight_dot_v0_dot_enshell__pb2.EnShellReturnString.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def is_everyone_ready(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/enshell.EnShellService/is_everyone_ready',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ansys_dot_api_dot_pyensight_dot_v0_dot_enshell__pb2.EnShellReturnString.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def run_command(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/enshell.EnShellService/run_command',
            ansys_dot_api_dot_pyensight_dot_v0_dot_enshell__pb2.EnShellCommandLine.SerializeToString,
            ansys_dot_api_dot_pyensight_dot_v0_dot_enshell__pb2.EnShellReturnString.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def run_command_with_env(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/enshell.EnShellService/run_command_with_env',
            ansys_dot_api_dot_pyensight_dot_v0_dot_enshell__pb2.EnShellCommandWithEnvLine.SerializeToString,
            ansys_dot_api_dot_pyensight_dot_v0_dot_enshell__pb2.EnShellReturnString.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def show_net(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/enshell.EnShellService/show_net',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ansys_dot_api_dot_pyensight_dot_v0_dot_enshell__pb2.EnShellReturnString.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
