Metadata-Version: 2.4
Name: decentriq_dcr_compiler
Version: 0.19.1
Classifier: Programming Language :: Rust
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Requires-Dist: pydantic==2.*
License: LicenseRef-DECENTRIQ-Proprietary
Requires-Python: >=3.8
Description-Content-Type: text/markdown; charset=UTF-8; variant=GFM

# Decentriq DCR Compiler (DDC)

## Publish

Whenever you change something in the data model exposted by DDC, run the
following command:

```
# generates schema json files
cargo build

# if run for the first time
poetry install

# generates schema files in python source dir
poetry run poe codegen-schema

# generates typing files in python source dir
poetry run poe codegen-types
```

Commit the schema files s.t. they will be included when the package
is published through CI.

Commits need to be tagged with e.g. `decentriq_dcr_compiler-v0.1.0`
for the CI pipeline to build the artifact.

## Debug mode

1. Go into your venv (such as for example the poetry environment of the python
   tests)
2. `cd` into this directory
3. `maturin develop`
4. Maturin will now install the package into your env and the tests will use
   the latest version

