{"version":3,"file":"component---src-pages-deploy-tsx-553fddc644738ee1271c.js","mappings":"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","sources":["webpack://autogentstudio/./node_modules/lucide-react/dist/esm/icons/triangle-alert.js","webpack://autogentstudio/./node_modules/lucide-react/dist/esm/icons/refresh-ccw.js","webpack://autogentstudio/./node_modules/lucide-react/dist/esm/icons/copy.js","webpack://autogentstudio/./src/components/views/deploy/sidebar.tsx","webpack://autogentstudio/./src/components/views/deploy/types.tsx","webpack://autogentstudio/./src/components/views/deploy/guides/python.tsx","webpack://autogentstudio/./src/components/views/deploy/guides/docker.tsx","webpack://autogentstudio/./src/components/views/deploy/guides/guides.tsx","webpack://autogentstudio/./src/components/views/deploy/manager.tsx","webpack://autogentstudio/./src/pages/deploy.tsx","webpack://autogentstudio/./node_modules/lucide-react/dist/esm/icons/info.js","webpack://autogentstudio/./node_modules/lucide-react/dist/esm/icons/chevron-right.js","webpack://autogentstudio/./node_modules/lucide-react/dist/esm/icons/download.js"],"sourcesContent":["/**\n * @license lucide-react v0.460.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst TriangleAlert = createLucideIcon(\"TriangleAlert\", [\n  [\n    \"path\",\n    {\n      d: \"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3\",\n      key: \"wmoenq\"\n    }\n  ],\n  [\"path\", { d: \"M12 9v4\", key: \"juzpu7\" }],\n  [\"path\", { d: \"M12 17h.01\", key: \"p32p05\" }]\n]);\n\nexport { TriangleAlert as default };\n//# sourceMappingURL=triangle-alert.js.map\n","/**\n * @license lucide-react v0.460.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst RefreshCcw = createLucideIcon(\"RefreshCcw\", [\n  [\"path\", { d: \"M21 12a9 9 0 0 0-9-9 9.75 9.75 0 0 0-6.74 2.74L3 8\", key: \"14sxne\" }],\n  [\"path\", { d: \"M3 3v5h5\", key: \"1xhq8a\" }],\n  [\"path\", { d: \"M3 12a9 9 0 0 0 9 9 9.75 9.75 0 0 0 6.74-2.74L21 16\", key: \"1hlbsb\" }],\n  [\"path\", { d: \"M16 16h5v5\", key: \"ccwih5\" }]\n]);\n\nexport { RefreshCcw as default };\n//# sourceMappingURL=refresh-ccw.js.map\n","/**\n * @license lucide-react v0.460.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Copy = createLucideIcon(\"Copy\", [\n  [\"rect\", { width: \"14\", height: \"14\", x: \"8\", y: \"8\", rx: \"2\", ry: \"2\", key: \"17jyea\" }],\n  [\"path\", { d: \"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\", key: \"zix9uf\" }]\n]);\n\nexport { Copy as default };\n//# sourceMappingURL=copy.js.map\n","import React from \"react\";\nimport { Button, Tooltip } from \"antd\";\nimport {\n  PanelLeftClose,\n  PanelLeftOpen,\n  Book,\n  InfoIcon,\n  RefreshCcw,\n} from \"lucide-react\";\nimport type { Guide } from \"./types\";\n\ninterface DeploySidebarProps {\n  isOpen: boolean;\n  guides: Guide[];\n  currentGuide: Guide | null;\n  onToggle: () => void;\n  onSelectGuide: (guide: Guide) => void;\n  isLoading?: boolean;\n}\n\nexport const DeploySidebar: React.FC<DeploySidebarProps> = ({\n  isOpen,\n  guides,\n  currentGuide,\n  onToggle,\n  onSelectGuide,\n  isLoading = false,\n}) => {\n  // Render collapsed state\n  if (!isOpen) {\n    return (\n      <div className=\"h-full border-r border-secondary\">\n        <div className=\"p-2 -ml-2\">\n          <Tooltip title=\"Documentation\">\n            <button\n              onClick={onToggle}\n              className=\"p-2 rounded-md hover:bg-secondary hover:text-accent text-secondary transition-colors focus:outline-none focus:ring-2 focus:ring-accent focus:ring-opacity-50\"\n            >\n              <PanelLeftOpen strokeWidth={1.5} className=\"h-6 w-6\" />\n            </button>\n          </Tooltip>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"h-full border-r border-secondary\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between pt-0 p-4 pl-2 pr-2 border-b border-secondary\">\n        <div className=\"flex items-center gap-2\">\n          {/* <Book className=\"w-4 h-4\" /> */}\n          <span className=\"text-primary font-medium\">Guides</span>\n          {/* <span className=\"px-2 py-0.5 text-xs bg-accent/10 text-accent rounded\">\n            {guides.length}\n          </span> */}\n        </div>\n        <Tooltip title=\"Close Sidebar\">\n          <button\n            onClick={onToggle}\n            className=\"p-2 rounded-md hover:bg-secondary hover:text-accent text-secondary transition-colors focus:outline-none focus:ring-2 focus:ring-accent focus:ring-opacity-50\"\n          >\n            <PanelLeftClose strokeWidth={1.5} className=\"h-6 w-6\" />\n          </button>\n        </Tooltip>\n      </div>\n\n      {/* Loading State */}\n      {isLoading && (\n        <div className=\"p-4\">\n          <RefreshCcw className=\"w-4 h-4 inline-block animate-spin\" />\n        </div>\n      )}\n\n      {/* Empty State */}\n      {!isLoading && guides.length === 0 && (\n        <div className=\"p-2 m-2 text-center text-secondary text-sm border border-dashed rounded\">\n          <InfoIcon className=\"w-4 h-4 inline-block mr-1.5 -mt-0.5\" />\n          No deployment guide available\n        </div>\n      )}\n\n      {/* Guides List */}\n      <div className=\"overflow-y-auto h-[calc(100%-64px)] mt-4\">\n        {guides.map((guide) => (\n          <div key={guide.id} className=\"relative\">\n            <div\n              className={`absolute top-1 left-0.5 z-50 h-[calc(100%-8px)]\n               w-1 bg-opacity-80 rounded ${\n                 currentGuide?.id === guide.id ? \"bg-accent\" : \"bg-tertiary\"\n               }`}\n            />\n            <div\n              className={`group ml-1 flex flex-col p-2 rounded-l cursor-pointer hover:bg-secondary ${\n                currentGuide?.id === guide.id\n                  ? \"border-accent bg-secondary\"\n                  : \"border-transparent\"\n              }`}\n              onClick={() => onSelectGuide(guide)}\n            >\n              {/* Guide Title */}\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm truncate\">{guide.title}</span>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","export interface Guide {\n  id: string;\n  title: string;\n  type: \"python\" | \"docker\" | \"cloud\";\n}\n\nexport const defaultGuides: Guide[] = [\n  {\n    id: \"python-setup\",\n    title: \"Python\",\n    type: \"python\",\n  },\n  {\n    id: \"docker-setup\",\n    title: \"Docker\",\n    type: \"docker\",\n  },\n  // {\n  //   id: \"cloud-deploy\",\n  //   title: \"Cloud\",\n  //   type: \"cloud\",\n  // },\n];\n","import React from \"react\";\nimport { Alert } from \"antd\";\nimport { CodeSection, copyToClipboard } from \"./guides\";\nimport { Download } from \"lucide-react\";\n\nconst PythonGuide: React.FC = () => {\n  return (\n    <div className=\"\">\n      <h1 className=\"tdext-2xl font-bold mb-6\">\n        Using AutoGen Studio Teams in Python Code and REST API\n      </h1>\n\n      <Alert\n        className=\"mb-6\"\n        message=\"Prerequisites\"\n        description={\n          <ul className=\"list-disc pl-4 mt-2 space-y-1\">\n            <li>AutoGen Studio installed</li>\n          </ul>\n        }\n        type=\"info\"\n      />\n\n      <div className=\"my-3 text-sm\">\n        {\" \"}\n        You can reuse the declarative specifications of agent teams created in\n        AutoGen studio in your python application by using the TeamManager\n        class. . In TeamBuilder, select a team configuration and click download.{\" \"}\n        <Download className=\"h-4 w-4 inline-block\" />{\" \"}\n      </div>\n\n      {/* Basic Usage */}\n      <CodeSection\n        title=\"1. Build Your Team in Python, Export as JSON\"\n        description=\"Here is an example of building an Agent Team in python and exporting it as a JSON file.\"\n        code={`\nfrom autogen_agentchat.agents import AssistantAgent\nfrom autogen_agentchat.teams import RoundRobinGroupChat\nfrom autogen_agentchat.ui import Console\nfrom autogen_ext.models.openai import OpenAIChatCompletionClient\nfrom autogen_agentchat.conditions import  TextMentionTermination\n \nagent = AssistantAgent(\n        name=\"weather_agent\",\n        model_client=OpenAIChatCompletionClient(\n            model=\"gpt-4o-mini\", \n        ), \n    ) \nagent_team = RoundRobinGroupChat([agent], termination_condition=TextMentionTermination(\"TERMINATE\"))\nconfig = agent_team.dump_component()\nprint(config.model_dump_json())`}\n        onCopy={copyToClipboard}\n      />\n\n      {/* Installation Steps */}\n      <div className=\"space-y-6\">\n        {/* Basic Usage */}\n        <CodeSection\n          title=\"2. Run a Team in Python\"\n          description=\"Here's a simple example of using the TeamManager class from AutoGen Studio in your python code.\"\n          code={`\nfrom autogenstudio.teammanager import TeamManager\n\n# Initialize the TeamManager\nmanager = TeamManager()\n\n# Run a task with a specific team configuration\nresult = await manager.run(\ntask=\"What is the weather in New York?\",\nteam_config=\"team.json\"\n)\nprint(result)`}\n          onCopy={copyToClipboard}\n        />\n\n        <CodeSection\n          title=\"3. Serve a Team as a REST API\"\n          description=<div>\n            AutoGen Studio offers a convenience CLI command to serve a team as a\n            REST API endpoint.{\" \"}\n          </div>\n          code={`\nautogenstudio serve --team path/to/team.json --port 8084  \n          `}\n          onCopy={copyToClipboard}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default PythonGuide;\n","import React from \"react\";\nimport { Alert } from \"antd\";\nimport { CodeSection, copyToClipboard } from \"./guides\";\n\nconst DockerGuide: React.FC = () => {\n  return (\n    <div className=\"max-w-4xl\">\n      <h1 className=\"tdext-2xl font-bold mb-6\">Docker Container Setup</h1>\n\n      <Alert\n        className=\"mb-6\"\n        message=\"Prerequisites\"\n        description={\n          <ul className=\"list-disc pl-4 mt-2 space-y-1\">\n            <li>Docker installed on your system</li>\n          </ul>\n        }\n        type=\"info\"\n      />\n      <CodeSection\n        title=\"1. Dockerfile\"\n        description=<div>\n          AutoGen Studio provides a\n          <a\n            href=\"https://github.com/microsoft/autogen/blob/main/python/packages/autogen-studio/Dockerfile\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"text-accent underline px-1\"\n          >\n            Dockerfile\n          </a>\n          that you can use to build your Docker container.{\" \"}\n        </div>\n        code={`FROM python:3.10-slim\n\nWORKDIR /code\n\nRUN pip install -U gunicorn autogenstudio\n\nRUN useradd -m -u 1000 user\nUSER user\nENV HOME=/home/user \n    PATH=/home/user/.local/bin:$PATH \n    AUTOGENSTUDIO_APPDIR=/home/user/app\n\nWORKDIR $HOME/app\n\nCOPY --chown=user . $HOME/app\n\nCMD gunicorn -w $((2 * $(getconf _NPROCESSORS_ONLN) + 1)) --timeout 12600 -k uvicorn.workers.UvicornWorker autogenstudio.web.app:app --bind \"0.0.0.0:8081\"`}\n        onCopy={copyToClipboard}\n      />\n\n      {/* Build and Run */}\n      <CodeSection\n        title=\"2. Build and Run\"\n        description=\"Build and run your Docker container:\"\n        code={`docker build -t autogenstudio .\ndocker run -p 8081:8081 autogenstudio`}\n        onCopy={copyToClipboard}\n      />\n    </div>\n  );\n};\n\nexport default DockerGuide;\n","import React from \"react\";\nimport { Copy } from \"lucide-react\";\nimport { Guide } from \"../types\";\nimport PythonGuide from \"./python\";\nimport DockerGuide from \"./docker\";\n\nimport { MonacoEditor } from \"../../monaco\";\n\ninterface GuideContentProps {\n  guide: Guide;\n}\n\nexport const copyToClipboard = (text: string) => {\n  navigator.clipboard.writeText(text);\n};\nexport const GuideContent: React.FC<GuideContentProps> = ({ guide }) => {\n  // Render different content based on guide type and id\n  switch (guide.id) {\n    case \"python-setup\":\n      return <PythonGuide />;\n\n    case \"docker-setup\":\n      return <DockerGuide />;\n\n    // Add more cases for other guides...\n\n    default:\n      return (\n        <div className=\"text-secondary\">\n          A Guide with the title <strong>{guide.title}</strong> is work in\n          progress!\n        </div>\n      );\n  }\n};\n\ninterface CodeSectionProps {\n  title: string;\n  description?: string | React.ReactNode;\n  code?: string;\n  onCopy: (text: string) => void;\n  language?: string;\n}\n\nconst editorRef = React.createRef<any>();\n\nexport const CodeSection: React.FC<CodeSectionProps> = ({\n  title,\n  description,\n  code,\n  onCopy,\n  language = \"python\",\n}) => (\n  <section className=\"mt-6 bg-seco\">\n    <h2 className=\"text-md font-semibold mb-3\">{title}</h2>\n    {description && <div className=\"  mb-3\">{description}</div>}\n    {code && (\n      <div className=\"relative bg-secondary text-sm p-4 rounded overflow-auto scroll h-72\">\n        <MonacoEditor language={language} editorRef={editorRef} value={code} />\n        <button\n          onClick={() => onCopy(code)}\n          className=\"absolute right-2 top-2 p-2  bg-secondary hover:bg-primary rounded-md\"\n        >\n          <Copy className=\"w-4 h-4 hover:text-accent transition duration-100\" />\n        </button>\n      </div>\n    )}\n  </section>\n);\n\nexport default GuideContent;\n","import React, { useState, useEffect } from \"react\";\nimport { ChevronRight, TriangleAlert } from \"lucide-react\";\nimport { DeploySidebar } from \"./sidebar\";\nimport { Guide, defaultGuides } from \"./types\";\nimport { GuideContent } from \"./guides/guides\";\n\nexport const DeployManager: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [guides, setGuides] = useState<Guide[]>(defaultGuides);\n  const [currentGuide, setCurrentGuide] = useState<Guide | null>(null);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(() => {\n    if (typeof window !== \"undefined\") {\n      const stored = localStorage.getItem(\"deploySidebar\");\n      return stored !== null ? JSON.parse(stored) : true;\n    }\n    return true;\n  });\n\n  // Persist sidebar state\n  useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      localStorage.setItem(\"deploySidebar\", JSON.stringify(isSidebarOpen));\n    }\n  }, [isSidebarOpen]);\n\n  // Set first guide as current if none selected\n  useEffect(() => {\n    if (!currentGuide && guides.length > 0) {\n      setCurrentGuide(guides[0]);\n    }\n  }, [guides, currentGuide]);\n\n  return (\n    <div className=\"relative    flex h-full w-full\">\n      {/* Sidebar */}\n      <div\n        className={`absolute  left-0 top-0 h-full transition-all duration-200 ease-in-out ${\n          isSidebarOpen ? \"w-64\" : \"w-12\"\n        }`}\n      >\n        <DeploySidebar\n          isOpen={isSidebarOpen}\n          guides={guides}\n          currentGuide={currentGuide}\n          onToggle={() => setIsSidebarOpen(!isSidebarOpen)}\n          onSelectGuide={setCurrentGuide}\n          isLoading={isLoading}\n        />\n      </div>\n\n      {/* Main Content */}\n      <div\n        className={`flex-1 transition-all max-w-5xl  -mr-6 duration-200 ${\n          isSidebarOpen ? \"ml-64\" : \"ml-12\"\n        }`}\n      >\n        <div className=\"p-4 pt-2\">\n          {/* Breadcrumb */}\n          <div className=\"flex items-center gap-2 mb-4 text-sm\">\n            <span className=\"text-primary font-medium\">Deploy</span>\n            {currentGuide && (\n              <>\n                <ChevronRight className=\"w-4 h-4 text-secondary\" />\n                <span className=\"text-secondary\">{currentGuide.title}</span>\n              </>\n            )}\n          </div>\n          <div className=\"rounded border border-secondary border-dashed p-2 text-sm mb-4\">\n            <TriangleAlert className=\"w-4 h-4 inline-block mr-2 -mt-1 text-secondary \" />{\" \"}\n            The deployment guide section is work in progress.\n          </div>\n          {/* Content Area */}\n          {currentGuide ? (\n            <GuideContent guide={currentGuide} />\n          ) : (\n            <div className=\"flex items-center justify-center h-[calc(100vh-190px)] text-secondary\">\n              Select a guide from the sidebar to get started\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DeployManager;\n","import * as React from \"react\";\nimport Layout from \"../components/layout\";\nimport { graphql } from \"gatsby\";\nimport DeployManager from \"../components/views/deploy/manager\";\n\n// markup\nconst DeployPage = ({ data }: any) => {\n  return (\n    <Layout meta={data.site.siteMetadata} title=\"Home\" link={\"/deploy\"}>\n      <main style={{ height: \"100%\" }} className=\" h-full \">\n        <DeployManager />\n      </main>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query HomePageQuery {\n    site {\n      siteMetadata {\n        description\n        title\n      }\n    }\n  }\n`;\n\nexport default DeployPage;\n","/**\n * @license lucide-react v0.460.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Info = createLucideIcon(\"Info\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"M12 16v-4\", key: \"1dtifu\" }],\n  [\"path\", { d: \"M12 8h.01\", key: \"e9boi3\" }]\n]);\n\nexport { Info as default };\n//# sourceMappingURL=info.js.map\n","/**\n * @license lucide-react v0.460.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ChevronRight = createLucideIcon(\"ChevronRight\", [\n  [\"path\", { d: \"m9 18 6-6-6-6\", key: \"mthhwq\" }]\n]);\n\nexport { ChevronRight as default };\n//# sourceMappingURL=chevron-right.js.map\n","/**\n * @license lucide-react v0.460.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Download = createLucideIcon(\"Download\", [\n  [\"path\", { d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\", key: \"ih7n3h\" }],\n  [\"polyline\", { points: \"7 10 12 15 17 10\", key: \"2ggqvy\" }],\n  [\"line\", { x1: \"12\", x2: \"12\", y1: \"15\", y2: \"3\", key: \"1vk2je\" }]\n]);\n\nexport { Download as default };\n//# sourceMappingURL=download.js.map\n"],"names":["TriangleAlert","d","key","RefreshCcw","Copy","width","height","x","y","rx","ry","DeploySidebar","_ref","isOpen","guides","currentGuide","onToggle","onSelectGuide","isLoading","React","className","Tooltip","title","onClick","PanelLeftClose","strokeWidth","length","InfoIcon","map","guide","id","PanelLeftOpen","defaultGuides","type","PythonGuide","Alert","message","description","Download","CodeSection","code","onCopy","copyToClipboard","DockerGuide","href","target","rel","text","navigator","clipboard","writeText","GuideContent","editorRef","_ref2","language","MonacoEditor","value","DeployManager","setIsLoading","useState","setGuides","setCurrentGuide","isSidebarOpen","setIsSidebarOpen","window","stored","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","ChevronRight","data","Layout","meta","site","siteMetadata","link","style","Info","cx","cy","r","points","x1","x2","y1","y2"],"sourceRoot":""}