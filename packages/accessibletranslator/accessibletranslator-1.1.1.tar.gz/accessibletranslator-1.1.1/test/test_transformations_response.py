# coding: utf-8

"""
    AccessibleTranslator SDK API

    Official SDK API for AccessibleTranslator - automated cognitive accessibility

    The version of the OpenAPI document: 1.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from accessibletranslator.models.transformations_response import TransformationsResponse

class TestTransformationsResponse(unittest.TestCase):
    """TransformationsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TransformationsResponse:
        """Test TransformationsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TransformationsResponse`
        """
        model = TransformationsResponse()
        if include_optional:
            return TransformationsResponse(
                transformations = [
                    accessibletranslator.models.transformation_info.TransformationInfo(
                        name = '', 
                        description = '', )
                    ],
                total_transformations = 56,
                functions = [
                    accessibletranslator.models.function_info.FunctionInfo(
                        name = '', 
                        description = '', )
                    ],
                total_functions = 56,
                usage_note = ''
            )
        else:
            return TransformationsResponse(
                transformations = [
                    accessibletranslator.models.transformation_info.TransformationInfo(
                        name = '', 
                        description = '', )
                    ],
                total_transformations = 56,
                functions = [
                    accessibletranslator.models.function_info.FunctionInfo(
                        name = '', 
                        description = '', )
                    ],
                total_functions = 56,
                usage_note = '',
        )
        """

    def testTransformationsResponse(self):
        """Test TransformationsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
