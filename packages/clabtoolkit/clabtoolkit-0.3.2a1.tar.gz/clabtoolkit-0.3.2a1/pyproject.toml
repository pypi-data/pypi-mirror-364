[build-system]
requires = ["setuptools>=68.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "clabtoolkit"
version = "0.3.2a1"
description = "A comprehensive toolkit for neuroimaging data processing and analysis"
authors = [
    {name = "Yasser Alem치n-G칩mez", email = "yasseraleman@protonmail.com"}
]
maintainers = [
    {name = "Yasser Alem치n-G칩mez", email = "yasseraleman@protonmail.com"}
]
license = {text = "Apache-2.0"}
readme = "README.rst"
requires-python = ">=3.9"
keywords = ["neuroimaging", "image-processing", "bids", "freesurfer", "connectivity"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Scientific/Engineering :: Image Processing",
]
dependencies = [
    "nibabel>=5.3.2",
    "numpy>=1.23.5",
    "pandas>=2.2.3",
    "pydicom>=3.0.1",
    "rich>=13.9.4",
    "scipy>=1.14.1",
    "setuptools>=68.0.0",
    "scikit-image>=0.22.0",
]

[project.urls]
Homepage = "https://github.com/connectomicslab/clabtoolkit"
Repository = "https://github.com/connectomicslab/clabtoolkit"
Documentation = "https://clabtoolkit.readthedocs.io"
"Bug Tracker" = "https://github.com/connectomicslab/clabtoolkit/issues"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
    "tox>=4.0.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
]

[tool.setuptools]
packages = ["clabtoolkit", "clabtoolkit.config"]
include-package-data = true

[tool.setuptools.package-data]
clabtoolkit = ["config/*"]

[tool.ruff]
line-length = 88
target-version = "py39"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["S101", "D"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["clabtoolkit"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
namespace_packages = true
explicit_package_bases = true

[[tool.mypy.overrides]]
module = [
    "nibabel.*",
    "pydicom.*",
    "skimage.*",
]
ignore_missing_imports = true

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py39, py310, py311, py312, lint, type-check
isolated_build = true

[testenv]
deps = pytest>=7.0.0
       pytest-cov>=4.0.0
commands = pytest {posargs}

[testenv:lint]
deps = ruff>=0.1.0
       black>=23.0.0
commands = 
    ruff check clabtoolkit tests
    black --check clabtoolkit tests

[testenv:type-check]
deps = mypy>=1.5.0
commands = mypy clabtoolkit

[testenv:docs]
deps = sphinx>=7.0.0
       sphinx-rtd-theme>=1.3.0
commands = sphinx-build -W -b html docs docs/_build/html
"""