[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mlx-gui"
version = "1.2.4"
description = "A lightweight RESTful wrapper around Apple's MLX engine for dynamically loading and serving MLX-compatible models"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "GPL-3.0"}
authors = [
    {name = "Matt Rogers", email = "matt@matthewrogers.org"}
]
keywords = ["mlx", "apple", "machine-learning", "gui", "rest-api"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "mlx-lm>=0.25.1",
    "sqlalchemy>=2.0.0",
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.0.0",
    "psutil>=5.9.0",
    "httpx>=0.25.0",
    "huggingface-hub>=0.19.0",
    "python-multipart>=0.0.6",
    "aiofiles>=23.2.0",
    "click>=8.1.0",
    "rich>=13.6.0",
    "typer>=0.9.0",
    "appdirs>=1.4.4",
    "mlx-whisper>=0.4.0",
    "mlx-audio>=0.1.0",
    "mlx-vlm>=0.1.0",
    "mlx_embedding_models>=0.0.3",
    "mlx_embeddings>=0.0.7",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.9.0",
    "ruff>=0.1.0",
    "mypy>=1.6.0",
    "pre-commit>=3.5.0",
]

gui = [
    "tkinter",  # Usually comes with Python
    "pillow>=10.0.0",
]

tray = [
    "pystray>=0.19.0",
    "pillow>=10.0.0",
]

app = [
    "pyinstaller>=6.0.0",
    "rumps>=0.4.0",
    "pillow>=10.0.0",
]

audio = [
    "mlx-whisper>=0.4.0",
    "mlx-audio>=0.1.0",
]

vision = [
    "mlx-vlm>=0.1.0",
    "pillow>=10.0.0",
]

[project.scripts]
mlx-gui = "mlx_gui.cli:main"

[project.urls]
Homepage = "https://github.com/ramborogers/mlx-gui"
Repository = "https://github.com/ramborogers/mlx-gui"
Issues = "https://github.com/ramborogers/mlx-gui/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/mlx_gui"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/README.md",
    "/LICENSE",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short"
asyncio_mode = "auto"