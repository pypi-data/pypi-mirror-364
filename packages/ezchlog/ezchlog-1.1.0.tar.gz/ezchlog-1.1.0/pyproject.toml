[project]
name = "ezchlog"
version = "1.1.0"
description = "Easy git branch friendly changelogs"
authors = [
  { name = "Cyrille Pontvieux", email = "cyrille@enialis.net" },
]
license = { text = "MIT License" }
readme = "README.md"
keywords = ["changelog", "release-notes", "git", "no-conflict", "easy"]
# https://pypi.org/classifiers/
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Environment :: Console",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Topic :: Documentation",
  "Topic :: Software Development :: Documentation",
  "Topic :: Text Processing :: Markup :: Markdown",
  "Typing :: Typed",
]
requires-python = ">=3.9"
dependencies = [
  "tomli; python_version < '3.11'",
]

[project.urls]
# https://github.com/pypi/warehouse/blob/main/warehouse/templates/packaging/detail.html#L20
"Repository" = "https://gitlab.com/jrdasm/ezchlog"
"Documentation" = "https://gitlab.com/jrdasm/ezchlog/-/blob/master/README.md"
"Bug Tracker" = "https://gitlab.com/jrdasm/ezchlog/-/issues"
"Merge Requests" = "https://gitlab.com/jrdasm/ezchlog/-/merge_requests"
"Changelog" = "https://gitlab.com/jrdasm/ezchlog/-/blob/master/CHANGELOG.md"
"Contributing" = "https://gitlab.com/jrdasm/ezchlog/-/blob/master/CONTRIBUTING.md"

[project.scripts]
ezchlog = 'ezchlog:main'

[tool.hatch.build.targets.sdist]
exclude = [
  "*.rs",
  "Cargo.*",
]
[tool.hatch.build.targets.wheel.force-include]
"README.md" = "ezchlog/README.md"
"CHANGELOG.md" = "ezchlog/CHANGELOG.md"

[tool.uv]
dev-dependencies = [
  "poethepoet",
  "ruff",
  "mypy",
  "pytest",
  "pytest-cov",
  "pytest-html",
]

[tool.poe.tasks]
lint.help = "Run all python linters"
lint.sequence = ["lint_ruff ${FILE_PATHS}", "lint_mypy ${FILE_PATHS}"]
lint.args = [{ name = "FILE_PATHS", positional = true, multiple = true }]
lint.ignore_fail = "return_non_zero"
lint_ruff.help = "Run ruff to check for linter errors"
lint_ruff.cmd = "ruff check ${FILE_PATHS}"
lint_ruff.args = [{ name = "FILE_PATHS", positional = true, multiple = true, default = "." }]
lint_mypy.help = "Run mypy to check fot typing errors"
lint_mypy.cmd = "mypy ${FILE_PATHS}"
lint_mypy.args = [{ name = "FILE_PATHS", positional = true, multiple = true, default = "." }]
test.help = "Run python tests"
test.cmd = "pytest -v"
test_quick.help = "Run a python test quickly"
test_quick.cmd = "pytest --no-cov --no-header -xsvv ${FILE_PATHS}"
test_quick.args = [{ name = "FILE_PATHS", positional = true, multiple = true, default = "" }]
version.help = "Show version"
version.interpreter = "python"
version.shell = """
from tomllib import load
f=open('pyproject.toml', 'rb')
print(load(f)['project']['version'])
"""
next_version.help = "Get the next version"
next_version.args = [{ name = "HOW", positional = true, required = true, help = "Should be on of major, minor or patch" }]
# https://github.com/astral-sh/uv/issues/6298
next_version.cmd = "python .next_version.py ${HOW}"
set_version.help = "Set the version"
set_version.args = [{ name = "VERSION", positional = true, required = true }]
set_version.shell = """
for f in pyproject.toml Cargo.toml; do
  sed -ri "/^version = /s|=.*|= \\"${VERSION}\\"|" $f
done
sed -ri "/^name = \\"ezchlog\\"/,/^version =/s|^version =.*|version = \\"${VERSION}\\"|" Cargo.lock
"""
bump_version.help = "Update version"
bump_version.args = [{ name = "HOW", positional = true, required = true, help = "Should be on of major, minor or patch" }]
bump_version.shell = """
poe set_version $(poe -q next_version ${HOW})
"""

[tool.ruff]
line-length = 160
target-version = "py39"

[tool.ruff.lint]
preview = true
# https://docs.astral.sh/ruff/rules
select = [
  "F", # pyflake8
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "I", # isort
  "N", # pep8-naming
  "U", # pyupgrade, avoid using deprecated syntax
  "FBT", # boolean trap in function def/call
  "B", # bugbear, avoid non-sense statements
  "COM", # commas
  "DTZ", # datetime timezone
  "PTH", # prefer pathlib
  "LOG", # logging
  "T100", # debugger
  "T201", # print
  "T203", # pprint
  "FIX", # lines with TODO, FIXME, XXX and HACK
  "Q001", "Q002", "Q004", # double quotes for multiline and pydoc + check for unnecessary escape
]
ignore = [
  "N806", # non-lowercase-variable-in-function
  "COM812", # conflict with ruff formatter
]
[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true
[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true
force-single-line = true
relative-imports-order = "closest-to-furthest"
split-on-trailing-comma = false
[tool.ruff.format]
quote-style = "preserve"
line-ending = "lf"

[tool.pytest.ini_options]
pythonpath = "." # indicate the root path
addopts = ["--cov"]
[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "*/__init__.py"]
branch = true
relative_files = true
[tool.coverage.report]
precision = 2
[tool.coverage.xml]
output = "reports/coverage.xml"
[tool.coverage.html]
directory = "reports/coverage"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
