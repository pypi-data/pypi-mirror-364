[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "llm-cache-pro"
version = "0.1.0"
description = "A drop-in, model-agnostic cache for Large Language Model API calls"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Sherin Joseph Roy", email = "sherin.joseph2217@gmail.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
]
requires-python = ">=3.10"
dependencies = [
    "typer[all]>=0.9.0",
    "rich>=13.0.0",
    "sqlmodel>=0.0.8",
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.0.0",
    "orjson>=3.9.0",
    "zstandard>=0.21.0",
    "cryptography>=41.0.0",
    "python-multipart>=0.0.6",
    "redis>=5.0.0",
    "toml>=0.10.2",
    "httpx>=0.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "pre-commit>=3.5.0",
]

[project.scripts]
llm-cache = "llm_cache.cli:app"

[project.urls]
Homepage = "https://sherin-sef-ai.github.io/"
Repository = "https://github.com/Sherin-SEF-AI/llm-cache.git"
Documentation = "https://github.com/Sherin-SEF-AI/llm-cache"
"Bug Tracker" = "https://github.com/Sherin-SEF-AI/llm-cache/issues"

[tool.hatch.build.targets.wheel]
packages = ["llm_cache"]

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
target-version = ['py310']
line-length = 88

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=llm_cache",
    "--cov-report=term-missing",
    "--cov-report=html",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["llm_cache"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 