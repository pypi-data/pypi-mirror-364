[tool.poetry]
name = "mcp-testing-sensei"
version = "0.1.5"
description = "An MCP server to enforce/guide agentic coding tools to use general unit testing standards."
authors = ["Kourtni Marshall"]
readme = "README.md"
homepage = "https://github.com/kourtni/mcp-testing-sensei"
repository = "https://github.com/kourtni/mcp-testing-sensei"
keywords = ["mcp", "testing", "linter", "sensei", "unit-testing"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
packages = [{include = "*.py"}]

[tool.poetry.dependencies]
python = ">=3.10"
mcp = "^1.0.0"

[tool.poetry.scripts]
mcp-testing-sensei = "mcp_server:main"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0"
pre-commit = "^3.0"
ruff = "^0.1.0"
mypy = "^1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
pythonpath = ["."]
addopts = "--strict-markers"

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    "E",  # Error
    "W",  # Warning
    "F",  # Pyflakes
    "I",  # isort
    "D",  # pydocstyle
]

ignore = [
    "D105", # Missing docstring in magic method
    "D107", # Missing docstring in __init__
    "D406", # Section name should end with a colon
    "D407", # Missing dashed underline after section header
    "D413", # Missing blank line after last section
]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
