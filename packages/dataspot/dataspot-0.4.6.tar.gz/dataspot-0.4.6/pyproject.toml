[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["dataspot"]

[project]
name = "dataspot"
dynamic = ["version"]
description = "Find data concentration patterns and dataspots. Built for fraud detection and risk analysis."
readme = "README.md"
license = "MIT"
requires-python = ">=3.9"
authors = [{ name = "Elio RincÃ³n", email = "elio@frauddi.com" }]
keywords = [
    "fraud-detection",
    "data-analysis",
    "pattern-mining",
    "anomaly-detection",
    "dataspots",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Security",
]
dependencies = []

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-timeout>=2.0",
    "black>=23.0",
    "ruff>=0.1.0",
    "isort>=6.0",
]

[project.urls]
Homepage = "https://github.com/frauddi/dataspot"
Repository = "https://github.com/frauddi/dataspot"
"Bug Tracker" = "https://github.com/frauddi/dataspot/issues"

[tool.hatch.version]
path = "dataspot/__init__.py"

[tool.black]
line-length = 88

[tool.ruff]
# Enable rules by category:
lint.select = [
    "E", # pycodestyle errors
    "F", # pyflakes
    "W", # pycodestyle warnings
    "I", # isort
    "N", # pep8-naming
    "D", # pydocstyle
    "B", # flake8-bugbear
    "C", # flake8-comprehensions
]
# Ignore specific rules:
lint.ignore = [
    "E501", # line length - handled by black
]
# Same as Black
line-length = 88
target-version = "py311"
# Sources paths to check
src = ["dataspot"]
# Ignore generated files
exclude = []

[tool.ruff.lint.isort]
known-first-party = ["dataspot"]
combine-as-imports = true

[tool.hatch.metadata]
allow-direct-references = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cache-clear -ra -q --disable-warnings"
testpaths = ["tests"]
norecursedirs = [".venv"]
filterwarnings = [
    "ignore:Support for class-based `config` is deprecated:DeprecationWarning",
]
