[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pytrim"
version = "0.1.2"
description = "Auto-detect and trim unused Python imports and dependencies"
readme = "README.md"
requires-python = ">=3.10"
license = {file = "LICENSE"}
authors = [
    {name = "Konstantinos Karakatsanis"},
    {name = "George Alexopoulos"},
    {name = "Giannis Karyotakis"},
    {name = "Foivos Proestakis"},
    {name = "Evangelos Talos"},
]
keywords = ["dependencies", "imports", "cleanup", "trim", "python", "packaging", "optimization", "auto-detection", "unused"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: System :: Archiving :: Packaging",
]

dependencies = [
    "tomli>=1.2.0;python_version<'3.11'",
    "tqdm>=4.64.0",
    "fawltydeps",
    "pkginfo",
    "flask",
    "toml",
    "colorama"
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "requests",
    "pre-commit",
]
docs = [
]

[project.scripts]
trim = "pytrim.cli:main"
pytrim = "pytrim.cli:main"

[project.urls]
Homepage = "https://github.com/TrimTeam/PyTrim"
Repository = "https://github.com/TrimTeam/PyTrim.git"
"Bug Reports" = "https://github.com/TrimTeam/PyTrim/issues"

[tool.setuptools]
packages = { find = { where = ["."], include = ["pytrim", "pytrim.*"] } }

[tool.setuptools.package-data]
pytrim = ["py.typed", "import_mappings.json"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--strict-markers --strict-config --cov=pytrim"

[tool.coverage.run]
source = ["pytrim"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
