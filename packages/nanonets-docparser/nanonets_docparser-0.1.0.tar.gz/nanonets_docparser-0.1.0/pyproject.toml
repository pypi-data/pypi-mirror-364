[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "nanonets-docparser"
version = "0.1.0"
description = "A unified document extraction library supporting local CPU, GPU, and cloud processing"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Nanonets", email = "support@nanonets.com"}
]
maintainers = [
    {name = "Nanonets", email = "support@nanonets.com"}
]
keywords = ["document", "extraction", "ocr", "pdf", "ai", "machine-learning"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: General",
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.25.0",
    "Pillow>=8.0.0",
    "PyPDF2>=2.0.0",
    "python-docx>=0.8.11",
    "openpyxl>=3.0.0",
    "pandas>=1.3.0",
    "numpy>=1.21.0",
    "opencv-python>=4.5.0",
    "pytesseract>=0.3.8",
    "transformers>=4.20.0",
    "torch>=1.12.0",
    "torchvision>=0.13.0",
    "easyocr>=1.6.0",
    "pydantic>=1.9.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
gpu = [
    "torch>=1.12.0",
    "torchvision>=0.13.0",
]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.10.0",
    "black>=21.0.0",
    "flake8>=3.8.0",
    "mypy>=0.910",
]

[project.scripts]
docextractor = "nanonets_extractor.cli:main"

[project.urls]
Homepage = "https://github.com/nanonets/document-extractor"
Documentation = "https://docs.nanonets.com"
Repository = "https://github.com/nanonets/document-extractor"
"Bug Tracker" = "https://github.com/nanonets/document-extractor/issues"
"API Keys" = "https://app.nanonets.com/#/keys"



[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=nanonets_extractor",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "easyocr.*",
    "pytesseract.*",
    "cv2.*",
    "torch.*",
    "torchvision.*",
    "transformers.*",
]
ignore_missing_imports = true 