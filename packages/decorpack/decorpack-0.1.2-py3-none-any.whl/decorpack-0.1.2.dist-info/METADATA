Metadata-Version: 2.4
Name: decorpack
Version: 0.1.2
Summary: Add your description here
Author: Pierre LAPOLLA
License: MIT License
        
        Copyright (c) [2025] [Pierre LAPOLLA]
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
License-File: LICENSE
Requires-Python: >=3.13
Requires-Dist: dotenv>=0.9.9
Requires-Dist: structlog>=25.3.0
Description-Content-Type: text/markdown

# Decorpack

[![PyPI](https://img.shields.io/pypi/v/decorpack)](https://pypi.org/project/decorpack/)  

A small collection of reusable Python decorators and utilities for logging, timing, singletons, and safeâ€‘exception handling.

## Features
 
- `logger`: pre-configured Python logger ready to use 
- `singleton`: decorator  and metaclass for enforcing single-instance class
- `timer`: decorator to measure function runtime 
- `try_except`: decorator for catching & handling exceptions cleanly

## Installation

```bash
  pip install decorpack
```

## Quickstart

```python
from decorpack.logger import log

log.info("Quickstart over!")
```
```python
from decorpack.timer import timer

@timer
def expensive_computation(x):
    pass
```
```python
from decorpack.singleton import singleton

@singleton
class MyConfig:
    pass
```
```python
from decorpack.try_except import try_except

@try_except(ValueError)
def parse_int(s: str) -> int:
    return int(s)
```

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.
