"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _FieldType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _FieldTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_FieldType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    BOOL: _FieldType.ValueType  # 0
    STRING: _FieldType.ValueType  # 1
    INT: _FieldType.ValueType  # 2
    FLOAT: _FieldType.ValueType  # 3
    LONG: _FieldType.ValueType  # 4
    ARRAY_BOOL: _FieldType.ValueType  # 10
    """ARRAY"""
    ARRAY_STRING: _FieldType.ValueType  # 11
    ARRAY_INT: _FieldType.ValueType  # 12
    ARRAY_FLOAT: _FieldType.ValueType  # 13
    ARRAY_LONG: _FieldType.ValueType  # 14

class FieldType(_FieldType, metaclass=_FieldTypeEnumTypeWrapper): ...

BOOL: FieldType.ValueType  # 0
STRING: FieldType.ValueType  # 1
INT: FieldType.ValueType  # 2
FLOAT: FieldType.ValueType  # 3
LONG: FieldType.ValueType  # 4
ARRAY_BOOL: FieldType.ValueType  # 10
"""ARRAY"""
ARRAY_STRING: FieldType.ValueType  # 11
ARRAY_INT: FieldType.ValueType  # 12
ARRAY_FLOAT: FieldType.ValueType  # 13
ARRAY_LONG: FieldType.ValueType  # 14
global___FieldType = FieldType

class _Status:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    INITIALIZED: _Status.ValueType  # 0
    SERVING: _Status.ValueType  # 1
    DROPPING: _Status.ValueType  # 2
    ERROR: _Status.ValueType  # 3

class Status(_Status, metaclass=_StatusEnumTypeWrapper): ...

INITIALIZED: Status.ValueType  # 0
SERVING: Status.ValueType  # 1
DROPPING: Status.ValueType  # 2
ERROR: Status.ValueType  # 3
global___Status = Status

class _ImportState:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ImportStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ImportState.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    IMPORT_STATE_PENDING: _ImportState.ValueType  # 0
    IMPORT_STATE_PROCESSING: _ImportState.ValueType  # 1
    IMPORT_STATE_COMPLETED: _ImportState.ValueType  # 2
    IMPORT_STATE_FAILED: _ImportState.ValueType  # 3
    IMPORT_STATE_CANCELLED: _ImportState.ValueType  # 4

class ImportState(_ImportState, metaclass=_ImportStateEnumTypeWrapper): ...

IMPORT_STATE_PENDING: ImportState.ValueType  # 0
IMPORT_STATE_PROCESSING: ImportState.ValueType  # 1
IMPORT_STATE_COMPLETED: ImportState.ValueType  # 2
IMPORT_STATE_FAILED: ImportState.ValueType  # 3
IMPORT_STATE_CANCELLED: ImportState.ValueType  # 4
global___ImportState = ImportState

class _FileType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _FileTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_FileType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    PARQUET: _FileType.ValueType  # 0

class FileType(_FileType, metaclass=_FileTypeEnumTypeWrapper): ...

PARQUET: FileType.ValueType  # 0
global___FileType = FileType

@typing.final
class FieldValue(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BOOL_VALUE_FIELD_NUMBER: builtins.int
    STRING_VALUE_FIELD_NUMBER: builtins.int
    INT_VALUE_FIELD_NUMBER: builtins.int
    FLOAT_VALUE_FIELD_NUMBER: builtins.int
    LONG_VALUE_FIELD_NUMBER: builtins.int
    BOOL_ARRAY_FIELD_NUMBER: builtins.int
    STRING_ARRAY_FIELD_NUMBER: builtins.int
    INT_ARRAY_FIELD_NUMBER: builtins.int
    FLOAT_ARRAY_FIELD_NUMBER: builtins.int
    LONG_ARRAY_FIELD_NUMBER: builtins.int
    bool_value: builtins.bool
    string_value: builtins.str
    int_value: builtins.int
    float_value: builtins.float
    long_value: builtins.int
    @property
    def bool_array(self) -> global___BoolArray:
        """ARRAY"""

    @property
    def string_array(self) -> global___StringArray: ...
    @property
    def int_array(self) -> global___IntArray: ...
    @property
    def float_array(self) -> global___FloatArray: ...
    @property
    def long_array(self) -> global___LongArray: ...
    def __init__(
        self,
        *,
        bool_value: builtins.bool = ...,
        string_value: builtins.str = ...,
        int_value: builtins.int = ...,
        float_value: builtins.float = ...,
        long_value: builtins.int = ...,
        bool_array: global___BoolArray | None = ...,
        string_array: global___StringArray | None = ...,
        int_array: global___IntArray | None = ...,
        float_array: global___FloatArray | None = ...,
        long_array: global___LongArray | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["bool_array", b"bool_array", "bool_value", b"bool_value", "float_array", b"float_array", "float_value", b"float_value", "int_array", b"int_array", "int_value", b"int_value", "long_array", b"long_array", "long_value", b"long_value", "string_array", b"string_array", "string_value", b"string_value", "value_oneof", b"value_oneof"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["bool_array", b"bool_array", "bool_value", b"bool_value", "float_array", b"float_array", "float_value", b"float_value", "int_array", b"int_array", "int_value", b"int_value", "long_array", b"long_array", "long_value", b"long_value", "string_array", b"string_array", "string_value", b"string_value", "value_oneof", b"value_oneof"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["value_oneof", b"value_oneof"]) -> typing.Literal["bool_value", "string_value", "int_value", "float_value", "long_value", "bool_array", "string_array", "int_array", "float_array", "long_array"] | None: ...

global___FieldValue = FieldValue

@typing.final
class BoolArray(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.bool]: ...
    def __init__(
        self,
        *,
        values: collections.abc.Iterable[builtins.bool] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["values", b"values"]) -> None: ...

global___BoolArray = BoolArray

@typing.final
class StringArray(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        values: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["values", b"values"]) -> None: ...

global___StringArray = StringArray

@typing.final
class IntArray(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    def __init__(
        self,
        *,
        values: collections.abc.Iterable[builtins.int] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["values", b"values"]) -> None: ...

global___IntArray = IntArray

@typing.final
class LongArray(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    def __init__(
        self,
        *,
        values: collections.abc.Iterable[builtins.int] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["values", b"values"]) -> None: ...

global___LongArray = LongArray

@typing.final
class FloatArray(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    def __init__(
        self,
        *,
        values: collections.abc.Iterable[builtins.float] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["values", b"values"]) -> None: ...

global___FloatArray = FloatArray

@typing.final
class CollectionInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _DataType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _DataTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[CollectionInfo._DataType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        FLOAT: CollectionInfo._DataType.ValueType  # 0
        INT: CollectionInfo._DataType.ValueType  # 1

    class DataType(_DataType, metaclass=_DataTypeEnumTypeWrapper): ...
    FLOAT: CollectionInfo.DataType.ValueType  # 0
    INT: CollectionInfo.DataType.ValueType  # 1

    class _Metric:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _MetricEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[CollectionInfo._Metric.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        euclidean: CollectionInfo._Metric.ValueType  # 0
        dotproduct: CollectionInfo._Metric.ValueType  # 1
        cosine: CollectionInfo._Metric.ValueType  # 2

    class Metric(_Metric, metaclass=_MetricEnumTypeWrapper): ...
    euclidean: CollectionInfo.Metric.ValueType  # 0
    dotproduct: CollectionInfo.Metric.ValueType  # 1
    cosine: CollectionInfo.Metric.ValueType  # 2

    class _IndexType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _IndexTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[CollectionInfo._IndexType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        INVERT: CollectionInfo._IndexType.ValueType  # 0
        NONE: CollectionInfo._IndexType.ValueType  # 15

    class IndexType(_IndexType, metaclass=_IndexTypeEnumTypeWrapper): ...
    INVERT: CollectionInfo.IndexType.ValueType  # 0
    NONE: CollectionInfo.IndexType.ValueType  # 15

    @typing.final
    class VectorParam(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        DIMENSION_FIELD_NUMBER: builtins.int
        DTYPE_FIELD_NUMBER: builtins.int
        METRIC_FIELD_NUMBER: builtins.int
        QUANTIZE_TYPE_FIELD_NUMBER: builtins.int
        dimension: builtins.int
        dtype: global___CollectionInfo.DataType.ValueType
        metric: global___CollectionInfo.Metric.ValueType
        quantize_type: builtins.str
        def __init__(
            self,
            *,
            dimension: builtins.int = ...,
            dtype: global___CollectionInfo.DataType.ValueType = ...,
            metric: global___CollectionInfo.Metric.ValueType = ...,
            quantize_type: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["dimension", b"dimension", "dtype", b"dtype", "metric", b"metric", "quantize_type", b"quantize_type"]) -> None: ...

    @typing.final
    class Index(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        INDEX_TYPE_FIELD_NUMBER: builtins.int
        index_type: global___CollectionInfo.IndexType.ValueType
        def __init__(
            self,
            *,
            index_type: global___CollectionInfo.IndexType.ValueType = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["index_type", b"index_type"]) -> None: ...

    @typing.final
    class FieldsSchemaEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: global___FieldType.ValueType
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___FieldType.ValueType = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class PartitionsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: global___Status.ValueType
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___Status.ValueType = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class VectorsSchemaEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___CollectionInfo.VectorParam: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___CollectionInfo.VectorParam | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class SparseVectorsSchemaEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___CollectionInfo.VectorParam: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___CollectionInfo.VectorParam | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class IndexesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___CollectionInfo.Index: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___CollectionInfo.Index | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DIMENSION_FIELD_NUMBER: builtins.int
    DTYPE_FIELD_NUMBER: builtins.int
    METRIC_FIELD_NUMBER: builtins.int
    FIELDS_SCHEMA_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    PARTITIONS_FIELD_NUMBER: builtins.int
    VECTORS_SCHEMA_FIELD_NUMBER: builtins.int
    SPARSE_VECTORS_SCHEMA_FIELD_NUMBER: builtins.int
    INDEXES_FIELD_NUMBER: builtins.int
    name: builtins.str
    dimension: builtins.int
    dtype: global___CollectionInfo.DataType.ValueType
    metric: global___CollectionInfo.Metric.ValueType
    status: global___Status.ValueType
    @property
    def fields_schema(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, global___FieldType.ValueType]: ...
    @property
    def partitions(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, global___Status.ValueType]: ...
    @property
    def vectors_schema(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___CollectionInfo.VectorParam]: ...
    @property
    def sparse_vectors_schema(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___CollectionInfo.VectorParam]: ...
    @property
    def indexes(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___CollectionInfo.Index]: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        dimension: builtins.int = ...,
        dtype: global___CollectionInfo.DataType.ValueType = ...,
        metric: global___CollectionInfo.Metric.ValueType = ...,
        fields_schema: collections.abc.Mapping[builtins.str, global___FieldType.ValueType] | None = ...,
        status: global___Status.ValueType = ...,
        partitions: collections.abc.Mapping[builtins.str, global___Status.ValueType] | None = ...,
        vectors_schema: collections.abc.Mapping[builtins.str, global___CollectionInfo.VectorParam] | None = ...,
        sparse_vectors_schema: collections.abc.Mapping[builtins.str, global___CollectionInfo.VectorParam] | None = ...,
        indexes: collections.abc.Mapping[builtins.str, global___CollectionInfo.Index] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["dimension", b"dimension", "dtype", b"dtype", "fields_schema", b"fields_schema", "indexes", b"indexes", "metric", b"metric", "name", b"name", "partitions", b"partitions", "sparse_vectors_schema", b"sparse_vectors_schema", "status", b"status", "vectors_schema", b"vectors_schema"]) -> None: ...

global___CollectionInfo = CollectionInfo

@typing.final
class ImportInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    URIS_FIELD_NUMBER: builtins.int
    COLLECTION_NAME_FIELD_NUMBER: builtins.int
    PARTITION_NAME_FIELD_NUMBER: builtins.int
    IMPORT_STATE_FIELD_NUMBER: builtins.int
    id: builtins.str
    collection_name: builtins.str
    partition_name: builtins.str
    import_state: global___ImportState.ValueType
    @property
    def uris(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        uris: collections.abc.Iterable[builtins.str] | None = ...,
        collection_name: builtins.str = ...,
        partition_name: builtins.str = ...,
        import_state: global___ImportState.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["collection_name", b"collection_name", "id", b"id", "import_state", b"import_state", "partition_name", b"partition_name", "uris", b"uris"]) -> None: ...

global___ImportInfo = ImportInfo

@typing.final
class CreateCollectionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class FieldsSchemaEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: global___FieldType.ValueType
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___FieldType.ValueType = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class ExtraParamsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class VectorsSchemaEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___CollectionInfo.VectorParam: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___CollectionInfo.VectorParam | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class SparseVectorsSchemaEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___CollectionInfo.VectorParam: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___CollectionInfo.VectorParam | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class IndexesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___CollectionInfo.Index: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___CollectionInfo.Index | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DIMENSION_FIELD_NUMBER: builtins.int
    DTYPE_FIELD_NUMBER: builtins.int
    METRIC_FIELD_NUMBER: builtins.int
    FIELDS_SCHEMA_FIELD_NUMBER: builtins.int
    EXTRA_PARAMS_FIELD_NUMBER: builtins.int
    VECTORS_SCHEMA_FIELD_NUMBER: builtins.int
    SPARSE_VECTORS_SCHEMA_FIELD_NUMBER: builtins.int
    INDEXES_FIELD_NUMBER: builtins.int
    name: builtins.str
    dimension: builtins.int
    dtype: global___CollectionInfo.DataType.ValueType
    metric: global___CollectionInfo.Metric.ValueType
    @property
    def fields_schema(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, global___FieldType.ValueType]: ...
    @property
    def extra_params(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    @property
    def vectors_schema(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___CollectionInfo.VectorParam]:
        """dimension, dtype and metric will be ignored if vectors are set"""

    @property
    def sparse_vectors_schema(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___CollectionInfo.VectorParam]: ...
    @property
    def indexes(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___CollectionInfo.Index]:
        """optional"""

    def __init__(
        self,
        *,
        name: builtins.str = ...,
        dimension: builtins.int = ...,
        dtype: global___CollectionInfo.DataType.ValueType = ...,
        metric: global___CollectionInfo.Metric.ValueType = ...,
        fields_schema: collections.abc.Mapping[builtins.str, global___FieldType.ValueType] | None = ...,
        extra_params: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        vectors_schema: collections.abc.Mapping[builtins.str, global___CollectionInfo.VectorParam] | None = ...,
        sparse_vectors_schema: collections.abc.Mapping[builtins.str, global___CollectionInfo.VectorParam] | None = ...,
        indexes: collections.abc.Mapping[builtins.str, global___CollectionInfo.Index] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["dimension", b"dimension", "dtype", b"dtype", "extra_params", b"extra_params", "fields_schema", b"fields_schema", "indexes", b"indexes", "metric", b"metric", "name", b"name", "sparse_vectors_schema", b"sparse_vectors_schema", "vectors_schema", b"vectors_schema"]) -> None: ...

global___CreateCollectionRequest = CreateCollectionRequest

@typing.final
class CreateCollectionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_ID_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    request_id: builtins.str
    code: builtins.int
    message: builtins.str
    def __init__(
        self,
        *,
        request_id: builtins.str = ...,
        code: builtins.int = ...,
        message: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["code", b"code", "message", b"message", "request_id", b"request_id"]) -> None: ...

global___CreateCollectionResponse = CreateCollectionResponse

@typing.final
class DeleteCollectionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["name", b"name"]) -> None: ...

global___DeleteCollectionRequest = DeleteCollectionRequest

@typing.final
class DeleteCollectionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_ID_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    request_id: builtins.str
    code: builtins.int
    message: builtins.str
    def __init__(
        self,
        *,
        request_id: builtins.str = ...,
        code: builtins.int = ...,
        message: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["code", b"code", "message", b"message", "request_id", b"request_id"]) -> None: ...

global___DeleteCollectionResponse = DeleteCollectionResponse

@typing.final
class DescribeCollectionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["name", b"name"]) -> None: ...

global___DescribeCollectionRequest = DescribeCollectionRequest

@typing.final
class DescribeCollectionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_ID_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    OUTPUT_FIELD_NUMBER: builtins.int
    request_id: builtins.str
    code: builtins.int
    message: builtins.str
    @property
    def output(self) -> global___CollectionInfo: ...
    def __init__(
        self,
        *,
        request_id: builtins.str = ...,
        code: builtins.int = ...,
        message: builtins.str = ...,
        output: global___CollectionInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["output", b"output"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["code", b"code", "message", b"message", "output", b"output", "request_id", b"request_id"]) -> None: ...

global___DescribeCollectionResponse = DescribeCollectionResponse

@typing.final
class ListCollectionsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___ListCollectionsRequest = ListCollectionsRequest

@typing.final
class ListCollectionsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_ID_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    OUTPUT_FIELD_NUMBER: builtins.int
    request_id: builtins.str
    code: builtins.int
    message: builtins.str
    @property
    def output(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        request_id: builtins.str = ...,
        code: builtins.int = ...,
        message: builtins.str = ...,
        output: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["code", b"code", "message", b"message", "output", b"output", "request_id", b"request_id"]) -> None: ...

global___ListCollectionsResponse = ListCollectionsResponse

@typing.final
class StatsCollectionRequest(google.protobuf.message.Message):
    """collection_name in metadata"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___StatsCollectionRequest = StatsCollectionRequest

@typing.final
class PartitionStats(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TOTAL_DOC_COUNT_FIELD_NUMBER: builtins.int
    total_doc_count: builtins.int
    def __init__(
        self,
        *,
        total_doc_count: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["total_doc_count", b"total_doc_count"]) -> None: ...

global___PartitionStats = PartitionStats

@typing.final
class StatsCollectionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class CollectionStats(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing.final
        class PartitionsEntry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            key: builtins.str
            @property
            def value(self) -> global___PartitionStats: ...
            def __init__(
                self,
                *,
                key: builtins.str = ...,
                value: global___PartitionStats | None = ...,
            ) -> None: ...
            def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

        TOTAL_DOC_COUNT_FIELD_NUMBER: builtins.int
        INDEX_COMPLETENESS_FIELD_NUMBER: builtins.int
        PARTITIONS_FIELD_NUMBER: builtins.int
        total_doc_count: builtins.int
        index_completeness: builtins.float
        @property
        def partitions(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___PartitionStats]: ...
        def __init__(
            self,
            *,
            total_doc_count: builtins.int = ...,
            index_completeness: builtins.float = ...,
            partitions: collections.abc.Mapping[builtins.str, global___PartitionStats] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["index_completeness", b"index_completeness", "partitions", b"partitions", "total_doc_count", b"total_doc_count"]) -> None: ...

    REQUEST_ID_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    OUTPUT_FIELD_NUMBER: builtins.int
    request_id: builtins.str
    code: builtins.int
    message: builtins.str
    @property
    def output(self) -> global___StatsCollectionResponse.CollectionStats: ...
    def __init__(
        self,
        *,
        request_id: builtins.str = ...,
        code: builtins.int = ...,
        message: builtins.str = ...,
        output: global___StatsCollectionResponse.CollectionStats | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["output", b"output"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["code", b"code", "message", b"message", "output", b"output", "request_id", b"request_id"]) -> None: ...

global___StatsCollectionResponse = StatsCollectionResponse

@typing.final
class CreatePartitionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    """collection_name in metadata"""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["name", b"name"]) -> None: ...

global___CreatePartitionRequest = CreatePartitionRequest

@typing.final
class CreatePartitionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_ID_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    request_id: builtins.str
    code: builtins.int
    message: builtins.str
    def __init__(
        self,
        *,
        request_id: builtins.str = ...,
        code: builtins.int = ...,
        message: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["code", b"code", "message", b"message", "request_id", b"request_id"]) -> None: ...

global___CreatePartitionResponse = CreatePartitionResponse

@typing.final
class DeletePartitionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    """collection_name in metadata"""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["name", b"name"]) -> None: ...

global___DeletePartitionRequest = DeletePartitionRequest

@typing.final
class DeletePartitionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_ID_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    request_id: builtins.str
    code: builtins.int
    message: builtins.str
    def __init__(
        self,
        *,
        request_id: builtins.str = ...,
        code: builtins.int = ...,
        message: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["code", b"code", "message", b"message", "request_id", b"request_id"]) -> None: ...

global___DeletePartitionResponse = DeletePartitionResponse

@typing.final
class DescribePartitionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    """collection_name in metadata"""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["name", b"name"]) -> None: ...

global___DescribePartitionRequest = DescribePartitionRequest

@typing.final
class DescribePartitionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_ID_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    OUTPUT_FIELD_NUMBER: builtins.int
    request_id: builtins.str
    code: builtins.int
    message: builtins.str
    output: global___Status.ValueType
    """partition status"""
    def __init__(
        self,
        *,
        request_id: builtins.str = ...,
        code: builtins.int = ...,
        message: builtins.str = ...,
        output: global___Status.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["code", b"code", "message", b"message", "output", b"output", "request_id", b"request_id"]) -> None: ...

global___DescribePartitionResponse = DescribePartitionResponse

@typing.final
class StatsPartitionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    """collection_name in metadata"""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["name", b"name"]) -> None: ...

global___StatsPartitionRequest = StatsPartitionRequest

@typing.final
class StatsPartitionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_ID_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    OUTPUT_FIELD_NUMBER: builtins.int
    request_id: builtins.str
    code: builtins.int
    message: builtins.str
    @property
    def output(self) -> global___PartitionStats: ...
    def __init__(
        self,
        *,
        request_id: builtins.str = ...,
        code: builtins.int = ...,
        message: builtins.str = ...,
        output: global___PartitionStats | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["output", b"output"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["code", b"code", "message", b"message", "output", b"output", "request_id", b"request_id"]) -> None: ...

global___StatsPartitionResponse = StatsPartitionResponse

@typing.final
class ListPartitionsRequest(google.protobuf.message.Message):
    """collection_name in metadata"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___ListPartitionsRequest = ListPartitionsRequest

@typing.final
class ListPartitionsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_ID_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    OUTPUT_FIELD_NUMBER: builtins.int
    request_id: builtins.str
    code: builtins.int
    message: builtins.str
    @property
    def output(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        request_id: builtins.str = ...,
        code: builtins.int = ...,
        message: builtins.str = ...,
        output: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["code", b"code", "message", b"message", "output", b"output", "request_id", b"request_id"]) -> None: ...

global___ListPartitionsResponse = ListPartitionsResponse

@typing.final
class Vector(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class FloatVector(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        VALUES_FIELD_NUMBER: builtins.int
        @property
        def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
        def __init__(
            self,
            *,
            values: collections.abc.Iterable[builtins.float] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["values", b"values"]) -> None: ...

    BYTE_VECTOR_FIELD_NUMBER: builtins.int
    FLOAT_VECTOR_FIELD_NUMBER: builtins.int
    byte_vector: builtins.bytes
    @property
    def float_vector(self) -> global___Vector.FloatVector: ...
    def __init__(
        self,
        *,
        byte_vector: builtins.bytes = ...,
        float_vector: global___Vector.FloatVector | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["byte_vector", b"byte_vector", "float_vector", b"float_vector", "value_oneof", b"value_oneof"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["byte_vector", b"byte_vector", "float_vector", b"float_vector", "value_oneof", b"value_oneof"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["value_oneof", b"value_oneof"]) -> typing.Literal["byte_vector", "float_vector"] | None: ...

global___Vector = Vector

@typing.final
class SparseVector(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class SparseVectorEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        value: builtins.float
        def __init__(
            self,
            *,
            key: builtins.int = ...,
            value: builtins.float = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    SPARSE_VECTOR_FIELD_NUMBER: builtins.int
    @property
    def sparse_vector(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, builtins.float]: ...
    def __init__(
        self,
        *,
        sparse_vector: collections.abc.Mapping[builtins.int, builtins.float] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["sparse_vector", b"sparse_vector"]) -> None: ...

global___SparseVector = SparseVector

@typing.final
class ReferenceCollection(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TARGET_COLLECTION_FIELD_NUMBER: builtins.int
    TARGET_PARTITION_FIELD_NUMBER: builtins.int
    SOURCE_FIELD_FIELD_NUMBER: builtins.int
    TARGET_FIELD_FIELD_NUMBER: builtins.int
    TARGET_OUTPUT_FIELDS_FIELD_NUMBER: builtins.int
    TARGET_FILTER_FIELD_NUMBER: builtins.int
    target_collection: builtins.str
    target_partition: builtins.str
    """empty means "default" """
    source_field: builtins.str
    """empty source/target field means join with collection id"""
    target_field: builtins.str
    target_filter: builtins.str
    @property
    def target_output_fields(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        target_collection: builtins.str = ...,
        target_partition: builtins.str = ...,
        source_field: builtins.str = ...,
        target_field: builtins.str = ...,
        target_output_fields: collections.abc.Iterable[builtins.str] | None = ...,
        target_filter: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["source_field", b"source_field", "target_collection", b"target_collection", "target_field", b"target_field", "target_filter", b"target_filter", "target_output_fields", b"target_output_fields", "target_partition", b"target_partition"]) -> None: ...

global___ReferenceCollection = ReferenceCollection

@typing.final
class ReferenceDoc(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class FieldsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___FieldValue: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___FieldValue | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    FIELDS_FIELD_NUMBER: builtins.int
    @property
    def fields(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___FieldValue]: ...
    def __init__(
        self,
        *,
        fields: collections.abc.Mapping[builtins.str, global___FieldValue] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["fields", b"fields"]) -> None: ...

global___ReferenceDoc = ReferenceDoc

@typing.final
class ReferenceDocs(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DOCS_FIELD_NUMBER: builtins.int
    @property
    def docs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ReferenceDoc]: ...
    def __init__(
        self,
        *,
        docs: collections.abc.Iterable[global___ReferenceDoc] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["docs", b"docs"]) -> None: ...

global___ReferenceDocs = ReferenceDocs

@typing.final
class Doc(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class FieldsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___FieldValue: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___FieldValue | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class SparseVectorEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        value: builtins.float
        def __init__(
            self,
            *,
            key: builtins.int = ...,
            value: builtins.float = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class VectorsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___Vector: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___Vector | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class SparseVectorsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___SparseVector: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___SparseVector | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    VECTOR_FIELD_NUMBER: builtins.int
    FIELDS_FIELD_NUMBER: builtins.int
    SCORE_FIELD_NUMBER: builtins.int
    SPARSE_VECTOR_FIELD_NUMBER: builtins.int
    VECTORS_FIELD_NUMBER: builtins.int
    SPARSE_VECTORS_FIELD_NUMBER: builtins.int
    REFERENCE_DOCS_FIELD_NUMBER: builtins.int
    id: builtins.str
    score: builtins.float
    @property
    def vector(self) -> global___Vector: ...
    @property
    def fields(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___FieldValue]: ...
    @property
    def sparse_vector(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, builtins.float]:
        """optional"""

    @property
    def vectors(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___Vector]:
        """1. For write requests, vector will be ignored if vectors is set
        2. For fetch or query(include_vector=True) responses,
           * only vector is set if there is only one vector with name `proxima_vector` to save space
           * only vectors are set otherwise
        """

    @property
    def sparse_vectors(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___SparseVector]: ...
    @property
    def reference_docs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ReferenceDocs]:
        """Has the same order as fetch/query request.
        Map unsuitable as there are no proper keys.
        """

    def __init__(
        self,
        *,
        id: builtins.str = ...,
        vector: global___Vector | None = ...,
        fields: collections.abc.Mapping[builtins.str, global___FieldValue] | None = ...,
        score: builtins.float = ...,
        sparse_vector: collections.abc.Mapping[builtins.int, builtins.float] | None = ...,
        vectors: collections.abc.Mapping[builtins.str, global___Vector] | None = ...,
        sparse_vectors: collections.abc.Mapping[builtins.str, global___SparseVector] | None = ...,
        reference_docs: collections.abc.Iterable[global___ReferenceDocs] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["vector", b"vector"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["fields", b"fields", "id", b"id", "reference_docs", b"reference_docs", "score", b"score", "sparse_vector", b"sparse_vector", "sparse_vectors", b"sparse_vectors", "vector", b"vector", "vectors", b"vectors"]) -> None: ...

global___Doc = Doc

@typing.final
class DocOpResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _DocOp:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _DocOpEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[DocOpResult._DocOp.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        insert: DocOpResult._DocOp.ValueType  # 0
        update: DocOpResult._DocOp.ValueType  # 1
        upsert: DocOpResult._DocOp.ValueType  # 2
        delete: DocOpResult._DocOp.ValueType  # 3

    class DocOp(_DocOp, metaclass=_DocOpEnumTypeWrapper): ...
    insert: DocOpResult.DocOp.ValueType  # 0
    update: DocOpResult.DocOp.ValueType  # 1
    upsert: DocOpResult.DocOp.ValueType  # 2
    delete: DocOpResult.DocOp.ValueType  # 3

    DOC_OP_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    doc_op: global___DocOpResult.DocOp.ValueType
    id: builtins.str
    code: builtins.int
    message: builtins.str
    def __init__(
        self,
        *,
        doc_op: global___DocOpResult.DocOp.ValueType = ...,
        id: builtins.str = ...,
        code: builtins.int = ...,
        message: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["code", b"code", "doc_op", b"doc_op", "id", b"id", "message", b"message"]) -> None: ...

global___DocOpResult = DocOpResult

@typing.final
class RequestUsage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WRITE_UNITS_FIELD_NUMBER: builtins.int
    READ_UNITS_FIELD_NUMBER: builtins.int
    write_units: builtins.int
    read_units: builtins.int
    def __init__(
        self,
        *,
        write_units: builtins.int = ...,
        read_units: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["read_units", b"read_units", "value_oneof", b"value_oneof", "write_units", b"write_units"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["read_units", b"read_units", "value_oneof", b"value_oneof", "write_units", b"write_units"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["value_oneof", b"value_oneof"]) -> typing.Literal["write_units", "read_units"] | None: ...

global___RequestUsage = RequestUsage

@typing.final
class InsertDocRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DOCS_FIELD_NUMBER: builtins.int
    PARTITION_FIELD_NUMBER: builtins.int
    partition: builtins.str
    @property
    def docs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Doc]:
        """collection_name in metadata"""

    def __init__(
        self,
        *,
        docs: collections.abc.Iterable[global___Doc] | None = ...,
        partition: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["docs", b"docs", "partition", b"partition"]) -> None: ...

global___InsertDocRequest = InsertDocRequest

@typing.final
class InsertDocResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_ID_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    OUTPUT_FIELD_NUMBER: builtins.int
    USAGE_FIELD_NUMBER: builtins.int
    request_id: builtins.str
    code: builtins.int
    message: builtins.str
    @property
    def output(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DocOpResult]: ...
    @property
    def usage(self) -> global___RequestUsage:
        """optional, for serverless request"""

    def __init__(
        self,
        *,
        request_id: builtins.str = ...,
        code: builtins.int = ...,
        message: builtins.str = ...,
        output: collections.abc.Iterable[global___DocOpResult] | None = ...,
        usage: global___RequestUsage | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["usage", b"usage"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["code", b"code", "message", b"message", "output", b"output", "request_id", b"request_id", "usage", b"usage"]) -> None: ...

global___InsertDocResponse = InsertDocResponse

@typing.final
class UpdateDocRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DOCS_FIELD_NUMBER: builtins.int
    PARTITION_FIELD_NUMBER: builtins.int
    partition: builtins.str
    @property
    def docs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Doc]:
        """collection_name in metadata"""

    def __init__(
        self,
        *,
        docs: collections.abc.Iterable[global___Doc] | None = ...,
        partition: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["docs", b"docs", "partition", b"partition"]) -> None: ...

global___UpdateDocRequest = UpdateDocRequest

@typing.final
class UpdateDocResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_ID_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    OUTPUT_FIELD_NUMBER: builtins.int
    USAGE_FIELD_NUMBER: builtins.int
    request_id: builtins.str
    code: builtins.int
    message: builtins.str
    @property
    def output(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DocOpResult]: ...
    @property
    def usage(self) -> global___RequestUsage:
        """optional, for serverless request"""

    def __init__(
        self,
        *,
        request_id: builtins.str = ...,
        code: builtins.int = ...,
        message: builtins.str = ...,
        output: collections.abc.Iterable[global___DocOpResult] | None = ...,
        usage: global___RequestUsage | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["usage", b"usage"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["code", b"code", "message", b"message", "output", b"output", "request_id", b"request_id", "usage", b"usage"]) -> None: ...

global___UpdateDocResponse = UpdateDocResponse

@typing.final
class UpsertDocRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DOCS_FIELD_NUMBER: builtins.int
    PARTITION_FIELD_NUMBER: builtins.int
    partition: builtins.str
    @property
    def docs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Doc]:
        """collection_name in metadata"""

    def __init__(
        self,
        *,
        docs: collections.abc.Iterable[global___Doc] | None = ...,
        partition: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["docs", b"docs", "partition", b"partition"]) -> None: ...

global___UpsertDocRequest = UpsertDocRequest

@typing.final
class UpsertDocResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_ID_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    OUTPUT_FIELD_NUMBER: builtins.int
    USAGE_FIELD_NUMBER: builtins.int
    request_id: builtins.str
    code: builtins.int
    message: builtins.str
    @property
    def output(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DocOpResult]: ...
    @property
    def usage(self) -> global___RequestUsage:
        """optional, for serverless request"""

    def __init__(
        self,
        *,
        request_id: builtins.str = ...,
        code: builtins.int = ...,
        message: builtins.str = ...,
        output: collections.abc.Iterable[global___DocOpResult] | None = ...,
        usage: global___RequestUsage | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["usage", b"usage"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["code", b"code", "message", b"message", "output", b"output", "request_id", b"request_id", "usage", b"usage"]) -> None: ...

global___UpsertDocResponse = UpsertDocResponse

@typing.final
class DeleteDocRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IDS_FIELD_NUMBER: builtins.int
    DELETE_ALL_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    PARTITION_FIELD_NUMBER: builtins.int
    delete_all: builtins.bool
    filter: builtins.str
    partition: builtins.str
    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """collection_name in metadata"""

    def __init__(
        self,
        *,
        ids: collections.abc.Iterable[builtins.str] | None = ...,
        delete_all: builtins.bool = ...,
        filter: builtins.str = ...,
        partition: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["delete_all", b"delete_all", "filter", b"filter", "ids", b"ids", "partition", b"partition"]) -> None: ...

global___DeleteDocRequest = DeleteDocRequest

@typing.final
class DeleteDocResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_ID_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    OUTPUT_FIELD_NUMBER: builtins.int
    USAGE_FIELD_NUMBER: builtins.int
    request_id: builtins.str
    code: builtins.int
    message: builtins.str
    @property
    def output(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DocOpResult]: ...
    @property
    def usage(self) -> global___RequestUsage:
        """optional, for serverless request"""

    def __init__(
        self,
        *,
        request_id: builtins.str = ...,
        code: builtins.int = ...,
        message: builtins.str = ...,
        output: collections.abc.Iterable[global___DocOpResult] | None = ...,
        usage: global___RequestUsage | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["usage", b"usage"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["code", b"code", "message", b"message", "output", b"output", "request_id", b"request_id", "usage", b"usage"]) -> None: ...

global___DeleteDocResponse = DeleteDocResponse

@typing.final
class OrderByField(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FIELD_FIELD_NUMBER: builtins.int
    DESC_FIELD_NUMBER: builtins.int
    field: builtins.str
    desc: builtins.bool
    def __init__(
        self,
        *,
        field: builtins.str = ...,
        desc: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["desc", b"desc", "field", b"field"]) -> None: ...

global___OrderByField = OrderByField

@typing.final
class VectorQueryParam(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NUM_CANDIDATES_FIELD_NUMBER: builtins.int
    RADIUS_FIELD_NUMBER: builtins.int
    IS_LINEAR_FIELD_NUMBER: builtins.int
    EF_FIELD_NUMBER: builtins.int
    num_candidates: builtins.int
    radius: builtins.float
    is_linear: builtins.bool
    ef: builtins.int
    def __init__(
        self,
        *,
        num_candidates: builtins.int = ...,
        radius: builtins.float = ...,
        is_linear: builtins.bool = ...,
        ef: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["ef", b"ef", "is_linear", b"is_linear", "num_candidates", b"num_candidates", "radius", b"radius"]) -> None: ...

global___VectorQueryParam = VectorQueryParam

@typing.final
class VectorQuery(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VECTOR_FIELD_NUMBER: builtins.int
    PARAM_FIELD_NUMBER: builtins.int
    @property
    def vector(self) -> global___Vector: ...
    @property
    def param(self) -> global___VectorQueryParam: ...
    def __init__(
        self,
        *,
        vector: global___Vector | None = ...,
        param: global___VectorQueryParam | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["param", b"param", "vector", b"vector"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["param", b"param", "vector", b"vector"]) -> None: ...

global___VectorQuery = VectorQuery

@typing.final
class SparseVectorQuery(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SPARSE_VECTOR_FIELD_NUMBER: builtins.int
    PARAM_FIELD_NUMBER: builtins.int
    @property
    def sparse_vector(self) -> global___SparseVector: ...
    @property
    def param(self) -> global___VectorQueryParam: ...
    def __init__(
        self,
        *,
        sparse_vector: global___SparseVector | None = ...,
        param: global___VectorQueryParam | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["param", b"param", "sparse_vector", b"sparse_vector"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["param", b"param", "sparse_vector", b"sparse_vector"]) -> None: ...

global___SparseVectorQuery = SparseVectorQuery

@typing.final
class Ranker(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class RankerParamsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    RANKER_NAME_FIELD_NUMBER: builtins.int
    RANKER_PARAMS_FIELD_NUMBER: builtins.int
    ranker_name: builtins.str
    @property
    def ranker_params(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    def __init__(
        self,
        *,
        ranker_name: builtins.str = ...,
        ranker_params: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["ranker_name", b"ranker_name", "ranker_params", b"ranker_params"]) -> None: ...

global___Ranker = Ranker

@typing.final
class QueryDocRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class SparseVectorEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        value: builtins.float
        def __init__(
            self,
            *,
            key: builtins.int = ...,
            value: builtins.float = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class VectorsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___VectorQuery: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___VectorQuery | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class SparseVectorsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___SparseVectorQuery: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___SparseVectorQuery | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    VECTOR_FIELD_NUMBER: builtins.int
    TOPK_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_VECTOR_FIELD_NUMBER: builtins.int
    PARTITION_FIELD_NUMBER: builtins.int
    OUTPUT_FIELDS_FIELD_NUMBER: builtins.int
    SPARSE_VECTOR_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    VECTORS_FIELD_NUMBER: builtins.int
    RERANK_FIELD_NUMBER: builtins.int
    SPARSE_VECTORS_FIELD_NUMBER: builtins.int
    REFERENCE_COLLECTIONS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELDS_FIELD_NUMBER: builtins.int
    OFFSET_FIELD_NUMBER: builtins.int
    topk: builtins.int
    filter: builtins.str
    include_vector: builtins.bool
    partition: builtins.str
    id: builtins.str
    offset: builtins.int
    """If offset is set, the query is in paginated mode, including when offset = 0
    If offset is not set, the query is a regular top-K query
    """
    @property
    def vector(self) -> global___Vector:
        """collection_name in metadata"""

    @property
    def output_fields(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def sparse_vector(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, builtins.float]: ...
    @property
    def vectors(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___VectorQuery]:
        """vector will be ignored if vectors is set"""

    @property
    def rerank(self) -> global___Ranker: ...
    @property
    def sparse_vectors(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___SparseVectorQuery]:
        """sparse_vector will be ignored if sparse_vectors is set"""

    @property
    def reference_collections(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ReferenceCollection]: ...
    @property
    def order_by_fields(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___OrderByField]: ...
    def __init__(
        self,
        *,
        vector: global___Vector | None = ...,
        topk: builtins.int = ...,
        filter: builtins.str = ...,
        include_vector: builtins.bool = ...,
        partition: builtins.str = ...,
        output_fields: collections.abc.Iterable[builtins.str] | None = ...,
        sparse_vector: collections.abc.Mapping[builtins.int, builtins.float] | None = ...,
        id: builtins.str = ...,
        vectors: collections.abc.Mapping[builtins.str, global___VectorQuery] | None = ...,
        rerank: global___Ranker | None = ...,
        sparse_vectors: collections.abc.Mapping[builtins.str, global___SparseVectorQuery] | None = ...,
        reference_collections: collections.abc.Iterable[global___ReferenceCollection] | None = ...,
        order_by_fields: collections.abc.Iterable[global___OrderByField] | None = ...,
        offset: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_offset", b"_offset", "offset", b"offset", "rerank", b"rerank", "vector", b"vector"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_offset", b"_offset", "filter", b"filter", "id", b"id", "include_vector", b"include_vector", "offset", b"offset", "order_by_fields", b"order_by_fields", "output_fields", b"output_fields", "partition", b"partition", "reference_collections", b"reference_collections", "rerank", b"rerank", "sparse_vector", b"sparse_vector", "sparse_vectors", b"sparse_vectors", "topk", b"topk", "vector", b"vector", "vectors", b"vectors"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_offset", b"_offset"]) -> typing.Literal["offset"] | None: ...

global___QueryDocRequest = QueryDocRequest

@typing.final
class QueryDocResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_ID_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    OUTPUT_FIELD_NUMBER: builtins.int
    USAGE_FIELD_NUMBER: builtins.int
    TOTAL_COUNT_FIELD_NUMBER: builtins.int
    request_id: builtins.str
    code: builtins.int
    message: builtins.str
    total_count: builtins.int
    @property
    def output(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Doc]: ...
    @property
    def usage(self) -> global___RequestUsage:
        """optional, for serverless request"""

    def __init__(
        self,
        *,
        request_id: builtins.str = ...,
        code: builtins.int = ...,
        message: builtins.str = ...,
        output: collections.abc.Iterable[global___Doc] | None = ...,
        usage: global___RequestUsage | None = ...,
        total_count: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_total_count", b"_total_count", "total_count", b"total_count", "usage", b"usage"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_total_count", b"_total_count", "code", b"code", "message", b"message", "output", b"output", "request_id", b"request_id", "total_count", b"total_count", "usage", b"usage"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_total_count", b"_total_count"]) -> typing.Literal["total_count"] | None: ...

global___QueryDocResponse = QueryDocResponse

@typing.final
class QueryDocGroupByRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class SparseVectorEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        value: builtins.float
        def __init__(
            self,
            *,
            key: builtins.int = ...,
            value: builtins.float = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    VECTOR_FIELD_NUMBER: builtins.int
    GROUP_BY_FIELD_FIELD_NUMBER: builtins.int
    GROUP_COUNT_FIELD_NUMBER: builtins.int
    GROUP_TOPK_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_VECTOR_FIELD_NUMBER: builtins.int
    PARTITION_FIELD_NUMBER: builtins.int
    OUTPUT_FIELDS_FIELD_NUMBER: builtins.int
    SPARSE_VECTOR_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    VECTOR_FIELD_FIELD_NUMBER: builtins.int
    group_by_field: builtins.str
    group_count: builtins.int
    group_topk: builtins.int
    filter: builtins.str
    include_vector: builtins.bool
    partition: builtins.str
    id: builtins.str
    vector_field: builtins.str
    @property
    def vector(self) -> global___Vector:
        """collection_name in metadata"""

    @property
    def output_fields(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def sparse_vector(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, builtins.float]: ...
    def __init__(
        self,
        *,
        vector: global___Vector | None = ...,
        group_by_field: builtins.str = ...,
        group_count: builtins.int = ...,
        group_topk: builtins.int = ...,
        filter: builtins.str = ...,
        include_vector: builtins.bool = ...,
        partition: builtins.str = ...,
        output_fields: collections.abc.Iterable[builtins.str] | None = ...,
        sparse_vector: collections.abc.Mapping[builtins.int, builtins.float] | None = ...,
        id: builtins.str = ...,
        vector_field: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["vector", b"vector"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["filter", b"filter", "group_by_field", b"group_by_field", "group_count", b"group_count", "group_topk", b"group_topk", "id", b"id", "include_vector", b"include_vector", "output_fields", b"output_fields", "partition", b"partition", "sparse_vector", b"sparse_vector", "vector", b"vector", "vector_field", b"vector_field"]) -> None: ...

global___QueryDocGroupByRequest = QueryDocGroupByRequest

@typing.final
class GroupResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GROUP_ID_FIELD_NUMBER: builtins.int
    DOCS_FIELD_NUMBER: builtins.int
    group_id: builtins.str
    @property
    def docs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Doc]: ...
    def __init__(
        self,
        *,
        group_id: builtins.str = ...,
        docs: collections.abc.Iterable[global___Doc] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["docs", b"docs", "group_id", b"group_id"]) -> None: ...

global___GroupResult = GroupResult

@typing.final
class QueryDocGroupByResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_ID_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    OUTPUT_FIELD_NUMBER: builtins.int
    request_id: builtins.str
    code: builtins.int
    message: builtins.str
    @property
    def output(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GroupResult]: ...
    def __init__(
        self,
        *,
        request_id: builtins.str = ...,
        code: builtins.int = ...,
        message: builtins.str = ...,
        output: collections.abc.Iterable[global___GroupResult] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["code", b"code", "message", b"message", "output", b"output", "request_id", b"request_id"]) -> None: ...

global___QueryDocGroupByResponse = QueryDocGroupByResponse

@typing.final
class FetchDocRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IDS_FIELD_NUMBER: builtins.int
    PARTITION_FIELD_NUMBER: builtins.int
    OUTPUT_FIELDS_FIELD_NUMBER: builtins.int
    INCLUDE_VECTOR_FIELD_NUMBER: builtins.int
    REFERENCE_COLLECTIONS_FIELD_NUMBER: builtins.int
    partition: builtins.str
    include_vector: builtins.bool
    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """collection_name in metadata"""

    @property
    def output_fields(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def reference_collections(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ReferenceCollection]: ...
    def __init__(
        self,
        *,
        ids: collections.abc.Iterable[builtins.str] | None = ...,
        partition: builtins.str = ...,
        output_fields: collections.abc.Iterable[builtins.str] | None = ...,
        include_vector: builtins.bool | None = ...,
        reference_collections: collections.abc.Iterable[global___ReferenceCollection] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_include_vector", b"_include_vector", "include_vector", b"include_vector"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_include_vector", b"_include_vector", "ids", b"ids", "include_vector", b"include_vector", "output_fields", b"output_fields", "partition", b"partition", "reference_collections", b"reference_collections"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_include_vector", b"_include_vector"]) -> typing.Literal["include_vector"] | None: ...

global___FetchDocRequest = FetchDocRequest

@typing.final
class FetchDocResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class OutputEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___Doc: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___Doc | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    REQUEST_ID_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    OUTPUT_FIELD_NUMBER: builtins.int
    USAGE_FIELD_NUMBER: builtins.int
    request_id: builtins.str
    code: builtins.int
    message: builtins.str
    @property
    def output(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___Doc]: ...
    @property
    def usage(self) -> global___RequestUsage:
        """optional, for serverless request"""

    def __init__(
        self,
        *,
        request_id: builtins.str = ...,
        code: builtins.int = ...,
        message: builtins.str = ...,
        output: collections.abc.Mapping[builtins.str, global___Doc] | None = ...,
        usage: global___RequestUsage | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["usage", b"usage"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["code", b"code", "message", b"message", "output", b"output", "request_id", b"request_id", "usage", b"usage"]) -> None: ...

global___FetchDocResponse = FetchDocResponse

@typing.final
class GetVersionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___GetVersionRequest = GetVersionRequest

@typing.final
class GetVersionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_ID_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    request_id: builtins.str
    code: builtins.int
    message: builtins.str
    version: builtins.str
    def __init__(
        self,
        *,
        request_id: builtins.str = ...,
        code: builtins.int = ...,
        message: builtins.str = ...,
        version: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["code", b"code", "message", b"message", "request_id", b"request_id", "version", b"version"]) -> None: ...

global___GetVersionResponse = GetVersionResponse

@typing.final
class StartImportRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _ImportType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _ImportTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[StartImportRequest._ImportType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        FULL: StartImportRequest._ImportType.ValueType  # 0
        INCREMENT: StartImportRequest._ImportType.ValueType  # 1

    class ImportType(_ImportType, metaclass=_ImportTypeEnumTypeWrapper): ...
    FULL: StartImportRequest.ImportType.ValueType  # 0
    INCREMENT: StartImportRequest.ImportType.ValueType  # 1

    class _ImportErrorMode:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _ImportErrorModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[StartImportRequest._ImportErrorMode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        ABORT: StartImportRequest._ImportErrorMode.ValueType  # 0
        CONTINUE: StartImportRequest._ImportErrorMode.ValueType  # 1

    class ImportErrorMode(_ImportErrorMode, metaclass=_ImportErrorModeEnumTypeWrapper): ...
    ABORT: StartImportRequest.ImportErrorMode.ValueType  # 0
    CONTINUE: StartImportRequest.ImportErrorMode.ValueType  # 1

    PARTITION_NAME_FIELD_NUMBER: builtins.int
    FILE_TYPE_FIELD_NUMBER: builtins.int
    IMPORT_TYPE_FIELD_NUMBER: builtins.int
    IMPORT_ERROR_MODE_FIELD_NUMBER: builtins.int
    URIS_FIELD_NUMBER: builtins.int
    partition_name: builtins.str
    """collection_name in metadata"""
    file_type: global___FileType.ValueType
    import_type: global___StartImportRequest.ImportType.ValueType
    import_error_mode: global___StartImportRequest.ImportErrorMode.ValueType
    @property
    def uris(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        partition_name: builtins.str = ...,
        file_type: global___FileType.ValueType = ...,
        import_type: global___StartImportRequest.ImportType.ValueType = ...,
        import_error_mode: global___StartImportRequest.ImportErrorMode.ValueType = ...,
        uris: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["file_type", b"file_type", "import_error_mode", b"import_error_mode", "import_type", b"import_type", "partition_name", b"partition_name", "uris", b"uris"]) -> None: ...

global___StartImportRequest = StartImportRequest

@typing.final
class StartImportResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_ID_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    OUTPUT_FIELD_NUMBER: builtins.int
    request_id: builtins.str
    code: builtins.int
    message: builtins.str
    output: builtins.str
    """job_id"""
    def __init__(
        self,
        *,
        request_id: builtins.str = ...,
        code: builtins.int = ...,
        message: builtins.str = ...,
        output: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["code", b"code", "message", b"message", "output", b"output", "request_id", b"request_id"]) -> None: ...

global___StartImportResponse = StartImportResponse

@typing.final
class DescribeImportRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    """collection_name in metadata"""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___DescribeImportRequest = DescribeImportRequest

@typing.final
class DescribeImportResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_ID_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    OUTPUT_FIELD_NUMBER: builtins.int
    request_id: builtins.str
    code: builtins.int
    message: builtins.str
    @property
    def output(self) -> global___ImportInfo: ...
    def __init__(
        self,
        *,
        request_id: builtins.str = ...,
        code: builtins.int = ...,
        message: builtins.str = ...,
        output: global___ImportInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["output", b"output"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["code", b"code", "message", b"message", "output", b"output", "request_id", b"request_id"]) -> None: ...

global___DescribeImportResponse = DescribeImportResponse

@typing.final
class CancelImportRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    """collection_name in metadata"""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___CancelImportRequest = CancelImportRequest

@typing.final
class CancelImportResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_ID_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    request_id: builtins.str
    code: builtins.int
    message: builtins.str
    def __init__(
        self,
        *,
        request_id: builtins.str = ...,
        code: builtins.int = ...,
        message: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["code", b"code", "message", b"message", "request_id", b"request_id"]) -> None: ...

global___CancelImportResponse = CancelImportResponse
