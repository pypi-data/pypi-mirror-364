name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 0.2.8)'
        required: true
        type: string

jobs:
  # First run all tests on all Python versions
  test-all-versions:
    uses: ./.github/workflows/test-multi-python.yml
    secrets: inherit

  release:
    needs: test-all-versions
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
    
    - name: Install dependencies
      run: |
        uv venv
        uv pip install --all-extras .
        uv pip install build twine
    
    - name: Verify version
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION="${GITHUB_REF#refs/tags/v}"
        fi
        PYPROJECT_VERSION=$(grep -E "^version = " pyproject.toml | cut -d'"' -f2)
        if [ "$VERSION" != "$PYPROJECT_VERSION" ]; then
          echo "Version mismatch: tag/input=$VERSION, pyproject.toml=$PYPROJECT_VERSION"
          exit 1
        fi
        echo "VERSION=$VERSION" >> $GITHUB_ENV
    
    - name: Build package
      run: |
        uv build
    
    - name: Check package
      run: |
        uv run twine check dist/*
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ env.VERSION }}
        name: Release v${{ env.VERSION }}
        body: |
          ## aceiot-models v${{ env.VERSION }}
          
          ### What's Changed
          - See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details
          
          ### Python Version Support
          - Python 3.10, 3.11, 3.12, 3.13
          
          ### Installation
          ```bash
          pip install aceiot-models==${{ env.VERSION }}
          ```
        files: |
          dist/*
        draft: false
        prerelease: false
    
    - name: Publish to PyPI
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        uv run twine upload dist/*