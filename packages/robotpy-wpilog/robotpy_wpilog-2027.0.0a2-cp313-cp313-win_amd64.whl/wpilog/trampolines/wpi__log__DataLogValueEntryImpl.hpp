// This file is autogenerated. DO NOT EDIT

#pragma once
#include <semiwrap.h>

// wrapped header

#include <wpi/datalog/DataLog.h>

#include <pybind11\stl.h>
#include <wpi_span_type_caster.h>
#include <wpystruct.h>

namespace swgen {

using namespace wpi::log;

template <typename T>
struct bind_wpi__log__DataLogValueEntryImpl {
  py::class_<typename wpi::log::DataLogValueEntryImpl<T>, py::smart_holder, wpi::log::DataLogEntry> cls_DataLogValueEntryImpl;

  py::module &m;
  std::string clsName;
  bind_wpi__log__DataLogValueEntryImpl(py::module &m, const char * clsName) :
    cls_DataLogValueEntryImpl(m, clsName),
    m(m),
    clsName(clsName) {
  }

  void finish(const char * set_doc = NULL, const char * add_doc = NULL) {
    cls_DataLogValueEntryImpl
      .def("hasLastValue", &wpi::log::DataLogValueEntryImpl<T>::HasLastValue
        , release_gil()
        , py::doc(
        "Gets whether there is a last value.\n"
        "\n"
        ".. note:: The last value is local to this class instance and updated only with\n"
        "   Update(), not Append().\n"
        "\n"
        ":returns: True if last value exists, false otherwise.")
      )
      .def("getLastValue", &wpi::log::DataLogValueEntryImpl<T>::GetLastValue
        , release_gil()
        , py::doc(
        "Gets the last value.\n"
        "\n"
        ".. note:: The last value is local to this class instance and updated only with\n"
        "   Update(), not Append().\n"
        "\n"
        ":returns: Last value (empty if no last value)")
      )
    ;
    if (set_doc) {
      cls_DataLogValueEntryImpl.doc() = set_doc;
    }
    if (add_doc) {
      cls_DataLogValueEntryImpl.doc() = py::cast<std::string>(cls_DataLogValueEntryImpl.doc()) + add_doc;
    }
  }
}; // struct bind_wpi__log__DataLogValueEntryImpl

}; // namespace swgen
