// This file is autogenerated. DO NOT EDIT

#pragma once
#include <semiwrap.h>

// wrapped header

#include <wpi/datalog/DataLog.h>

namespace wpi::log {

template <typename CfgBase = swgen::EmptyTrampolineCfg>
struct PyTrampolineCfg_DataLog : CfgBase
{
  using Base = wpi::log::DataLog;
  using override_base_Flush_v = wpi::log::DataLog;
  using override_base_Pause_v = wpi::log::DataLog;
  using override_base_Resume_v = wpi::log::DataLog;
  using override_base_Stop_v = wpi::log::DataLog;
  using override_base_BufferHalfFull_v = wpi::log::DataLog;
  using override_base_BufferFull_v = wpi::log::DataLog;
};

template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_DataLog : PyTrampolineBase {
  using PyTrampolineBase::PyTrampolineBase;

  #ifndef SWGEN_DISABLE_Flush_v
    void Flush() override {
      using LookupBase = typename PyTrampolineCfg::Base;
      SEMIWRAP_OVERRIDE_PURE_NAME(DataLog, PYBIND11_TYPE(void), LookupBase,
        "flush", Flush, );
    }
  #endif

  #ifndef SWGEN_DISABLE_Pause_v
    void Pause() override {
      using LookupBase = typename PyTrampolineCfg::Base;
      using CxxCallBase = typename PyTrampolineCfg::override_base_Pause_v;
      PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(void), LookupBase,
        "pause", );
      return CxxCallBase::Pause();
    }
  #endif

  #ifndef SWGEN_DISABLE_Resume_v
    void Resume() override {
      using LookupBase = typename PyTrampolineCfg::Base;
      using CxxCallBase = typename PyTrampolineCfg::override_base_Resume_v;
      PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(void), LookupBase,
        "resume", );
      return CxxCallBase::Resume();
    }
  #endif

  #ifndef SWGEN_DISABLE_Stop_v
    void Stop() override {
      using LookupBase = typename PyTrampolineCfg::Base;
      using CxxCallBase = typename PyTrampolineCfg::override_base_Stop_v;
      PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(void), LookupBase,
        "stop", );
      return CxxCallBase::Stop();
    }
  #endif

  #ifndef SWGEN_DISABLE_BufferHalfFull_v
    void BufferHalfFull() override {
      using LookupBase = typename PyTrampolineCfg::Base;
      using CxxCallBase = typename PyTrampolineCfg::override_base_BufferHalfFull_v;
      PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(void), LookupBase,
        "_bufferHalfFull", );
      return CxxCallBase::BufferHalfFull();
    }
  #endif

  #ifndef SWGEN_DISABLE_BufferFull_v
    bool BufferFull() override {
      using LookupBase = typename PyTrampolineCfg::Base;
      SEMIWRAP_OVERRIDE_PURE_NAME(DataLog, PYBIND11_TYPE(bool), LookupBase,
        "_bufferFull", BufferFull, );
    }
  #endif

  #ifndef SWGEN_DISABLE_StartFile_v
    #ifndef SWGEN_UDISABLE_wpi__log__DataLog_StartFile
      using wpi::log::DataLog::StartFile;
      #define SWGEN_UDISABLE_wpi__log__DataLog_StartFile
    #endif
  #endif

  using wpi::log::DataLog::kBlockSize;
};

}; // namespace wpi::log
