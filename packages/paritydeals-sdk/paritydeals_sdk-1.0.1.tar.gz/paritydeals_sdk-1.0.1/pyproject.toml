# pyproject.toml

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"
# Specifies the tools needed to build your package. setuptools is a common choice.

[project]
name = "paritydeals-sdk"  # This is how your package will be named on PyPI.
version = "1.0.1"        # Start with an initial version. Increment as you make changes.
                         # Match this with __version__ in your paritydeals_sdk/__init__.py
authors = [
    { name = "Geo Jacob / ParityDeals", email = "geo@paritydeals.com" },
    # Add other authors if applicable
]
description = "A Python SDK for interacting with the ParityDeals API to report usage and events. Supports synchronous and asynchronous operations using a unified client."
readme = "README.md" # Points to your README file for the long description on PyPI.
requires-python = ">=3.8" # Specify the minimum Python version your SDK supports.
license = { file = "LICENSE" } # Assumes you have a LICENSE file (e.g., LICENSE or LICENSE.txt).
keywords = ["sdk", "api", "paritydeals", "reporting", "events", "usage", "async", "sync", "httpx"]
classifiers = [
    # Choose appropriate classifiers from https://pypi.org/classifiers/
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License", # Or your chosen license (e.g., "Apache Software License")
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed", # Indicates your package supports type hinting (PEP 561).
]

# Core dependencies required for your SDK to function.
dependencies = [
    "httpx>=0.23.0,<1.0",
    "pydantic>=2.0,<3.0"
]

# URLs related to your project.
[project.urls]
"Homepage" = "https://github.com/paritydeals/paritydeals-python-sdk" # Replace with your actual repository URL.
"Bug Tracker" = "https://github.com/paritydeals/paritydeals-python-sdk/issues" # Replace.
# "Documentation" = "https://your-sdk-docs-url.com" # If you have separate documentation.

# Optional dependencies, e.g., for running tests or development.
[project.optional-dependencies]
test = [
    "pytest>=7.0",          # For running tests (alternative to unittest.main).
    "pytest-asyncio>=0.18", # For running asyncio tests with pytest.
    # "coverage[toml]>=6.0",  # For test coverage reports.
    # "flake8",               # For linting.
    # "mypy",                 # For static type checking.
]
dev = [
    # You can add other development tools here.
    # Example: "paritydeals-sdk[test]", # Includes all 'test' dependencies
    # "sphinx", # For documentation
    # "black",  # For code formatting
]

# Configuration for setuptools to find your package.
[tool.setuptools.packages.find]
where = ["src"]  # Tells setuptools to look for packages in the current directory (project root).
               # Assumes your 'paritydeals_sdk' package directory is at the root.
include = ["paritydeals_sdk*"]  # Pattern to include your package directory.
exclude = ["tests*", "docs*", "examples*"]  # Exclude tests and other non-package directories.

# Include non-code files like py.typed within your package.
[tool.setuptools.package-data]
paritydeals_sdk = ["py.typed"]

# If you plan to use pytest for running your tests, you can configure it here.
[tool.pytest.ini_options]
python_files = "test_*.py" # Standard naming convention for test files.
# python_classes = "Test*"   # Standard naming convention for test classes.
# python_functions = "test_*" # Standard naming convention for test functions.
asyncio_mode = "auto" # Recommended mode for pytest-asyncio.
# addopts = "--cov=paritydeals_sdk --cov-report=html" # Example for adding coverage.
# testpaths = [ # Explicitly define where pytest should look for tests.
#     "tests",
# ]

# Configuration for type checking with MyPy (optional, but good practice).
# [tool.mypy]
# python_version = "3.8"
# warn_return_any = true
# warn_unused_configs = true
# packages = ["paritydeals_sdk"]
# # You might need to ignore missing imports for third-party libraries if they don't have stubs.
# # ignore_missing_imports = true

# Configuration for linters like Ruff (replaces Flake8, isort, Black in many cases) (optional).
# [tool.ruff]
# line-length = 88
# select = ["E", "W", "F", "I", "C", "B", "RUF"] # Example rule set.
# ignore = ["E501"] # Example: ignore line too long if necessary for specific cases.
# target-version = "py38"

# [tool.ruff.isort]
# known-first-party = ["paritydeals_sdk"]
