name: Create Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for generating release notes
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
    
    - name: Set up Python
      run: uv python install 3.12
    
    - name: Build package
      run: |
        uv build
    
    - name: Generate Release Notes
      id: release_notes
      run: |
        # Extract version from tag
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        
        # Get the previous tag
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        
        # Generate changelog between tags
        if [ -n "$PREVIOUS_TAG" ]; then
          echo "## What's Changed" > release_notes.md
          echo "" >> release_notes.md
          git log --pretty=format:"* %s by @%an" $PREVIOUS_TAG..HEAD >> release_notes.md
        else
          echo "## Initial Release" > release_notes.md
          echo "" >> release_notes.md
          echo "First release of mcp-deadmansnitch!" >> release_notes.md
        fi
        
        echo "" >> release_notes.md
        echo "## Installation" >> release_notes.md
        echo "" >> release_notes.md
        echo "\`\`\`bash" >> release_notes.md
        echo "pip install mcp-deadmansnitch==$VERSION" >> release_notes.md
        echo "\`\`\`" >> release_notes.md
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        body_path: release_notes.md
        files: |
          dist/*.whl
          dist/*.tar.gz
        draft: false
        prerelease: ${{ contains(github.ref, '-rc') || contains(github.ref, '-beta') || contains(github.ref, '-alpha') }}
        generate_release_notes: true