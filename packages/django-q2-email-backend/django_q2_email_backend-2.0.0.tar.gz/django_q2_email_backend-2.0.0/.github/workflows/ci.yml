name: CI
on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]
  release:
    types:
      - published

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  UV_SYSTEM_PYTHON: 1

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        django-version: ["4.2", "5.1", "5.2"]
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        exclude:
          - django-version: "5.2"
            python-version: "3.10"
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Check out code
        uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          cache-dependency-glob: pyproject.toml
          enable-cache: true

      - name: Install dependencies
        run: |
          uv pip install -r pyproject.toml --group test
          uv pip install -e .
          uv pip install django~=${{ matrix.django-version }}.0
      - name: Run tests
        run: python -m coverage run runtests.py
      - name: Generate coverage report
        run: python -m coverage xml
      - name: Coveralls
        uses: coverallsapp/github-action@v2

  release:
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-latest
    needs: [test]
    environment:
      name: pypi
      url: https://pypi.org/p/django-q2-email-backend
    permissions:
      id-token: write
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Check out code
        uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          cache-dependency-glob: pyproject.toml
          enable-cache: true
      - name: Build package
        run: uv build
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
