[tox]
base_python = py3
envlist =
    lint
    test
    coverage
isolated_build = true
platform =
    linux
    windows

[testenv:lint]
description = Format the code base to adhere to our styles, and complain about what we cannot do automatically
passenv =
    PRE_COMMIT_HOME
    PROGRAMDATA
skip_install = true
groups = lint
commands =
    pre-commit run --all-files

[testenv:test]
description = Run the tests with pytest
setenv =
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}{/}.coverage.{envname}}
    PIP_DISABLE_PIP_VERSION_CHECK = 1
    MPLBACKEND = agg  # Prevent TCL issues
groups = test
commands =
    pytest \
      --cov=IMTreatment \
      --cov-config="{toxinidir}{/}tox.ini" \
      --cov-report= \
      --cov-fail-under=0 \
      --junitxml={toxworkdir}{/}junit.{envname}.xml \
      {toxinidir}

[testenv:coverage]
description = Combine coverage data after tests and create report
setenv =
    COVERAGE_FILE = {toxworkdir}{/}.coverage
skip_install = true
groups = coverage
commands =
    coverage combine --keep
    coverage html --show-contexts -d {toxworkdir}{/}htmlcov
depends = test, clean

[coverage:run]
branch = false
parallel = true
omit =
    tests/*
    IMTreatment/_version.py
dynamic_context = test_function

[coverage:report]
fail_under = 90
skip_empty = True
sort = Miss
show_missing = True
exclude_also =
    \#\s*pragma: no cover
    ^\s*raise AssertionError\b
    ^\s*raise NotImplementedError\b
    ^\s*return NotImplemented\b
    ^\s*raise$
    ^if __name__ == ['"]__main__["']:$
    ^\s*@abc.abstract

[pytest]
addopts = --ignore=__pypackages__ -ra --durations=0 --showlocals
; -n logical
; --pdb
; --cache-clear
; --sw --strict-markers
testpaths = tests
xfail_strict = True
