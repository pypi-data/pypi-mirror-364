[package]
name = "bc_ecap_sdk"
version = "0.2.0"
edition = "2021"
description = "BrainCo FW proto message SDK"
repository = "https://github.com/BrainCoTech/bc_ecap_sdk"
authors = ["BrainCo"]
license = ""
publish = false
exclude = ["index.node"]

[badges]
maintenance = { status = "actively-developed" }

[lib]
# crate-type = ["cdylib"]
# crate-type = ["staticlib", "cdylib", "rlib"] # 生成静态库（适用于 iOS）
crate-type = ["cdylib", "rlib"] # run example need rlib
# crate-type = ["rlib"] # run example need rlib

[package.metadata.maturin]
name = "bc_ecap_sdk"

[package.metadata.pyo3]
generate-type-hints = true # 自动生成 .pyi

[profile.release]
lto = true
strip = true

[package.metadata.wasm-pack.profile.release]
wasm-opt = false

[features]
default = [
  # "python",
  "examples",
  "eeg-cap",
  "ble",
  "node_addons",
]

serial = ["dep:tokio-serial"]

node_addons = ["dep:neon"]
cbindgen = ["tokio/rt-multi-thread", "tracing-log"] # 移动端
ble-cbindgen = ["cbindgen", "ble"]

examples = [
  "desktop",
  "tracing-log",
  "request",
  "tokio/rt-multi-thread",
  "ble",
  "tcp",
]
stub_gen = []
nodejs = ["tracing-log"]
python = [
  "dep:pyo3",
  "dep:pyo3-async-runtimes",
  "dep:pyo3-log",
  "dep:pyo3-stub-gen",
  "desktop",
  "ble",
  "tcp",
]
desktop = ["dep:machine-uid", "dep:zip"]

tracing-log = []

mdns = ["dep:mdns-sd"]
tcp = ["tokio/rt-multi-thread", "tokio/net", "mdns"]
request = ["dep:reqwest"]                            # mio-1.0.2 wasm not support
ble = ["dep:btleplug"]                               # "dep:bluez-async"

sci = ["dep:sci-rs", "dep:rustfft", "dep:nalgebra"]
edu = ["sci"]
eeg-cap = ["sci"]

[dependencies]
byteorder = "1.5.0"
chrono = "0.4.38"
crc16 = "0.4.0"
futures = "0.3.30"
lazy_static = "1.5.0"
strum = "0.26.3"
strum_macros = "0.26.4"
thiserror = "2.0.3"
# Only features sync,macros,io-util,rt,time are supported on wasm
tokio = { version = "1.39.3", default-features = false, features = [
  "sync",
  "macros",
  "io-util",
  "rt",
  "time",
] }
tokio-stream = { version = "0.1.17", features = ["sync"] }
tokio-serial = { version = "5.4.5", default-features = false, optional = true }

tracing = "0.1.40"
tracing-subscriber = "0.3.18"
pin-project = "1.1.5"
serde_json = "1.0.128"
serde_derive = "1.0.210"
serde = { version = "1.0.210", features = ["derive"] }
prost = "0.13.1"
pbjson = "0.7.0"
pbjson-types = "0.7.0"
log = "0.4.22"
fern = { version = "0.7.1", features = ["colored"] }
env_filter = "0.1.2"
cfg-if = "1.0.0"
once_cell = "1.20.2"
futures-util = "0.3.31"
anyhow = "1.0.89"
async-std = "1.13.0"

mdns-sd = { version = "0.12.0", optional = true }
reqwest = { version = "0.12.8", features = [
  "blocking",
  "json",
], optional = true }
zip = { version = "2.2.0", optional = true }
machine-uid = { version = "0.5.3", optional = true }

pyo3 = { version = "^0.25.0", features = [
  "extension-module",
  "auto-initialize",
  "abi3-py38",
], optional = true }
pyo3-async-runtimes = { version = "^0.25.0", features = [
  "attributes",
  "tokio-runtime",
], optional = true }
pyo3-log = { version = "^0.12.0", optional = true }
pyo3-stub-gen = { version = "^0.10.0", optional = true }
sci-rs = { version = "0.4.1", optional = true, features = ["std"] }
rustfft = { version = "6.2.0", optional = true }
nalgebra = { version = "0.33.2", optional = true }
num-traits = "0.2.19"
rand = "0.8.5"
crc32fast = "1.4.2"
crc = "3.2.1"
hex = "0.4.3"
# btleplug = { version = "0.11.7", path = "../rust/btleplug", optional = true }
btleplug = { git = "https://github.com/Yongle-Fu/btleplug", branch = "master", optional = true }
# bluez-async = { version = "0.8.0", optional = true }
tflite = { version = "0.9.8", optional = true }
uuid = "1.11.0"
async-trait = "0.1.85"
ring = { version = "0.17.11", optional = true }
neon = { version = "1.0.0", optional = true }
humantime = "2.2.0"
parking_lot = "0.12.3"
num-complex = "0.4.6"

[target.'cfg(target_family = "wasm")'.dependencies]
js-sys = "0.3.70"
tracing-wasm = "0.2.1"
wasm-bindgen-futures = "0.4.43"
wasm-bindgen = "0.2.97"
getrandom = { version = "^0.2", features = ["js"] }
serde-wasm-bindgen = "0.6.5"
binrw = "0.14.1"

# [target.wasm32-wasi.dependencies]
# # wasi = "0.10.2+wasi-snapshot-preview1"
# wasi = "0.13.3"

[target.'cfg(target_os = "macos")'.dependencies]
CoreFoundation-sys = { version = "0.1.4" }
IOKit-sys = { version = "0.1.5" }          # macOS only for read serial number

# [target.'cfg(target_os = "windows")'.dependencies]
# machine-uid = { version = "0.5.3", optional = true }

[dev-dependencies]
plotters = "0.3.5"

[build-dependencies]
cfg-if = "1.0.0"
prost-build = "0.13.1"
pbjson-build = "0.7.0"
napi-build-ohos = "1.0.3"
cc = "1.2.7"
bindgen = "0.69.5"
cbindgen = "0.26.0"
csbindgen = "1.9.3"

# [[example]]
# name = "mdns-test"
# path = "examples/eeg-cap-test-mdns.rs"
# required-features = ["eeg-cap"]

# [[example]]
# name = "pyo3"
# path = "examples/python/pyo3.rs"
# required-features = ["python", "morpheus", "examples"]

[[example]]
name = "sci-test"
path = "examples/eeg-cap/sci-test.rs"
required-features = ["eeg-cap", "examples"]

[[example]]
name = "notch-test"
path = "examples/eeg-cap/notch-test.rs"
required-features = ["eeg-cap", "examples"]

[[example]]
name = "fft-test"
path = "examples/eeg-cap/fft-test.rs"
required-features = ["eeg-cap", "examples"]

[[example]]
name = "ecap-imp-offline"
path = "examples/eeg-cap/ecap-imp-offline.rs"
required-features = ["eeg-cap", "examples"]

[[example]]
name = "ecap-tcp"
path = "examples/eeg-cap/ecap-tcp.rs"
required-features = ["eeg-cap", "examples"]

[[example]]
name = "ecap-msg-test"
path = "examples/eeg-cap/ecap-msg-test.rs"
required-features = ["eeg-cap", "examples"]

[[example]]
name = "eeg-cap-ble-test"
path = "examples/eeg-cap/ble-test.rs"
required-features = ["eeg-cap", "examples", "ble"]

[[example]]
name = "ecap-tcp-client"
path = "examples/eeg-cap/tcp-client.rs"
required-features = ["eeg-cap", "examples"]

[[example]]
name = "ecap-tcp-server"
path = "examples/eeg-cap/tcp-server.rs"
required-features = ["eeg-cap", "examples"]

[[example]]
name = "tcp-client"
path = "examples/ble/tcp-client.rs"

[[example]]
name = "tcp-server"
path = "examples/ble/tcp-server.rs"

[[example]]
name = "hello"
path = "examples/hello.rs"

[[bin]]
name = "stub_gen"
doc = false
