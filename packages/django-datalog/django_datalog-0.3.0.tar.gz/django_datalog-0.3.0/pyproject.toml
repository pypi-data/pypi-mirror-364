[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "django-datalog"
dynamic = ["version"]
description = "Django Datalog - Logic programming and inference engine for Django applications"
readme = "README.md"
license = "MIT"
requires-python = ">=3.12"
authors = [
    { name = "Eddy Ernesto del Valle Pino", email = "eddy@edelvalle.me" },
]
keywords = [
    "django",
    "datalog", 
    "logic-programming",
    "inference-engine",
    "facts",
    "rules",
    "query",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 5.0",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "Django>=5",
    "uuid6>=2024.1.12",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-django>=4.5",
    "pytest-cov>=4.0",
    "ruff>=0.1",
    "basedpyright>=1.12",
]
test = [
    "pytest>=7.0", 
    "pytest-django>=4.5",
    "pytest-cov>=4.0",
]
docs = [
    "mkdocs>=1.5",
    "mkdocs-material>=9.0",
    "mkdocstrings[python]>=0.24",
]

[project.urls]
Homepage = "https://github.com/edelvalle/django-datalog"
Documentation = "https://django-datalog.readthedocs.io/"
Repository = "https://github.com/edelvalle/django-datalog.git"
Issues = "https://github.com/edelvalle/django-datalog/issues"
Changelog = "https://github.com/edelvalle/django-datalog/blob/main/CHANGELOG.md"

[tool.hatch.version]
path = "django_datalog/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/django_datalog",
    "/tests",
    "/README.md",
    "/CHANGELOG.md",
    "/LICENSE",
]

[tool.hatch.build.targets.wheel]
packages = ["django_datalog"]

[tool.ruff]
target-version = "py313"
line-length = 100

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"django_datalog/tests/*" = ["F821", "E712", "F841"]  # Allow undefined names, True comparisons, and unused vars in tests

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
addopts = "--tb=short --strict-markers --disable-warnings"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["django_datalog"]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.basedpyright]
pythonVersion = "3.13"
typeCheckingMode = "basic"
include = ["django_datalog"]
exclude = [
    "**/__pycache__",
    "build", 
    "dist",
    ".venv",
    ".pytest_cache",
    "test_project",
    "**/migrations/**",
    "**/tests/**",
]
reportMissingImports = true
reportMissingTypeStubs = false
reportAttributeAccessIssue = false
reportAssignmentType = false
reportIncompatibleMethodOverride = false
reportRedeclaration = false
reportOperatorIssue = false
reportArgumentType = false
reportCallIssue = false
reportGeneralTypeIssues = false
reportOptionalOperand = false
reportOptionalMemberAccess = false
reportOptionalCall = false
reportOptionalIterable = false
reportOptionalContextManager = false
reportOptionalSubscript = false
reportPrivateUsage = false
reportTypeCommentUsage = false
reportUnknownParameterType = false
reportUnknownArgumentType = false
reportUnknownMemberType = false
reportUnknownVariableType = false
reportUnknownLambdaType = false


