[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "crystalyse-ai"
version = "1.0.13"
description = "CrystaLyse.AI - Autonomous AI agents for accelerated inorganic materials design through natural language interfaces"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "CrystaLyse.AI Development Team"},
]
maintainers = [
    {name = "CrystaLyse.AI Development Team"},
]
keywords = [
    "materials-design",
    "crystal-structure-prediction",
    "formation-energy",
    "computational-materials-science",
    "ai",
    "chemistry",
    "inorganic-materials",
    "autonomous-agents"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.11"
dependencies = [
    # Core AI and Agent Framework
    "openai>=1.0.0",
    "openai-agents>=0.0.16",
    
    # Chemistry Core Libraries
    "rdkit>=2023.9.1",
    "pymatgen>=2024.1.0",
    "ase>=3.22.0",
    
    # AI-Powered Chemistry Tools
    "smact>=2.7.0",
    "torch>=2.0.0",
    "mace-torch>=0.3.4",
    "gitpython>=3.1.0",
    
    # Model Context Protocol
    "fastmcp>=0.5.0",
    
    # Data Processing
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scipy>=1.11.0",
    
    # Type Safety and Validation
    "typing-extensions>=4.5.0",
    "pydantic>=2.0.0",
    
    # CLI and UI
    "click>=8.1.0",
    "rich>=13.0.0",
    "prompt-toolkit>=3.0.0",
    
    # Async and Networking
    "asyncio>=3.4.3",
    "httpx>=0.24.0",
    "websockets>=11.0.0",
    
    # File and Data Handling
    "PyYAML>=6.0.0",
    "toml>=0.10.0",
    "python-dotenv>=1.0.0",
    
    # MCP Server Dependencies
    "uvicorn>=0.23.0",
    "fastapi>=0.104.0",
    "starlette>=0.27.0",
]

[project.optional-dependencies]
# Visualisation capabilities
visualization = [
    "matplotlib>=3.7.0",
    "plotly>=5.18.0",
    "py3Dmol>=2.0.4",
    "kaleido>=0.2.1",
    "pymatviz>=0.8.5",
    "seaborn>=0.12.0",
]

# Quantum chemistry tools
quantum = [
    "pyscf>=2.3.0",
    "qiskit-nature>=0.7.0",
    "pennylane>=0.32.0",
]

# Materials databases and analysis
materials = [
    "pymatgen>=2024.1.0",
    "matminer>=0.9.0",
    "mp-api>=0.41.0",
]

# Machine learning extensions
ml = [
    "scikit-learn>=1.3.0",
    "torch>=2.0.0",
    "transformers>=4.30.0",
]

# Development tools
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.11.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "pre-commit>=3.0.0",
]

# Documentation tools
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.24.0",
    "mkdocs-jupyter>=0.24.0",
]

# All optional dependencies
all = [
    "crystalyse-ai[visualization,quantum,materials,ml]",
]

[project.urls]
Homepage = "https://github.com/ryannduma/CrystaLyse.AI"
Documentation = "https://crystalyse-ai.readthedocs.io/"
Repository = "https://github.com/ryannduma/CrystaLyse.AI.git"
Issues = "https://github.com/ryannduma/CrystaLyse.AI/issues"
Changelog = "https://github.com/ryannduma/CrystaLyse.AI/blob/main/CHANGELOG.md"

[project.scripts]
crystalyse = "crystalyse_ai.cli:main"
crystalyse-creative-server = "crystalyse_ai.mcp_servers.creative.server:main"
crystalyse-unified-server = "crystalyse_ai.mcp_servers.unified.server:main"
crystalyse-visualization-server = "crystalyse_ai.mcp_servers.visualization.server:main"

[project.entry-points."crystalyse_ai.tools"]
smact = "crystalyse_ai.tools.smact:SMACTTool"
chemeleon = "crystalyse_ai.tools.chemeleon:ChemeleonTool"
mace = "crystalyse_ai.tools.mace:MACETool"
visualization = "crystalyse_ai.tools.visualization:VisualizationTool"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["crystalyse_ai*"]
exclude = ["tests*", "docs*"]

[tool.setuptools.package-data]
"crystalyse_ai" = [
    "prompts/*.md",
    "ui_config/*.json",
    "mcp_servers/*/ckpts/*.ckpt",
    "assets/*.png",
    "assets/*.svg",
]

# Code quality tools configuration
[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["S101", "ARG", "FBT"]

[tool.ruff.isort]
known-first-party = ["crystalyse_ai"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.mypy-tests]
disallow_untyped_defs = false

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]