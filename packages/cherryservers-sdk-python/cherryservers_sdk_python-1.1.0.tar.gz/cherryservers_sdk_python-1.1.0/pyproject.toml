[project]
name = "cherryservers-sdk-python"
version = "1.1.0"
description = "The official SDK for interacting with the Cherry Servers API"
authors = [{ name = "Cherry Servers", email = "support@cherryservers.com" }]
readme = "README.md"
license = "GPL-3.0-or-later"
keywords = ["cherry-servers", "api", "client"]
requires-python = ">=3.10,<4.0.0"
dependencies = [
    "requests (>=2.32.3,<3.0.0)",
    "pydantic (>=2.10.4,<3.0.0)"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

[project.urls]
Homepage = "https://github.com/cherryservers/cherryservers-sdk-python"
Documentation = "https://cherryservers-sdk-python.readthedocs.io/en/latest/"
Repository = "https://github.com/cherryservers/cherryservers-sdk-python"
Changelog = "https://github.com/cherryservers/cherryservers-sdk-python/blob/main/CHANGELOG.md"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
ruff = "^0.8.6"
pre-commit = "^4.0.1"
mypy = "^1.14.1"
pytest = "^8.3.3"
pytest-cov = "^6.0.0"
types-requests = "^2.32.0"
git-cliff = "^2.7.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
Sphinx = "^8.1.3"
sphinx-rtd-theme = "^3.0.1"
myst-parser ="^4.0.0"

[tool.ruff]
line-length = 88
indent-width = 4
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "docs"
]

[tool.ruff.lint]
select = ["ALL"]
ignore = ["D203", "D104", "D211", "D213", "E501", "COM812", "ISC001"]

[tool.ruff.lint.per-file-ignores]
# Explicit re-exports is fine in __init__.py, still a code smell elsewhere.
"__init__.py" = ["PLC0414"]
"tests/*" = ["S101"]
# Unit tests often need to mock HTTP/S responses, which requires private member access.
"tests/unit/*" = ["SLF001"]

[tool.ruff.lint.flake8-type-checking]
runtime-evaluated-base-classes = ["pydantic.BaseModel", "cherry._models.DefaultModel"]

[tool.ruff.lint.pycodestyle]
max-doc-length = 88

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
