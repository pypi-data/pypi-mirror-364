# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from vivintpy.proto import beam_pb2 as vivintpy_dot_proto_dot_beam__pb2


class BeamStub(object):
    """usage:
    Compiled by 'protoc -I=. --go_out=plugins=grpc:. --python_out=. --cpp_out=./cpp beam.proto'
    for ios:
    protoc -I=. --plugin=protoc-gen-grpc=/usr/local/bin/grpc_objective_c_plugin --objc_out=objc --grpc_out=objc beam.proto

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Ping = channel.unary_unary(
                '/beam.Beam/Ping',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.Response.FromString,
                )
        self.SetDeviceName = channel.unary_unary(
                '/beam.Beam/SetDeviceName',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDeviceNameRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDeviceNameResponse.FromString,
                )
        self.GetCameraTechnicalInfo = channel.unary_unary(
                '/beam.Beam/GetCameraTechnicalInfo',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.GetCameraTechnicalInfoRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.GetCameraTechnicalInfoResponse.FromString,
                )
        self.GetCameraSettings = channel.unary_unary(
                '/beam.Beam/GetCameraSettings',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.GetCameraSettingsRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.GetCameraSettingsResponse.FromString,
                )
        self.GetPanelSettings = channel.unary_unary(
                '/beam.Beam/GetPanelSettings',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.GetPanelSettingsRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.GetPanelSettingsResponse.FromString,
                )
        self.SetCameraPrivacyMode = channel.unary_unary(
                '/beam.Beam/SetCameraPrivacyMode',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetCameraPrivacyModeRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetCameraPrivacyModeResponse.FromString,
                )
        self.AdjustCameraToXyz = channel.unary_unary(
                '/beam.Beam/AdjustCameraToXyz',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.AdjustCameraToXyzRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.AdjustCameraToXyzResponse.FromString,
                )
        self.SetCameraPlaybackEnabled = channel.unary_unary(
                '/beam.Beam/SetCameraPlaybackEnabled',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetCameraPlaybackEnabledRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetCameraPlaybackEnabledResponse.FromString,
                )
        self.SetDetectionWindows = channel.unary_unary(
                '/beam.Beam/SetDetectionWindows',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDetectionWindowsRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDetectionWindowsResponse.FromString,
                )
        self.SetChimeVolume = channel.unary_unary(
                '/beam.Beam/SetChimeVolume',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetChimeVolumeRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetChimeVolumeResponse.FromString,
                )
        self.SetChimeMute = channel.unary_unary(
                '/beam.Beam/SetChimeMute',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetChimeMuteRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetChimeMuteResponse.FromString,
                )
        self.SetVideoQuality = channel.unary_unary(
                '/beam.Beam/SetVideoQuality',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetVideoQualityRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetVideoQualityResponse.FromString,
                )
        self.SetNightVision = channel.unary_unary(
                '/beam.Beam/SetNightVision',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetNightVisionRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetNightVisionResponse.FromString,
                )
        self.SetIRLED = channel.unary_unary(
                '/beam.Beam/SetIRLED',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetIRLEDRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetIRLEDResponse.FromString,
                )
        self.SetRotateImage = channel.unary_unary(
                '/beam.Beam/SetRotateImage',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetRotateImageRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetRotateImageResponse.FromString,
                )
        self.SetMaintainZoom = channel.unary_unary(
                '/beam.Beam/SetMaintainZoom',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetMaintainZoomRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetMaintainZoomResponse.FromString,
                )
        self.SetStatusLight = channel.unary_unary(
                '/beam.Beam/SetStatusLight',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetStatusLightRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetStatusLightResponse.FromString,
                )
        self.SetAudioRecording = channel.unary_unary(
                '/beam.Beam/SetAudioRecording',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetAudioRecordingRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetAudioRecordingResponse.FromString,
                )
        self.SetDoorbellChime = channel.unary_unary(
                '/beam.Beam/SetDoorbellChime',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDoorbellChimeRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDoorbellChimeResponse.FromString,
                )
        self.SetDoorbellMuted = channel.unary_unary(
                '/beam.Beam/SetDoorbellMuted',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDoorbellMutedRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDoorbellMutedResponse.FromString,
                )
        self.SetVisitorChime = channel.unary_unary(
                '/beam.Beam/SetVisitorChime',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetVisitorChimeRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetVisitorChimeResponse.FromString,
                )
        self.SetPackageChime = channel.unary_unary(
                '/beam.Beam/SetPackageChime',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetPackageChimeRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetPackageChimeResponse.FromString,
                )
        self.SetUseAsDoorbellChimeExtender = channel.unary_unary(
                '/beam.Beam/SetUseAsDoorbellChimeExtender',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetUseAsDoorbellChimeExtenderRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetUseAsDoorbellChimeExtenderResponse.FromString,
                )
        self.SetExtendSiren = channel.unary_unary(
                '/beam.Beam/SetExtendSiren',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetExtendSirenRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetExtendSirenResponse.FromString,
                )
        self.SetQuietMode = channel.unary_unary(
                '/beam.Beam/SetQuietMode',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetQuietModeRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetQuietModeResponse.FromString,
                )
        self.GetAnalyticsOptIn = channel.unary_unary(
                '/beam.Beam/GetAnalyticsOptIn',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.GetAnalyticsOptInRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.GetAnalyticsOptInResponse.FromString,
                )
        self.SetAnalyticsOptIn = channel.unary_unary(
                '/beam.Beam/SetAnalyticsOptIn',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetAnalyticsOptInRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetAnalyticsOptInResponse.FromString,
                )
        self.SetNotifyOnPersonDetected = channel.unary_unary(
                '/beam.Beam/SetNotifyOnPersonDetected',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnResponse.FromString,
                )
        self.SetNotifyOnLurkerDetected = channel.unary_unary(
                '/beam.Beam/SetNotifyOnLurkerDetected',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnResponse.FromString,
                )
        self.SetNotifyOnPackageSeen = channel.unary_unary(
                '/beam.Beam/SetNotifyOnPackageSeen',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnResponse.FromString,
                )
        self.SetNotifyOnPackageMoved = channel.unary_unary(
                '/beam.Beam/SetNotifyOnPackageMoved',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnResponse.FromString,
                )
        self.SetNotifyOnVehicleSeen = channel.unary_unary(
                '/beam.Beam/SetNotifyOnVehicleSeen',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnResponse.FromString,
                )
        self.SetNotifyOnAnimalSeen = channel.unary_unary(
                '/beam.Beam/SetNotifyOnAnimalSeen',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnResponse.FromString,
                )
        self.SetNotifyOnDeter = channel.unary_unary(
                '/beam.Beam/SetNotifyOnDeter',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnResponse.FromString,
                )
        self.SetNotifyOnDoorbellPress = channel.unary_unary(
                '/beam.Beam/SetNotifyOnDoorbellPress',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnResponse.FromString,
                )
        self.SetNotifyOnVehicleLeaving = channel.unary_unary(
                '/beam.Beam/SetNotifyOnVehicleLeaving',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnResponse.FromString,
                )
        self.RestoreDefaults = channel.unary_unary(
                '/beam.Beam/RestoreDefaults',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.RestoreDefaultsRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.RestoreDefaultsResponse.FromString,
                )
        self.RebootCamera = channel.unary_unary(
                '/beam.Beam/RebootCamera',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.RebootCameraRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.RebootCameraResponse.FromString,
                )
        self.DeleteAllEvents = channel.unary_unary(
                '/beam.Beam/DeleteAllEvents',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.DeleteAllEventsRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.DeleteAllEventsResponse.FromString,
                )
        self.DeleteCamera = channel.unary_unary(
                '/beam.Beam/DeleteCamera',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.DeleteCameraRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.DeleteCameraResponse.FromString,
                )
        self.SetCameraListOrder = channel.unary_unary(
                '/beam.Beam/SetCameraListOrder',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetCameraListOrderRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetCameraListOrderResponse.FromString,
                )
        self.SetLurkerDeter = channel.unary_unary(
                '/beam.Beam/SetLurkerDeter',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetLurkerDeterRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetLurkerDeterResponse.FromString,
                )
        self.SetSmartSentrySnooze = channel.unary_unary(
                '/beam.Beam/SetSmartSentrySnooze',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetSmartSentrySnoozeRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetSmartSentrySnoozeResponse.FromString,
                )
        self.SetPackageWatch = channel.unary_unary(
                '/beam.Beam/SetPackageWatch',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetPackageWatchRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetPackageWatchResponse.FromString,
                )
        self.SetAnimalBoundary = channel.unary_unary(
                '/beam.Beam/SetAnimalBoundary',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetAnimalBoundaryRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetAnimalBoundaryResponse.FromString,
                )
        self.SetPackageBoundary = channel.unary_unary(
                '/beam.Beam/SetPackageBoundary',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetPackageBoundaryRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetPackageBoundaryResponse.FromString,
                )
        self.SetVehicleBoundary = channel.unary_unary(
                '/beam.Beam/SetVehicleBoundary',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetVehicleBoundaryRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetVehicleBoundaryResponse.FromString,
                )
        self.SetPropertyBoundary = channel.unary_unary(
                '/beam.Beam/SetPropertyBoundary',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetPropertyBoundaryRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetPropertyBoundaryResponse.FromString,
                )
        self.SetDeterBoundary = channel.unary_unary(
                '/beam.Beam/SetDeterBoundary',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterBoundaryRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterBoundaryResponse.FromString,
                )
        self.SetDeterSchedule = channel.unary_unary(
                '/beam.Beam/SetDeterSchedule',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterScheduleRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterScheduleResponse.FromString,
                )
        self.SetDeterScheduleV2 = channel.unary_unary(
                '/beam.Beam/SetDeterScheduleV2',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterScheduleV2Request.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterScheduleV2Response.FromString,
                )
        self.SetDeterAggressionLevel = channel.unary_unary(
                '/beam.Beam/SetDeterAggressionLevel',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterAggressionLevelRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterAggressionLevelResponse.FromString,
                )
        self.SetDeterLightColor = channel.unary_unary(
                '/beam.Beam/SetDeterLightColor',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterLightColorRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterLightColorResponse.FromString,
                )
        self.SetDeterLightPattern = channel.unary_unary(
                '/beam.Beam/SetDeterLightPattern',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterLightPatternRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterLightPatternResponse.FromString,
                )
        self.SetDeterOverride = channel.unary_unary(
                '/beam.Beam/SetDeterOverride',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterOverrideRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterOverrideResponse.FromString,
                )
        self.SetLingerDuration = channel.unary_unary(
                '/beam.Beam/SetLingerDuration',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetLingerDurationRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetLingerDurationResponse.FromString,
                )
        self.GetPanelLogin = channel.unary_unary(
                '/beam.Beam/GetPanelLogin',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.GetPanelLoginRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.GetPanelLoginResponse.FromString,
                )
        self.GetDeviceOnboarding = channel.unary_unary(
                '/beam.Beam/GetDeviceOnboarding',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.GetDeviceOnboardingRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.GetDeviceOnboardingResponse.FromString,
                )
        self.SetDeviceOnboarding = channel.unary_unary(
                '/beam.Beam/SetDeviceOnboarding',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDeviceOnboardingRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDeviceOnboardingResponse.FromString,
                )
        self.SetCaptureClipOnMotion = channel.unary_unary(
                '/beam.Beam/SetCaptureClipOnMotion',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetCaptureClipOnRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetCaptureClipOnResponse.FromString,
                )
        self.SetCaptureClipOnDoorbellRing = channel.unary_unary(
                '/beam.Beam/SetCaptureClipOnDoorbellRing',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetCaptureClipOnRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetCaptureClipOnResponse.FromString,
                )
        self.SetCaptureClipOnVisitor = channel.unary_unary(
                '/beam.Beam/SetCaptureClipOnVisitor',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetCaptureClipOnRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetCaptureClipOnResponse.FromString,
                )
        self.SetRecordOnDeter = channel.unary_unary(
                '/beam.Beam/SetRecordOnDeter',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetRecordOnDeterRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetRecordOnDeterResponse.FromString,
                )
        self.SetRecordOnPersonDetected = channel.unary_unary(
                '/beam.Beam/SetRecordOnPersonDetected',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetRecordOnPersonDetectedRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetRecordOnPersonDetectedResponse.FromString,
                )
        self.SetRecordOnPackageDetected = channel.unary_unary(
                '/beam.Beam/SetRecordOnPackageDetected',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetRecordOnPackageDetectedRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetRecordOnPackageDetectedResponse.FromString,
                )
        self.SetRecordOnLurkerDetected = channel.unary_unary(
                '/beam.Beam/SetRecordOnLurkerDetected',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetRecordOnLurkerDetectedRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetRecordOnLurkerDetectedResponse.FromString,
                )
        self.SetRecordOnAnimalDetected = channel.unary_unary(
                '/beam.Beam/SetRecordOnAnimalDetected',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetRecordOnAnimalDetectedRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetRecordOnAnimalDetectedResponse.FromString,
                )
        self.SetRecordOnVehicleDetected = channel.unary_unary(
                '/beam.Beam/SetRecordOnVehicleDetected',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetRecordOnVehicleDetectedRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetRecordOnVehicleDetectedResponse.FromString,
                )
        self.SetRecordForRegions = channel.unary_unary(
                '/beam.Beam/SetRecordForRegions',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetRecordForRegionsRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetRecordForRegionsResponse.FromString,
                )
        self.SetAnalyticsSensitivity = channel.unary_unary(
                '/beam.Beam/SetAnalyticsSensitivity',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetAnalyticsSensitivityRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetAnalyticsSensitivityResponse.FromString,
                )
        self.PreviewChime = channel.unary_unary(
                '/beam.Beam/PreviewChime',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.PreviewChimeRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.PreviewChimeResponse.FromString,
                )
        self.SetPackageDeliveryLocations = channel.unary_unary(
                '/beam.Beam/SetPackageDeliveryLocations',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetPackageDeliveryLocationsRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetPackageDeliveryLocationsResponse.FromString,
                )
        self.SetDoorbellPosition = channel.unary_unary(
                '/beam.Beam/SetDoorbellPosition',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDoorbellPositionRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDoorbellPositionResponse.FromString,
                )
        self.GetDynamicChimes = channel.unary_unary(
                '/beam.Beam/GetDynamicChimes',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.GetDynamicChimesRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.GetDynamicChimesResponse.FromString,
                )
        self.SetDynamicChime = channel.unary_unary(
                '/beam.Beam/SetDynamicChime',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDynamicChimeRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDynamicChimeResponse.FromString,
                )
        self.SetPackageWatchState = channel.unary_unary(
                '/beam.Beam/SetPackageWatchState',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetPackageWatchStateRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetPackageWatchStateResponse.FromString,
                )
        self.SetUserRole = channel.unary_unary(
                '/beam.Beam/SetUserRole',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetUserRoleRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetUserRoleResponse.FromString,
                )
        self.GetClipSharingLink = channel.unary_unary(
                '/beam.Beam/GetClipSharingLink',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.GetClipSharingLinkRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.GetClipSharingLinkResponse.FromString,
                )
        self.PanelKillWiFiNetwork = channel.unary_unary(
                '/beam.Beam/PanelKillWiFiNetwork',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.PanelKillWiFiNetworkRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.Response.FromString,
                )
        self.PanelRefreshSSIDList = channel.unary_unary(
                '/beam.Beam/PanelRefreshSSIDList',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.PanelRefreshSSIDListRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.Response.FromString,
                )
        self.StartCameraWifiConnect = channel.unary_unary(
                '/beam.Beam/StartCameraWifiConnect',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.StartCameraWifiConnectRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.StartCameraWifiConnectResponse.FromString,
                )
        self.AddCameraToHub = channel.unary_unary(
                '/beam.Beam/AddCameraToHub',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.AddCameraToHubRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.Response.FromString,
                )
        self.ReportVideoFailed = channel.unary_unary(
                '/beam.Beam/ReportVideoFailed',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.ReportVideoFailedRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.ReportVideoFailedResponse.FromString,
                )
        self.RequestCameraThumbnail = channel.unary_unary(
                '/beam.Beam/RequestCameraThumbnail',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.CameraThumbnailRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.CameraThumbnailResponse.FromString,
                )
        self.GetCameraThumbnailUrl = channel.unary_unary(
                '/beam.Beam/GetCameraThumbnailUrl',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.CameraThumbnailRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetHistoryClipURL = channel.unary_unary(
                '/beam.Beam/GetHistoryClipURL',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.GetHistoryClipURLRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.GetHistoryClipURLResponse.FromString,
                )
        self.GetLegacyHistoryClipURL = channel.unary_unary(
                '/beam.Beam/GetLegacyHistoryClipURL',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.GetLegacyHistoryClipURLRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.GetHistoryClipURLResponse.FromString,
                )
        self.AssociateDvr = channel.unary_unary(
                '/beam.Beam/AssociateDvr',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.AssociateDvrRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.AssociateDvrResponse.FromString,
                )
        self.SetSpotlightZones = channel.unary_unary(
                '/beam.Beam/SetSpotlightZones',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetSpotlightZonesRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetSpotlightZonesResponse.FromString,
                )
        self.SetSpotlightBrightness = channel.unary_unary(
                '/beam.Beam/SetSpotlightBrightness',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetSpotlightBrightnessRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetSpotlightBrightnessResponse.FromString,
                )
        self.ToggleFloodlight = channel.unary_unary(
                '/beam.Beam/ToggleFloodlight',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.ToggleFloodlightRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.ToggleFloodlightResponse.FromString,
                )
        self.SetSpotlightLightOnPersonDetected = channel.unary_unary(
                '/beam.Beam/SetSpotlightLightOnPersonDetected',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetSpotlightLightOnPersonDetectedRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetSpotlightLightOnPersonDetectedResponse.FromString,
                )
        self.SetSpotlightCalibration = channel.unary_unary(
                '/beam.Beam/SetSpotlightCalibration',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetSpotlightCalibrationRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetSpotlightCalibrationResponse.FromString,
                )
        self.SetDeterLightingBehavior = channel.unary_unary(
                '/beam.Beam/SetDeterLightingBehavior',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterLightingBehaviorRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterLightingBehaviorResponse.FromString,
                )
        self.SetSpotlightFollow = channel.unary_unary(
                '/beam.Beam/SetSpotlightFollow',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetSpotlightFollowRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetSpotlightFollowResponse.FromString,
                )
        self.SetSpotlightOnSunsetToSunrise = channel.unary_unary(
                '/beam.Beam/SetSpotlightOnSunsetToSunrise',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetSpotlightOnSunsetToSunriseRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetSpotlightOnSunsetToSunriseResponse.FromString,
                )
        self.SetSpotlightNightLight = channel.unary_unary(
                '/beam.Beam/SetSpotlightNightLight',
                request_serializer=vivintpy_dot_proto_dot_beam__pb2.SetSpotlightNightLightRequest.SerializeToString,
                response_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetSpotlightNightLightResponse.FromString,
                )


class BeamServicer(object):
    """usage:
    Compiled by 'protoc -I=. --go_out=plugins=grpc:. --python_out=. --cpp_out=./cpp beam.proto'
    for ios:
    protoc -I=. --plugin=protoc-gen-grpc=/usr/local/bin/grpc_objective_c_plugin --objc_out=objc --grpc_out=objc beam.proto

    """

    def Ping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDeviceName(self, request, context):
        """Set the device name / set the camera name
        because all devices have a name, SetDeviceName is used for this API call instead of SetCameraName
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCameraTechnicalInfo(self, request, context):
        """Get Camera Technical Info
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCameraSettings(self, request, context):
        """Get All Camera Settings
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPanelSettings(self, request, context):
        """Get All Panel Settings
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCameraPrivacyMode(self, request, context):
        """Set Privacy Mode
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AdjustCameraToXyz(self, request, context):
        """Adjust Camera Zoom
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCameraPlaybackEnabled(self, request, context):
        """
        Recording Settings

        Set Playback enabled
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDetectionWindows(self, request, context):
        """
        Detection Settings

        Set Detection Windows
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetChimeVolume(self, request, context):
        """
        Chime Settings

        Set ChimeVolume
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetChimeMute(self, request, context):
        """Set ChimeMute
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetVideoQuality(self, request, context):
        """
        Video Settings

        Set Video Quality
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetNightVision(self, request, context):
        """Set Night Vison
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetIRLED(self, request, context):
        """Set IR LED
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetRotateImage(self, request, context):
        """Set Rotate Image
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetMaintainZoom(self, request, context):
        """Set Maintain Zoom
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetStatusLight(self, request, context):
        """
        Device Settings

        Set StatusLight
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAudioRecording(self, request, context):
        """Set AudioRecording
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDoorbellChime(self, request, context):
        """Set DoorbellChime
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDoorbellMuted(self, request, context):
        """Set DoorbellMuted
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetVisitorChime(self, request, context):
        """Set VisitorChime
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPackageChime(self, request, context):
        """Set PackageChime
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetUseAsDoorbellChimeExtender(self, request, context):
        """Set Use as doorbell chime extender
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetExtendSiren(self, request, context):
        """Set extend siren
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetQuietMode(self, request, context):
        """Set QuietMode
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAnalyticsOptIn(self, request, context):
        """Get analytics opt-in setting, which indicates whether the user has allowed the video clips from this device to be used for analytics
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAnalyticsOptIn(self, request, context):
        """Set analytics opt-in setting, which indicates whether the user has allowed the video clips from this device to be used for analytics
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetNotifyOnPersonDetected(self, request, context):
        """
        Notify Settings

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetNotifyOnLurkerDetected(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetNotifyOnPackageSeen(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetNotifyOnPackageMoved(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetNotifyOnVehicleSeen(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetNotifyOnAnimalSeen(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetNotifyOnDeter(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetNotifyOnDoorbellPress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetNotifyOnVehicleLeaving(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RestoreDefaults(self, request, context):
        """
        Restore Defaults, Reboot Camera, Delete Recordings, Delete Camera, etc.

        Restore Defaults
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RebootCamera(self, request, context):
        """Reboot Camera
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAllEvents(self, request, context):
        """Delete All Events
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCamera(self, request, context):
        """Delete Camera
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCameraListOrder(self, request, context):
        """Set Camera List Order
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetLurkerDeter(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSmartSentrySnooze(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPackageWatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAnimalBoundary(self, request, context):
        """Set the animal detection boundary
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPackageBoundary(self, request, context):
        """Set the package detection boundary
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetVehicleBoundary(self, request, context):
        """Set the vehicle detection boundary
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPropertyBoundary(self, request, context):
        """Set the property boundary
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDeterBoundary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDeterSchedule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDeterScheduleV2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDeterAggressionLevel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDeterLightColor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDeterLightPattern(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDeterOverride(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetLingerDuration(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPanelLogin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDeviceOnboarding(self, request, context):
        """Get and set per device onboarding progress flags
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDeviceOnboarding(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCaptureClipOnMotion(self, request, context):
        """SetCaptureClipOn (legacy) and SetRecordOn methods - set whether a clip should be recorded when an event occurs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCaptureClipOnDoorbellRing(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCaptureClipOnVisitor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetRecordOnDeter(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetRecordOnPersonDetected(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetRecordOnPackageDetected(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetRecordOnLurkerDetected(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetRecordOnAnimalDetected(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetRecordOnVehicleDetected(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetRecordForRegions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAnalyticsSensitivity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PreviewChime(self, request, context):
        """Tells the panel/camera to sound the chime based on chime type
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPackageDeliveryLocations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDoorbellPosition(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDynamicChimes(self, request, context):
        """Find out what doorbell chimes are available
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDynamicChime(self, request, context):
        """Change which dynamic doorbell chime is currently set for a device
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPackageWatchState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetUserRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetClipSharingLink(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PanelKillWiFiNetwork(self, request, context):
        """DIY/Hub+ functionality
        stop using WiFi for Hub+ connectivity (required to be able to do site-survey?)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PanelRefreshSSIDList(self, request, context):
        """request that a new site-survey be done by Hub+ unit
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartCameraWifiConnect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddCameraToHub(self, request, context):
        """Add a camera to Hub/Panel after it has connected to the network.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReportVideoFailed(self, request, context):
        """Re-implementation of /api/videofailed/{panel_id} from mobile-api
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RequestCameraThumbnail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCameraThumbnailUrl(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHistoryClipURL(self, request, context):
        """GetHistoryClipURL is the "proper" way to get a signed URL; it has all the fields necessary
        to get a history record without needing to do a scan-and-gather on the data collections.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLegacyHistoryClipURL(self, request, context):
        """Re-implementation of GET /api/token/{historyId} from mobile-api
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssociateDvr(self, request, context):
        """Re-implementation of POST /api/dvr-associate from mobile-api
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSpotlightZones(self, request, context):
        """Set which zones of the ODC Spotlight attachment (Narwhal) are enabled.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSpotlightBrightness(self, request, context):
        """Set the brightness of the ODC Spotlight attachment (Narwhal).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ToggleFloodlight(self, request, context):
        """Turn the ODC Spotlight attachment (Narwhal) on (in floodlight mode) or off.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSpotlightLightOnPersonDetected(self, request, context):
        """Toggle the behavior to turn on (or brighten) the ODS spotlight attachment when a person is detected at night when deter is off
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSpotlightCalibration(self, request, context):
        """Set the calibration points for the Spotlight attachment (Narwhal) zones
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDeterLightingBehavior(self, request, context):
        """Set narwhal/spotlight deter lighting behavior
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSpotlightFollow(self, request, context):
        """Set narwhal/spotlight person lighting behavior
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSpotlightOnSunsetToSunrise(self, request, context):
        """Sets the SpotlightNightLight property of a camera.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSpotlightNightLight(self, request, context):
        """Sets the SpotlightNightLight property of a camera, which tells the camera to turn on the light when in night mode.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BeamServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.Response.SerializeToString,
            ),
            'SetDeviceName': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDeviceName,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDeviceNameRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDeviceNameResponse.SerializeToString,
            ),
            'GetCameraTechnicalInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCameraTechnicalInfo,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.GetCameraTechnicalInfoRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.GetCameraTechnicalInfoResponse.SerializeToString,
            ),
            'GetCameraSettings': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCameraSettings,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.GetCameraSettingsRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.GetCameraSettingsResponse.SerializeToString,
            ),
            'GetPanelSettings': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPanelSettings,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.GetPanelSettingsRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.GetPanelSettingsResponse.SerializeToString,
            ),
            'SetCameraPrivacyMode': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCameraPrivacyMode,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetCameraPrivacyModeRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetCameraPrivacyModeResponse.SerializeToString,
            ),
            'AdjustCameraToXyz': grpc.unary_unary_rpc_method_handler(
                    servicer.AdjustCameraToXyz,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.AdjustCameraToXyzRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.AdjustCameraToXyzResponse.SerializeToString,
            ),
            'SetCameraPlaybackEnabled': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCameraPlaybackEnabled,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetCameraPlaybackEnabledRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetCameraPlaybackEnabledResponse.SerializeToString,
            ),
            'SetDetectionWindows': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDetectionWindows,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDetectionWindowsRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDetectionWindowsResponse.SerializeToString,
            ),
            'SetChimeVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.SetChimeVolume,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetChimeVolumeRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetChimeVolumeResponse.SerializeToString,
            ),
            'SetChimeMute': grpc.unary_unary_rpc_method_handler(
                    servicer.SetChimeMute,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetChimeMuteRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetChimeMuteResponse.SerializeToString,
            ),
            'SetVideoQuality': grpc.unary_unary_rpc_method_handler(
                    servicer.SetVideoQuality,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetVideoQualityRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetVideoQualityResponse.SerializeToString,
            ),
            'SetNightVision': grpc.unary_unary_rpc_method_handler(
                    servicer.SetNightVision,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetNightVisionRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetNightVisionResponse.SerializeToString,
            ),
            'SetIRLED': grpc.unary_unary_rpc_method_handler(
                    servicer.SetIRLED,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetIRLEDRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetIRLEDResponse.SerializeToString,
            ),
            'SetRotateImage': grpc.unary_unary_rpc_method_handler(
                    servicer.SetRotateImage,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetRotateImageRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetRotateImageResponse.SerializeToString,
            ),
            'SetMaintainZoom': grpc.unary_unary_rpc_method_handler(
                    servicer.SetMaintainZoom,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetMaintainZoomRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetMaintainZoomResponse.SerializeToString,
            ),
            'SetStatusLight': grpc.unary_unary_rpc_method_handler(
                    servicer.SetStatusLight,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetStatusLightRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetStatusLightResponse.SerializeToString,
            ),
            'SetAudioRecording': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAudioRecording,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetAudioRecordingRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetAudioRecordingResponse.SerializeToString,
            ),
            'SetDoorbellChime': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDoorbellChime,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDoorbellChimeRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDoorbellChimeResponse.SerializeToString,
            ),
            'SetDoorbellMuted': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDoorbellMuted,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDoorbellMutedRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDoorbellMutedResponse.SerializeToString,
            ),
            'SetVisitorChime': grpc.unary_unary_rpc_method_handler(
                    servicer.SetVisitorChime,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetVisitorChimeRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetVisitorChimeResponse.SerializeToString,
            ),
            'SetPackageChime': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPackageChime,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetPackageChimeRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetPackageChimeResponse.SerializeToString,
            ),
            'SetUseAsDoorbellChimeExtender': grpc.unary_unary_rpc_method_handler(
                    servicer.SetUseAsDoorbellChimeExtender,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetUseAsDoorbellChimeExtenderRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetUseAsDoorbellChimeExtenderResponse.SerializeToString,
            ),
            'SetExtendSiren': grpc.unary_unary_rpc_method_handler(
                    servicer.SetExtendSiren,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetExtendSirenRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetExtendSirenResponse.SerializeToString,
            ),
            'SetQuietMode': grpc.unary_unary_rpc_method_handler(
                    servicer.SetQuietMode,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetQuietModeRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetQuietModeResponse.SerializeToString,
            ),
            'GetAnalyticsOptIn': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAnalyticsOptIn,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.GetAnalyticsOptInRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.GetAnalyticsOptInResponse.SerializeToString,
            ),
            'SetAnalyticsOptIn': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAnalyticsOptIn,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetAnalyticsOptInRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetAnalyticsOptInResponse.SerializeToString,
            ),
            'SetNotifyOnPersonDetected': grpc.unary_unary_rpc_method_handler(
                    servicer.SetNotifyOnPersonDetected,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnResponse.SerializeToString,
            ),
            'SetNotifyOnLurkerDetected': grpc.unary_unary_rpc_method_handler(
                    servicer.SetNotifyOnLurkerDetected,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnResponse.SerializeToString,
            ),
            'SetNotifyOnPackageSeen': grpc.unary_unary_rpc_method_handler(
                    servicer.SetNotifyOnPackageSeen,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnResponse.SerializeToString,
            ),
            'SetNotifyOnPackageMoved': grpc.unary_unary_rpc_method_handler(
                    servicer.SetNotifyOnPackageMoved,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnResponse.SerializeToString,
            ),
            'SetNotifyOnVehicleSeen': grpc.unary_unary_rpc_method_handler(
                    servicer.SetNotifyOnVehicleSeen,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnResponse.SerializeToString,
            ),
            'SetNotifyOnAnimalSeen': grpc.unary_unary_rpc_method_handler(
                    servicer.SetNotifyOnAnimalSeen,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnResponse.SerializeToString,
            ),
            'SetNotifyOnDeter': grpc.unary_unary_rpc_method_handler(
                    servicer.SetNotifyOnDeter,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnResponse.SerializeToString,
            ),
            'SetNotifyOnDoorbellPress': grpc.unary_unary_rpc_method_handler(
                    servicer.SetNotifyOnDoorbellPress,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnResponse.SerializeToString,
            ),
            'SetNotifyOnVehicleLeaving': grpc.unary_unary_rpc_method_handler(
                    servicer.SetNotifyOnVehicleLeaving,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnResponse.SerializeToString,
            ),
            'RestoreDefaults': grpc.unary_unary_rpc_method_handler(
                    servicer.RestoreDefaults,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.RestoreDefaultsRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.RestoreDefaultsResponse.SerializeToString,
            ),
            'RebootCamera': grpc.unary_unary_rpc_method_handler(
                    servicer.RebootCamera,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.RebootCameraRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.RebootCameraResponse.SerializeToString,
            ),
            'DeleteAllEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAllEvents,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.DeleteAllEventsRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.DeleteAllEventsResponse.SerializeToString,
            ),
            'DeleteCamera': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCamera,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.DeleteCameraRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.DeleteCameraResponse.SerializeToString,
            ),
            'SetCameraListOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCameraListOrder,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetCameraListOrderRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetCameraListOrderResponse.SerializeToString,
            ),
            'SetLurkerDeter': grpc.unary_unary_rpc_method_handler(
                    servicer.SetLurkerDeter,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetLurkerDeterRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetLurkerDeterResponse.SerializeToString,
            ),
            'SetSmartSentrySnooze': grpc.unary_unary_rpc_method_handler(
                    servicer.SetSmartSentrySnooze,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetSmartSentrySnoozeRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetSmartSentrySnoozeResponse.SerializeToString,
            ),
            'SetPackageWatch': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPackageWatch,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetPackageWatchRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetPackageWatchResponse.SerializeToString,
            ),
            'SetAnimalBoundary': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAnimalBoundary,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetAnimalBoundaryRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetAnimalBoundaryResponse.SerializeToString,
            ),
            'SetPackageBoundary': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPackageBoundary,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetPackageBoundaryRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetPackageBoundaryResponse.SerializeToString,
            ),
            'SetVehicleBoundary': grpc.unary_unary_rpc_method_handler(
                    servicer.SetVehicleBoundary,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetVehicleBoundaryRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetVehicleBoundaryResponse.SerializeToString,
            ),
            'SetPropertyBoundary': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPropertyBoundary,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetPropertyBoundaryRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetPropertyBoundaryResponse.SerializeToString,
            ),
            'SetDeterBoundary': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDeterBoundary,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterBoundaryRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterBoundaryResponse.SerializeToString,
            ),
            'SetDeterSchedule': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDeterSchedule,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterScheduleRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterScheduleResponse.SerializeToString,
            ),
            'SetDeterScheduleV2': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDeterScheduleV2,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterScheduleV2Request.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterScheduleV2Response.SerializeToString,
            ),
            'SetDeterAggressionLevel': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDeterAggressionLevel,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterAggressionLevelRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterAggressionLevelResponse.SerializeToString,
            ),
            'SetDeterLightColor': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDeterLightColor,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterLightColorRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterLightColorResponse.SerializeToString,
            ),
            'SetDeterLightPattern': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDeterLightPattern,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterLightPatternRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterLightPatternResponse.SerializeToString,
            ),
            'SetDeterOverride': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDeterOverride,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterOverrideRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterOverrideResponse.SerializeToString,
            ),
            'SetLingerDuration': grpc.unary_unary_rpc_method_handler(
                    servicer.SetLingerDuration,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetLingerDurationRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetLingerDurationResponse.SerializeToString,
            ),
            'GetPanelLogin': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPanelLogin,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.GetPanelLoginRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.GetPanelLoginResponse.SerializeToString,
            ),
            'GetDeviceOnboarding': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeviceOnboarding,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.GetDeviceOnboardingRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.GetDeviceOnboardingResponse.SerializeToString,
            ),
            'SetDeviceOnboarding': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDeviceOnboarding,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDeviceOnboardingRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDeviceOnboardingResponse.SerializeToString,
            ),
            'SetCaptureClipOnMotion': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCaptureClipOnMotion,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetCaptureClipOnRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetCaptureClipOnResponse.SerializeToString,
            ),
            'SetCaptureClipOnDoorbellRing': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCaptureClipOnDoorbellRing,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetCaptureClipOnRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetCaptureClipOnResponse.SerializeToString,
            ),
            'SetCaptureClipOnVisitor': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCaptureClipOnVisitor,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetCaptureClipOnRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetCaptureClipOnResponse.SerializeToString,
            ),
            'SetRecordOnDeter': grpc.unary_unary_rpc_method_handler(
                    servicer.SetRecordOnDeter,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetRecordOnDeterRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetRecordOnDeterResponse.SerializeToString,
            ),
            'SetRecordOnPersonDetected': grpc.unary_unary_rpc_method_handler(
                    servicer.SetRecordOnPersonDetected,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetRecordOnPersonDetectedRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetRecordOnPersonDetectedResponse.SerializeToString,
            ),
            'SetRecordOnPackageDetected': grpc.unary_unary_rpc_method_handler(
                    servicer.SetRecordOnPackageDetected,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetRecordOnPackageDetectedRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetRecordOnPackageDetectedResponse.SerializeToString,
            ),
            'SetRecordOnLurkerDetected': grpc.unary_unary_rpc_method_handler(
                    servicer.SetRecordOnLurkerDetected,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetRecordOnLurkerDetectedRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetRecordOnLurkerDetectedResponse.SerializeToString,
            ),
            'SetRecordOnAnimalDetected': grpc.unary_unary_rpc_method_handler(
                    servicer.SetRecordOnAnimalDetected,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetRecordOnAnimalDetectedRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetRecordOnAnimalDetectedResponse.SerializeToString,
            ),
            'SetRecordOnVehicleDetected': grpc.unary_unary_rpc_method_handler(
                    servicer.SetRecordOnVehicleDetected,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetRecordOnVehicleDetectedRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetRecordOnVehicleDetectedResponse.SerializeToString,
            ),
            'SetRecordForRegions': grpc.unary_unary_rpc_method_handler(
                    servicer.SetRecordForRegions,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetRecordForRegionsRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetRecordForRegionsResponse.SerializeToString,
            ),
            'SetAnalyticsSensitivity': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAnalyticsSensitivity,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetAnalyticsSensitivityRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetAnalyticsSensitivityResponse.SerializeToString,
            ),
            'PreviewChime': grpc.unary_unary_rpc_method_handler(
                    servicer.PreviewChime,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.PreviewChimeRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.PreviewChimeResponse.SerializeToString,
            ),
            'SetPackageDeliveryLocations': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPackageDeliveryLocations,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetPackageDeliveryLocationsRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetPackageDeliveryLocationsResponse.SerializeToString,
            ),
            'SetDoorbellPosition': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDoorbellPosition,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDoorbellPositionRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDoorbellPositionResponse.SerializeToString,
            ),
            'GetDynamicChimes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDynamicChimes,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.GetDynamicChimesRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.GetDynamicChimesResponse.SerializeToString,
            ),
            'SetDynamicChime': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDynamicChime,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDynamicChimeRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDynamicChimeResponse.SerializeToString,
            ),
            'SetPackageWatchState': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPackageWatchState,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetPackageWatchStateRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetPackageWatchStateResponse.SerializeToString,
            ),
            'SetUserRole': grpc.unary_unary_rpc_method_handler(
                    servicer.SetUserRole,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetUserRoleRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetUserRoleResponse.SerializeToString,
            ),
            'GetClipSharingLink': grpc.unary_unary_rpc_method_handler(
                    servicer.GetClipSharingLink,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.GetClipSharingLinkRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.GetClipSharingLinkResponse.SerializeToString,
            ),
            'PanelKillWiFiNetwork': grpc.unary_unary_rpc_method_handler(
                    servicer.PanelKillWiFiNetwork,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.PanelKillWiFiNetworkRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.Response.SerializeToString,
            ),
            'PanelRefreshSSIDList': grpc.unary_unary_rpc_method_handler(
                    servicer.PanelRefreshSSIDList,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.PanelRefreshSSIDListRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.Response.SerializeToString,
            ),
            'StartCameraWifiConnect': grpc.unary_unary_rpc_method_handler(
                    servicer.StartCameraWifiConnect,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.StartCameraWifiConnectRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.StartCameraWifiConnectResponse.SerializeToString,
            ),
            'AddCameraToHub': grpc.unary_unary_rpc_method_handler(
                    servicer.AddCameraToHub,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.AddCameraToHubRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.Response.SerializeToString,
            ),
            'ReportVideoFailed': grpc.unary_unary_rpc_method_handler(
                    servicer.ReportVideoFailed,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.ReportVideoFailedRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.ReportVideoFailedResponse.SerializeToString,
            ),
            'RequestCameraThumbnail': grpc.unary_unary_rpc_method_handler(
                    servicer.RequestCameraThumbnail,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.CameraThumbnailRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.CameraThumbnailResponse.SerializeToString,
            ),
            'GetCameraThumbnailUrl': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCameraThumbnailUrl,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.CameraThumbnailRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetHistoryClipURL': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHistoryClipURL,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.GetHistoryClipURLRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.GetHistoryClipURLResponse.SerializeToString,
            ),
            'GetLegacyHistoryClipURL': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLegacyHistoryClipURL,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.GetLegacyHistoryClipURLRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.GetHistoryClipURLResponse.SerializeToString,
            ),
            'AssociateDvr': grpc.unary_unary_rpc_method_handler(
                    servicer.AssociateDvr,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.AssociateDvrRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.AssociateDvrResponse.SerializeToString,
            ),
            'SetSpotlightZones': grpc.unary_unary_rpc_method_handler(
                    servicer.SetSpotlightZones,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetSpotlightZonesRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetSpotlightZonesResponse.SerializeToString,
            ),
            'SetSpotlightBrightness': grpc.unary_unary_rpc_method_handler(
                    servicer.SetSpotlightBrightness,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetSpotlightBrightnessRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetSpotlightBrightnessResponse.SerializeToString,
            ),
            'ToggleFloodlight': grpc.unary_unary_rpc_method_handler(
                    servicer.ToggleFloodlight,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.ToggleFloodlightRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.ToggleFloodlightResponse.SerializeToString,
            ),
            'SetSpotlightLightOnPersonDetected': grpc.unary_unary_rpc_method_handler(
                    servicer.SetSpotlightLightOnPersonDetected,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetSpotlightLightOnPersonDetectedRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetSpotlightLightOnPersonDetectedResponse.SerializeToString,
            ),
            'SetSpotlightCalibration': grpc.unary_unary_rpc_method_handler(
                    servicer.SetSpotlightCalibration,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetSpotlightCalibrationRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetSpotlightCalibrationResponse.SerializeToString,
            ),
            'SetDeterLightingBehavior': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDeterLightingBehavior,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterLightingBehaviorRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetDeterLightingBehaviorResponse.SerializeToString,
            ),
            'SetSpotlightFollow': grpc.unary_unary_rpc_method_handler(
                    servicer.SetSpotlightFollow,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetSpotlightFollowRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetSpotlightFollowResponse.SerializeToString,
            ),
            'SetSpotlightOnSunsetToSunrise': grpc.unary_unary_rpc_method_handler(
                    servicer.SetSpotlightOnSunsetToSunrise,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetSpotlightOnSunsetToSunriseRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetSpotlightOnSunsetToSunriseResponse.SerializeToString,
            ),
            'SetSpotlightNightLight': grpc.unary_unary_rpc_method_handler(
                    servicer.SetSpotlightNightLight,
                    request_deserializer=vivintpy_dot_proto_dot_beam__pb2.SetSpotlightNightLightRequest.FromString,
                    response_serializer=vivintpy_dot_proto_dot_beam__pb2.SetSpotlightNightLightResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'beam.Beam', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Beam(object):
    """usage:
    Compiled by 'protoc -I=. --go_out=plugins=grpc:. --python_out=. --cpp_out=./cpp beam.proto'
    for ios:
    protoc -I=. --plugin=protoc-gen-grpc=/usr/local/bin/grpc_objective_c_plugin --objc_out=objc --grpc_out=objc beam.proto

    """

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/Ping',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDeviceName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetDeviceName',
            vivintpy_dot_proto_dot_beam__pb2.SetDeviceNameRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetDeviceNameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCameraTechnicalInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/GetCameraTechnicalInfo',
            vivintpy_dot_proto_dot_beam__pb2.GetCameraTechnicalInfoRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.GetCameraTechnicalInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCameraSettings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/GetCameraSettings',
            vivintpy_dot_proto_dot_beam__pb2.GetCameraSettingsRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.GetCameraSettingsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPanelSettings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/GetPanelSettings',
            vivintpy_dot_proto_dot_beam__pb2.GetPanelSettingsRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.GetPanelSettingsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetCameraPrivacyMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetCameraPrivacyMode',
            vivintpy_dot_proto_dot_beam__pb2.SetCameraPrivacyModeRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetCameraPrivacyModeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AdjustCameraToXyz(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/AdjustCameraToXyz',
            vivintpy_dot_proto_dot_beam__pb2.AdjustCameraToXyzRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.AdjustCameraToXyzResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetCameraPlaybackEnabled(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetCameraPlaybackEnabled',
            vivintpy_dot_proto_dot_beam__pb2.SetCameraPlaybackEnabledRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetCameraPlaybackEnabledResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDetectionWindows(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetDetectionWindows',
            vivintpy_dot_proto_dot_beam__pb2.SetDetectionWindowsRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetDetectionWindowsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetChimeVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetChimeVolume',
            vivintpy_dot_proto_dot_beam__pb2.SetChimeVolumeRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetChimeVolumeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetChimeMute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetChimeMute',
            vivintpy_dot_proto_dot_beam__pb2.SetChimeMuteRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetChimeMuteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetVideoQuality(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetVideoQuality',
            vivintpy_dot_proto_dot_beam__pb2.SetVideoQualityRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetVideoQualityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetNightVision(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetNightVision',
            vivintpy_dot_proto_dot_beam__pb2.SetNightVisionRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetNightVisionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetIRLED(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetIRLED',
            vivintpy_dot_proto_dot_beam__pb2.SetIRLEDRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetIRLEDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetRotateImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetRotateImage',
            vivintpy_dot_proto_dot_beam__pb2.SetRotateImageRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetRotateImageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetMaintainZoom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetMaintainZoom',
            vivintpy_dot_proto_dot_beam__pb2.SetMaintainZoomRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetMaintainZoomResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetStatusLight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetStatusLight',
            vivintpy_dot_proto_dot_beam__pb2.SetStatusLightRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetStatusLightResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAudioRecording(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetAudioRecording',
            vivintpy_dot_proto_dot_beam__pb2.SetAudioRecordingRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetAudioRecordingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDoorbellChime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetDoorbellChime',
            vivintpy_dot_proto_dot_beam__pb2.SetDoorbellChimeRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetDoorbellChimeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDoorbellMuted(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetDoorbellMuted',
            vivintpy_dot_proto_dot_beam__pb2.SetDoorbellMutedRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetDoorbellMutedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetVisitorChime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetVisitorChime',
            vivintpy_dot_proto_dot_beam__pb2.SetVisitorChimeRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetVisitorChimeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPackageChime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetPackageChime',
            vivintpy_dot_proto_dot_beam__pb2.SetPackageChimeRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetPackageChimeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetUseAsDoorbellChimeExtender(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetUseAsDoorbellChimeExtender',
            vivintpy_dot_proto_dot_beam__pb2.SetUseAsDoorbellChimeExtenderRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetUseAsDoorbellChimeExtenderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetExtendSiren(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetExtendSiren',
            vivintpy_dot_proto_dot_beam__pb2.SetExtendSirenRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetExtendSirenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetQuietMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetQuietMode',
            vivintpy_dot_proto_dot_beam__pb2.SetQuietModeRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetQuietModeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAnalyticsOptIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/GetAnalyticsOptIn',
            vivintpy_dot_proto_dot_beam__pb2.GetAnalyticsOptInRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.GetAnalyticsOptInResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAnalyticsOptIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetAnalyticsOptIn',
            vivintpy_dot_proto_dot_beam__pb2.SetAnalyticsOptInRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetAnalyticsOptInResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetNotifyOnPersonDetected(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetNotifyOnPersonDetected',
            vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetNotifyOnLurkerDetected(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetNotifyOnLurkerDetected',
            vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetNotifyOnPackageSeen(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetNotifyOnPackageSeen',
            vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetNotifyOnPackageMoved(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetNotifyOnPackageMoved',
            vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetNotifyOnVehicleSeen(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetNotifyOnVehicleSeen',
            vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetNotifyOnAnimalSeen(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetNotifyOnAnimalSeen',
            vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetNotifyOnDeter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetNotifyOnDeter',
            vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetNotifyOnDoorbellPress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetNotifyOnDoorbellPress',
            vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetNotifyOnVehicleLeaving(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetNotifyOnVehicleLeaving',
            vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetNotifyOnResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RestoreDefaults(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/RestoreDefaults',
            vivintpy_dot_proto_dot_beam__pb2.RestoreDefaultsRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.RestoreDefaultsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RebootCamera(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/RebootCamera',
            vivintpy_dot_proto_dot_beam__pb2.RebootCameraRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.RebootCameraResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAllEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/DeleteAllEvents',
            vivintpy_dot_proto_dot_beam__pb2.DeleteAllEventsRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.DeleteAllEventsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteCamera(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/DeleteCamera',
            vivintpy_dot_proto_dot_beam__pb2.DeleteCameraRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.DeleteCameraResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetCameraListOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetCameraListOrder',
            vivintpy_dot_proto_dot_beam__pb2.SetCameraListOrderRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetCameraListOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetLurkerDeter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetLurkerDeter',
            vivintpy_dot_proto_dot_beam__pb2.SetLurkerDeterRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetLurkerDeterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetSmartSentrySnooze(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetSmartSentrySnooze',
            vivintpy_dot_proto_dot_beam__pb2.SetSmartSentrySnoozeRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetSmartSentrySnoozeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPackageWatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetPackageWatch',
            vivintpy_dot_proto_dot_beam__pb2.SetPackageWatchRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetPackageWatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAnimalBoundary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetAnimalBoundary',
            vivintpy_dot_proto_dot_beam__pb2.SetAnimalBoundaryRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetAnimalBoundaryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPackageBoundary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetPackageBoundary',
            vivintpy_dot_proto_dot_beam__pb2.SetPackageBoundaryRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetPackageBoundaryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetVehicleBoundary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetVehicleBoundary',
            vivintpy_dot_proto_dot_beam__pb2.SetVehicleBoundaryRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetVehicleBoundaryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPropertyBoundary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetPropertyBoundary',
            vivintpy_dot_proto_dot_beam__pb2.SetPropertyBoundaryRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetPropertyBoundaryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDeterBoundary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetDeterBoundary',
            vivintpy_dot_proto_dot_beam__pb2.SetDeterBoundaryRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetDeterBoundaryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDeterSchedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetDeterSchedule',
            vivintpy_dot_proto_dot_beam__pb2.SetDeterScheduleRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetDeterScheduleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDeterScheduleV2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetDeterScheduleV2',
            vivintpy_dot_proto_dot_beam__pb2.SetDeterScheduleV2Request.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetDeterScheduleV2Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDeterAggressionLevel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetDeterAggressionLevel',
            vivintpy_dot_proto_dot_beam__pb2.SetDeterAggressionLevelRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetDeterAggressionLevelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDeterLightColor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetDeterLightColor',
            vivintpy_dot_proto_dot_beam__pb2.SetDeterLightColorRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetDeterLightColorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDeterLightPattern(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetDeterLightPattern',
            vivintpy_dot_proto_dot_beam__pb2.SetDeterLightPatternRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetDeterLightPatternResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDeterOverride(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetDeterOverride',
            vivintpy_dot_proto_dot_beam__pb2.SetDeterOverrideRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetDeterOverrideResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetLingerDuration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetLingerDuration',
            vivintpy_dot_proto_dot_beam__pb2.SetLingerDurationRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetLingerDurationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPanelLogin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/GetPanelLogin',
            vivintpy_dot_proto_dot_beam__pb2.GetPanelLoginRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.GetPanelLoginResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDeviceOnboarding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/GetDeviceOnboarding',
            vivintpy_dot_proto_dot_beam__pb2.GetDeviceOnboardingRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.GetDeviceOnboardingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDeviceOnboarding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetDeviceOnboarding',
            vivintpy_dot_proto_dot_beam__pb2.SetDeviceOnboardingRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetDeviceOnboardingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetCaptureClipOnMotion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetCaptureClipOnMotion',
            vivintpy_dot_proto_dot_beam__pb2.SetCaptureClipOnRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetCaptureClipOnResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetCaptureClipOnDoorbellRing(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetCaptureClipOnDoorbellRing',
            vivintpy_dot_proto_dot_beam__pb2.SetCaptureClipOnRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetCaptureClipOnResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetCaptureClipOnVisitor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetCaptureClipOnVisitor',
            vivintpy_dot_proto_dot_beam__pb2.SetCaptureClipOnRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetCaptureClipOnResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetRecordOnDeter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetRecordOnDeter',
            vivintpy_dot_proto_dot_beam__pb2.SetRecordOnDeterRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetRecordOnDeterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetRecordOnPersonDetected(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetRecordOnPersonDetected',
            vivintpy_dot_proto_dot_beam__pb2.SetRecordOnPersonDetectedRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetRecordOnPersonDetectedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetRecordOnPackageDetected(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetRecordOnPackageDetected',
            vivintpy_dot_proto_dot_beam__pb2.SetRecordOnPackageDetectedRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetRecordOnPackageDetectedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetRecordOnLurkerDetected(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetRecordOnLurkerDetected',
            vivintpy_dot_proto_dot_beam__pb2.SetRecordOnLurkerDetectedRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetRecordOnLurkerDetectedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetRecordOnAnimalDetected(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetRecordOnAnimalDetected',
            vivintpy_dot_proto_dot_beam__pb2.SetRecordOnAnimalDetectedRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetRecordOnAnimalDetectedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetRecordOnVehicleDetected(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetRecordOnVehicleDetected',
            vivintpy_dot_proto_dot_beam__pb2.SetRecordOnVehicleDetectedRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetRecordOnVehicleDetectedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetRecordForRegions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetRecordForRegions',
            vivintpy_dot_proto_dot_beam__pb2.SetRecordForRegionsRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetRecordForRegionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAnalyticsSensitivity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetAnalyticsSensitivity',
            vivintpy_dot_proto_dot_beam__pb2.SetAnalyticsSensitivityRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetAnalyticsSensitivityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PreviewChime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/PreviewChime',
            vivintpy_dot_proto_dot_beam__pb2.PreviewChimeRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.PreviewChimeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPackageDeliveryLocations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetPackageDeliveryLocations',
            vivintpy_dot_proto_dot_beam__pb2.SetPackageDeliveryLocationsRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetPackageDeliveryLocationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDoorbellPosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetDoorbellPosition',
            vivintpy_dot_proto_dot_beam__pb2.SetDoorbellPositionRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetDoorbellPositionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDynamicChimes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/GetDynamicChimes',
            vivintpy_dot_proto_dot_beam__pb2.GetDynamicChimesRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.GetDynamicChimesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDynamicChime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetDynamicChime',
            vivintpy_dot_proto_dot_beam__pb2.SetDynamicChimeRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetDynamicChimeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPackageWatchState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetPackageWatchState',
            vivintpy_dot_proto_dot_beam__pb2.SetPackageWatchStateRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetPackageWatchStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetUserRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetUserRole',
            vivintpy_dot_proto_dot_beam__pb2.SetUserRoleRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetUserRoleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetClipSharingLink(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/GetClipSharingLink',
            vivintpy_dot_proto_dot_beam__pb2.GetClipSharingLinkRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.GetClipSharingLinkResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PanelKillWiFiNetwork(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/PanelKillWiFiNetwork',
            vivintpy_dot_proto_dot_beam__pb2.PanelKillWiFiNetworkRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PanelRefreshSSIDList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/PanelRefreshSSIDList',
            vivintpy_dot_proto_dot_beam__pb2.PanelRefreshSSIDListRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartCameraWifiConnect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/StartCameraWifiConnect',
            vivintpy_dot_proto_dot_beam__pb2.StartCameraWifiConnectRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.StartCameraWifiConnectResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddCameraToHub(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/AddCameraToHub',
            vivintpy_dot_proto_dot_beam__pb2.AddCameraToHubRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReportVideoFailed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/ReportVideoFailed',
            vivintpy_dot_proto_dot_beam__pb2.ReportVideoFailedRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.ReportVideoFailedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RequestCameraThumbnail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/RequestCameraThumbnail',
            vivintpy_dot_proto_dot_beam__pb2.CameraThumbnailRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.CameraThumbnailResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCameraThumbnailUrl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/GetCameraThumbnailUrl',
            vivintpy_dot_proto_dot_beam__pb2.CameraThumbnailRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHistoryClipURL(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/GetHistoryClipURL',
            vivintpy_dot_proto_dot_beam__pb2.GetHistoryClipURLRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.GetHistoryClipURLResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLegacyHistoryClipURL(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/GetLegacyHistoryClipURL',
            vivintpy_dot_proto_dot_beam__pb2.GetLegacyHistoryClipURLRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.GetHistoryClipURLResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AssociateDvr(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/AssociateDvr',
            vivintpy_dot_proto_dot_beam__pb2.AssociateDvrRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.AssociateDvrResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetSpotlightZones(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetSpotlightZones',
            vivintpy_dot_proto_dot_beam__pb2.SetSpotlightZonesRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetSpotlightZonesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetSpotlightBrightness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetSpotlightBrightness',
            vivintpy_dot_proto_dot_beam__pb2.SetSpotlightBrightnessRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetSpotlightBrightnessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ToggleFloodlight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/ToggleFloodlight',
            vivintpy_dot_proto_dot_beam__pb2.ToggleFloodlightRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.ToggleFloodlightResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetSpotlightLightOnPersonDetected(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetSpotlightLightOnPersonDetected',
            vivintpy_dot_proto_dot_beam__pb2.SetSpotlightLightOnPersonDetectedRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetSpotlightLightOnPersonDetectedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetSpotlightCalibration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetSpotlightCalibration',
            vivintpy_dot_proto_dot_beam__pb2.SetSpotlightCalibrationRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetSpotlightCalibrationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDeterLightingBehavior(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetDeterLightingBehavior',
            vivintpy_dot_proto_dot_beam__pb2.SetDeterLightingBehaviorRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetDeterLightingBehaviorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetSpotlightFollow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetSpotlightFollow',
            vivintpy_dot_proto_dot_beam__pb2.SetSpotlightFollowRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetSpotlightFollowResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetSpotlightOnSunsetToSunrise(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetSpotlightOnSunsetToSunrise',
            vivintpy_dot_proto_dot_beam__pb2.SetSpotlightOnSunsetToSunriseRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetSpotlightOnSunsetToSunriseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetSpotlightNightLight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/beam.Beam/SetSpotlightNightLight',
            vivintpy_dot_proto_dot_beam__pb2.SetSpotlightNightLightRequest.SerializeToString,
            vivintpy_dot_proto_dot_beam__pb2.SetSpotlightNightLightResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
