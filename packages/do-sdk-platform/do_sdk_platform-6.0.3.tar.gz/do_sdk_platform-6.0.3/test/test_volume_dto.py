# coding: utf-8

"""
    Platform API Documentation

    Combined API documentation for all platform services

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from do_sdk_platform.models.volume_dto import VolumeDto

class TestVolumeDto(unittest.TestCase):
    """VolumeDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VolumeDto:
        """Test VolumeDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VolumeDto`
        """
        model = VolumeDto()
        if include_optional:
            return VolumeDto(
                cluster_id = '',
                configuration = do_sdk_platform.models.file_volume_configuration_dto.FileVolumeConfigurationDto(
                    cloud_region = 'us-west-2', 
                    cloud_vendor = 'aws', 
                    fsx_storage_type = 'hdd-12-readcache', 
                    size_gb = 1.337, 
                    type = 'file', ),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created_by = '',
                drn = '',
                name = '',
                status = 'PENDING',
                summary = '',
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                user_assigned_id = ''
            )
        else:
            return VolumeDto(
                cluster_id = '',
                configuration = do_sdk_platform.models.file_volume_configuration_dto.FileVolumeConfigurationDto(
                    cloud_region = 'us-west-2', 
                    cloud_vendor = 'aws', 
                    fsx_storage_type = 'hdd-12-readcache', 
                    size_gb = 1.337, 
                    type = 'file', ),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created_by = '',
                drn = '',
                name = '',
                status = 'PENDING',
                summary = '',
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                user_assigned_id = '',
        )
        """

    def testVolumeDto(self):
        """Test VolumeDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
