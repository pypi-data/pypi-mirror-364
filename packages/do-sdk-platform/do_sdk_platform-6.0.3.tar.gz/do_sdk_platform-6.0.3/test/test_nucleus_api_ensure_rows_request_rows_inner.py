# coding: utf-8

"""
    Platform API Documentation

    Combined API documentation for all platform services

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from do_sdk_platform.models.nucleus_api_ensure_rows_request_rows_inner import NucleusApiEnsureRowsRequestRowsInner

class TestNucleusApiEnsureRowsRequestRowsInner(unittest.TestCase):
    """NucleusApiEnsureRowsRequestRowsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NucleusApiEnsureRowsRequestRowsInner:
        """Test NucleusApiEnsureRowsRequestRowsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NucleusApiEnsureRowsRequestRowsInner`
        """
        model = NucleusApiEnsureRowsRequestRowsInner()
        if include_optional:
            return NucleusApiEnsureRowsRequestRowsInner(
                cells = [
                    do_sdk_platform.models.nucleus_api_ensure_rows_request_rows_inner_cells_inner.nucleus_apiEnsureRows_request_rows_inner_cells_inner(
                        column_id = '', 
                        previous_version = 1.337, 
                        value = null, )
                    ],
                row = do_sdk_platform.models.nucleus_api_ensure_rows_request_rows_inner_row.nucleus_apiEnsureRows_request_rows_inner_row(
                    creation_block_id = '', 
                    creation_parent_id = '', 
                    is_template = True, ),
                row_id = ''
            )
        else:
            return NucleusApiEnsureRowsRequestRowsInner(
        )
        """

    def testNucleusApiEnsureRowsRequestRowsInner(self):
        """Test NucleusApiEnsureRowsRequestRowsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
