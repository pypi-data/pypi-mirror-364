# coding: utf-8

"""
    Platform API Documentation

    Combined API documentation for all platform services

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from do_sdk_platform.models.api_list_all_blueprints200_response import ApiListAllBlueprints200Response

class TestApiListAllBlueprints200Response(unittest.TestCase):
    """ApiListAllBlueprints200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiListAllBlueprints200Response:
        """Test ApiListAllBlueprints200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiListAllBlueprints200Response`
        """
        model = ApiListAllBlueprints200Response()
        if include_optional:
            return ApiListAllBlueprints200Response(
                data = [
                    do_sdk_platform.models.api_list_all_blueprints_200_response_data_inner.apiListAllBlueprints_200_response_data_inner(
                        attributes = do_sdk_platform.models.blueprint_object.BlueprintObject(
                            applications = [
                                do_sdk_platform.models.application_response.ApplicationResponse(
                                    authors = [
                                        do_sdk_platform.models.external_entity_object.ExternalEntityObject(
                                            name = '', 
                                            url = '', )
                                        ], 
                                    created = '', 
                                    description = '', 
                                    icon = '', 
                                    id = '', 
                                    license = null, 
                                    name = '', 
                                    publication_references = [
                                        do_sdk_platform.models.external_entity_object.ExternalEntityObject(
                                            name = '', 
                                            url = '', )
                                        ], 
                                    requirements = null, 
                                    resource_links = [
                                        
                                        ], 
                                    summary = '', 
                                    type_id = '', 
                                    use_case_ids = [
                                        ''
                                        ], 
                                    use_case_names = [
                                        ''
                                        ], 
                                    variant_tags = [
                                        ''
                                        ], 
                                    version = '', )
                                ], 
                            authors = [
                                
                                ], 
                            created = '', 
                            description = do_sdk_platform.models.description.description(), 
                            enabled = True, 
                            icon = [
                                ''
                                ], 
                            id = '', 
                            license = null, 
                            name = '', 
                            node_types = [
                                do_sdk_platform.models.node_type_response.NodeTypeResponse(
                                    applications = [
                                        do_sdk_platform.models.catalog_item_reference_object.CatalogItemReferenceObject(
                                            id = '', 
                                            other_item_version = '', 
                                            variant_tags = [
                                                ''
                                                ], 
                                            version = '', )
                                        ], 
                                    entry_points = [
                                        do_sdk_platform.models.entry_point_reference_object.EntryPointReferenceObject(
                                            id = '', 
                                            is_exposed = True, 
                                            name = '', 
                                            port = 1.337, 
                                            protocol = '', )
                                        ], 
                                    fixed_resources = True, 
                                    home_data_location = '', 
                                    id = '', 
                                    image_location = '', 
                                    name = '', 
                                    notebooks = [
                                        do_sdk_platform.models.catalog_item_reference_object.CatalogItemReferenceObject(
                                            id = '', 
                                            other_item_version = '', 
                                            variant_tags = [
                                                ''
                                                ], 
                                            version = '', )
                                        ], 
                                    operating_system = null, 
                                    requirements = null, 
                                    shared_drive_required = True, 
                                    summary = '', )
                                ], 
                            publication_references = [
                                
                                ], 
                            resource_links = [
                                
                                ], 
                            summary = '', 
                            type_id = '', 
                            use_case_ids = [
                                ''
                                ], 
                            use_case_names = [
                                ''
                                ], 
                            variant_tags = [
                                ''
                                ], 
                            version = '', ), 
                        id = '', 
                        type = '', )
                    ],
                links = do_sdk_platform.models.http_links_dto.HttpLinksDto(
                    first = '', 
                    next = '', 
                    prev = '', 
                    self = '', )
            )
        else:
            return ApiListAllBlueprints200Response(
                data = [
                    do_sdk_platform.models.api_list_all_blueprints_200_response_data_inner.apiListAllBlueprints_200_response_data_inner(
                        attributes = do_sdk_platform.models.blueprint_object.BlueprintObject(
                            applications = [
                                do_sdk_platform.models.application_response.ApplicationResponse(
                                    authors = [
                                        do_sdk_platform.models.external_entity_object.ExternalEntityObject(
                                            name = '', 
                                            url = '', )
                                        ], 
                                    created = '', 
                                    description = '', 
                                    icon = '', 
                                    id = '', 
                                    license = null, 
                                    name = '', 
                                    publication_references = [
                                        do_sdk_platform.models.external_entity_object.ExternalEntityObject(
                                            name = '', 
                                            url = '', )
                                        ], 
                                    requirements = null, 
                                    resource_links = [
                                        
                                        ], 
                                    summary = '', 
                                    type_id = '', 
                                    use_case_ids = [
                                        ''
                                        ], 
                                    use_case_names = [
                                        ''
                                        ], 
                                    variant_tags = [
                                        ''
                                        ], 
                                    version = '', )
                                ], 
                            authors = [
                                
                                ], 
                            created = '', 
                            description = do_sdk_platform.models.description.description(), 
                            enabled = True, 
                            icon = [
                                ''
                                ], 
                            id = '', 
                            license = null, 
                            name = '', 
                            node_types = [
                                do_sdk_platform.models.node_type_response.NodeTypeResponse(
                                    applications = [
                                        do_sdk_platform.models.catalog_item_reference_object.CatalogItemReferenceObject(
                                            id = '', 
                                            other_item_version = '', 
                                            variant_tags = [
                                                ''
                                                ], 
                                            version = '', )
                                        ], 
                                    entry_points = [
                                        do_sdk_platform.models.entry_point_reference_object.EntryPointReferenceObject(
                                            id = '', 
                                            is_exposed = True, 
                                            name = '', 
                                            port = 1.337, 
                                            protocol = '', )
                                        ], 
                                    fixed_resources = True, 
                                    home_data_location = '', 
                                    id = '', 
                                    image_location = '', 
                                    name = '', 
                                    notebooks = [
                                        do_sdk_platform.models.catalog_item_reference_object.CatalogItemReferenceObject(
                                            id = '', 
                                            other_item_version = '', 
                                            variant_tags = [
                                                ''
                                                ], 
                                            version = '', )
                                        ], 
                                    operating_system = null, 
                                    requirements = null, 
                                    shared_drive_required = True, 
                                    summary = '', )
                                ], 
                            publication_references = [
                                
                                ], 
                            resource_links = [
                                
                                ], 
                            summary = '', 
                            type_id = '', 
                            use_case_ids = [
                                ''
                                ], 
                            use_case_names = [
                                ''
                                ], 
                            variant_tags = [
                                ''
                                ], 
                            version = '', ), 
                        id = '', 
                        type = '', )
                    ],
                links = do_sdk_platform.models.http_links_dto.HttpLinksDto(
                    first = '', 
                    next = '', 
                    prev = '', 
                    self = '', ),
        )
        """

    def testApiListAllBlueprints200Response(self):
        """Test ApiListAllBlueprints200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
