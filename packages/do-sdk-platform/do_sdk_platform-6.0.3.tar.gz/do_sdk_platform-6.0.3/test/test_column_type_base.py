# coding: utf-8

"""
    Platform API Documentation

    Combined API documentation for all platform services

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from do_sdk_platform.models.column_type_base import ColumnTypeBase

class TestColumnTypeBase(unittest.TestCase):
    """ColumnTypeBase unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ColumnTypeBase:
        """Test ColumnTypeBase
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ColumnTypeBase`
        """
        model = ColumnTypeBase()
        if include_optional:
            return ColumnTypeBase(
                type = 'boolean',
                expression_code = '',
                expression_return_type = 'text',
                config_file = do_sdk_platform.models.add_column_file_config_file.AddColumnFile_configFile(
                    allowed_extensions = [
                        ''
                        ], ),
                config_numeric = do_sdk_platform.models.add_column_float_config_numeric.AddColumnFloat_configNumeric(
                    number_format = do_sdk_platform.models.number_format.NumberFormat(
                        maximum_fraction_digits = 0, 
                        maximum_significant_digits = 1, 
                        minimum_fraction_digits = 0, 
                        minimum_significant_digits = 1, ), 
                    unit = '', ),
                reference_database_row_id = '',
                config_select = do_sdk_platform.models.nucleus_api_configure_column_select_options_200_response_data_config_select.nucleus_apiConfigureColumnSelectOptions_200_response_data_configSelect(
                    can_create = True, 
                    options = [
                        ''
                        ], ),
                lookup_external_column = None,
                lookup_external_column_id = '',
                lookup_source_column_id = ''
            )
        else:
            return ColumnTypeBase(
                type = 'boolean',
                expression_code = '',
                expression_return_type = 'text',
                reference_database_row_id = '',
                config_select = do_sdk_platform.models.nucleus_api_configure_column_select_options_200_response_data_config_select.nucleus_apiConfigureColumnSelectOptions_200_response_data_configSelect(
                    can_create = True, 
                    options = [
                        ''
                        ], ),
                lookup_external_column = None,
                lookup_external_column_id = '',
                lookup_source_column_id = '',
        )
        """

    def testColumnTypeBase(self):
        """Test ColumnTypeBase"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
