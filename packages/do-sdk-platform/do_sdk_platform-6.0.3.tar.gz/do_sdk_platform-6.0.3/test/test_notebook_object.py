# coding: utf-8

"""
    Platform API Documentation

    Combined API documentation for all platform services

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from do_sdk_platform.models.notebook_object import NotebookObject

class TestNotebookObject(unittest.TestCase):
    """NotebookObject unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NotebookObject:
        """Test NotebookObject
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NotebookObject`
        """
        model = NotebookObject()
        if include_optional:
            return NotebookObject(
                authors = [
                    do_sdk_platform.models.external_entity_object.ExternalEntityObject(
                        name = '', 
                        url = '', )
                    ],
                created = None,
                description = None,
                id = '',
                license = do_sdk_platform.models.described_external_entity_object.DescribedExternalEntityObject(
                    description = '', 
                    name = '', 
                    url = '', ),
                name = '',
                publication_references = [
                    do_sdk_platform.models.external_entity_object.ExternalEntityObject(
                        name = '', 
                        url = '', )
                    ],
                resource_links = [
                    do_sdk_platform.models.external_entity_object.ExternalEntityObject(
                        name = '', 
                        url = '', )
                    ],
                summary = '',
                type_id = '',
                use_case_ids = [
                    ''
                    ],
                use_case_names = [
                    ''
                    ],
                variant_tags = [
                    ''
                    ],
                version = ''
            )
        else:
            return NotebookObject(
                authors = [
                    do_sdk_platform.models.external_entity_object.ExternalEntityObject(
                        name = '', 
                        url = '', )
                    ],
                created = None,
                description = None,
                id = '',
                license = do_sdk_platform.models.described_external_entity_object.DescribedExternalEntityObject(
                    description = '', 
                    name = '', 
                    url = '', ),
                name = '',
                publication_references = [
                    do_sdk_platform.models.external_entity_object.ExternalEntityObject(
                        name = '', 
                        url = '', )
                    ],
                resource_links = [
                    do_sdk_platform.models.external_entity_object.ExternalEntityObject(
                        name = '', 
                        url = '', )
                    ],
                summary = '',
                type_id = '',
                use_case_ids = [
                    ''
                    ],
                use_case_names = [
                    ''
                    ],
                variant_tags = [
                    ''
                    ],
                version = '',
        )
        """

    def testNotebookObject(self):
        """Test NotebookObject"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
