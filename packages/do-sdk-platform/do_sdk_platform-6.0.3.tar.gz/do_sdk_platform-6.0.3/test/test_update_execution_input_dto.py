# coding: utf-8

"""
    Platform API Documentation

    Combined API documentation for all platform services

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from do_sdk_platform.models.update_execution_input_dto import UpdateExecutionInputDto

class TestUpdateExecutionInputDto(unittest.TestCase):
    """UpdateExecutionInputDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateExecutionInputDto:
        """Test UpdateExecutionInputDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateExecutionInputDto`
        """
        model = UpdateExecutionInputDto()
        if include_optional:
            return UpdateExecutionInputDto(
                completed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                job_outputs = None,
                metadata = None,
                name = '',
                progress_report = '',
                resources_used = do_sdk_platform.models.resource_requirement_dto.ResourceRequirementDto(
                    cpu = 1.337, 
                    gpu = 1.337, 
                    memory = 1.337, 
                    preemptible = True, 
                    zones = [
                        ''
                        ], ),
                started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                status = 'Quoted'
            )
        else:
            return UpdateExecutionInputDto(
        )
        """

    def testUpdateExecutionInputDto(self):
        """Test UpdateExecutionInputDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
