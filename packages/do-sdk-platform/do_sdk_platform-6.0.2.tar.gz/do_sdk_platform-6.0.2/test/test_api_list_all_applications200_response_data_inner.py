# coding: utf-8

"""
    Platform API Documentation

    Combined API documentation for all platform services

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from do_sdk_platform.models.api_list_all_applications200_response_data_inner import ApiListAllApplications200ResponseDataInner

class TestApiListAllApplications200ResponseDataInner(unittest.TestCase):
    """ApiListAllApplications200ResponseDataInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiListAllApplications200ResponseDataInner:
        """Test ApiListAllApplications200ResponseDataInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiListAllApplications200ResponseDataInner`
        """
        model = ApiListAllApplications200ResponseDataInner()
        if include_optional:
            return ApiListAllApplications200ResponseDataInner(
                id = '',
                type = '',
                attributes = do_sdk_platform.models.application_response.ApplicationResponse(
                    authors = [
                        do_sdk_platform.models.external_entity_object.ExternalEntityObject(
                            name = '', 
                            url = '', )
                        ], 
                    created = '', 
                    description = '', 
                    icon = '', 
                    id = '', 
                    license = null, 
                    name = '', 
                    summary = '', 
                    publication_references = [
                        do_sdk_platform.models.external_entity_object.ExternalEntityObject(
                            name = '', 
                            url = '', )
                        ], 
                    requirements = null, 
                    resource_links = [
                        
                        ], 
                    version = '', 
                    type_id = '', 
                    use_case_ids = [
                        ''
                        ], 
                    use_case_names = [
                        ''
                        ], 
                    variant_tags = [
                        ''
                        ], )
            )
        else:
            return ApiListAllApplications200ResponseDataInner(
                id = '',
                type = '',
                attributes = do_sdk_platform.models.application_response.ApplicationResponse(
                    authors = [
                        do_sdk_platform.models.external_entity_object.ExternalEntityObject(
                            name = '', 
                            url = '', )
                        ], 
                    created = '', 
                    description = '', 
                    icon = '', 
                    id = '', 
                    license = null, 
                    name = '', 
                    summary = '', 
                    publication_references = [
                        do_sdk_platform.models.external_entity_object.ExternalEntityObject(
                            name = '', 
                            url = '', )
                        ], 
                    requirements = null, 
                    resource_links = [
                        
                        ], 
                    version = '', 
                    type_id = '', 
                    use_case_ids = [
                        ''
                        ], 
                    use_case_names = [
                        ''
                        ], 
                    variant_tags = [
                        ''
                        ], ),
        )
        """

    def testApiListAllApplications200ResponseDataInner(self):
        """Test ApiListAllApplications200ResponseDataInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
