# coding: utf-8

"""
    Platform API Documentation

    Combined API documentation for all platform services

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from do_sdk_platform.models.api_create_workflow200_response import ApiCreateWorkflow200Response

class TestApiCreateWorkflow200Response(unittest.TestCase):
    """ApiCreateWorkflow200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiCreateWorkflow200Response:
        """Test ApiCreateWorkflow200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiCreateWorkflow200Response`
        """
        model = ApiCreateWorkflow200Response()
        if include_optional:
            return ApiCreateWorkflow200Response(
                links = do_sdk_platform.models.http_links_dto.HttpLinksDto(
                    self = '', 
                    next = '', 
                    prev = '', 
                    first = '', ),
                data = do_sdk_platform.models.api_list_workflows_200_response_data_inner.apiListWorkflows_200_response_data_inner(
                    id = '', 
                    type = '', 
                    attributes = do_sdk_platform.models.workflow_dto.WorkflowDto(
                        pipeline_id = '', 
                        org_drn = '', 
                        name = '', 
                        created_by = '', 
                        drn = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        output_directory = '', 
                        parameters = do_sdk_platform.models.parameters.parameters(), 
                        working_dir = '', 
                        correlation_id = '', 
                        workflow_language = '', 
                        cluster = null, 
                        status = 'Pending', 
                        summary = '', 
                        completed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        volume_mounts = [
                            ''
                            ], 
                        engine_parameters = do_sdk_platform.models.engine_parameters.engineParameters(), ), )
            )
        else:
            return ApiCreateWorkflow200Response(
                links = do_sdk_platform.models.http_links_dto.HttpLinksDto(
                    self = '', 
                    next = '', 
                    prev = '', 
                    first = '', ),
                data = do_sdk_platform.models.api_list_workflows_200_response_data_inner.apiListWorkflows_200_response_data_inner(
                    id = '', 
                    type = '', 
                    attributes = do_sdk_platform.models.workflow_dto.WorkflowDto(
                        pipeline_id = '', 
                        org_drn = '', 
                        name = '', 
                        created_by = '', 
                        drn = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        output_directory = '', 
                        parameters = do_sdk_platform.models.parameters.parameters(), 
                        working_dir = '', 
                        correlation_id = '', 
                        workflow_language = '', 
                        cluster = null, 
                        status = 'Pending', 
                        summary = '', 
                        completed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        volume_mounts = [
                            ''
                            ], 
                        engine_parameters = do_sdk_platform.models.engine_parameters.engineParameters(), ), ),
        )
        """

    def testApiCreateWorkflow200Response(self):
        """Test ApiCreateWorkflow200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
