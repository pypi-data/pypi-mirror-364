# coding: utf-8

"""
    Platform API Documentation

    Combined API documentation for all platform services

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from do_sdk_platform.models.api_list_workflows200_response_data_inner import ApiListWorkflows200ResponseDataInner

class TestApiListWorkflows200ResponseDataInner(unittest.TestCase):
    """ApiListWorkflows200ResponseDataInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiListWorkflows200ResponseDataInner:
        """Test ApiListWorkflows200ResponseDataInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiListWorkflows200ResponseDataInner`
        """
        model = ApiListWorkflows200ResponseDataInner()
        if include_optional:
            return ApiListWorkflows200ResponseDataInner(
                id = '',
                type = '',
                attributes = do_sdk_platform.models.workflow_dto.WorkflowDto(
                    pipeline_id = '', 
                    org_drn = '', 
                    name = '', 
                    created_by = '', 
                    drn = '', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    output_directory = '', 
                    parameters = do_sdk_platform.models.parameters.parameters(), 
                    working_dir = '', 
                    correlation_id = '', 
                    workflow_language = '', 
                    cluster = null, 
                    status = 'Pending', 
                    summary = '', 
                    completed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    volume_mounts = [
                        ''
                        ], 
                    engine_parameters = do_sdk_platform.models.engine_parameters.engineParameters(), )
            )
        else:
            return ApiListWorkflows200ResponseDataInner(
                id = '',
                type = '',
                attributes = do_sdk_platform.models.workflow_dto.WorkflowDto(
                    pipeline_id = '', 
                    org_drn = '', 
                    name = '', 
                    created_by = '', 
                    drn = '', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    output_directory = '', 
                    parameters = do_sdk_platform.models.parameters.parameters(), 
                    working_dir = '', 
                    correlation_id = '', 
                    workflow_language = '', 
                    cluster = null, 
                    status = 'Pending', 
                    summary = '', 
                    completed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    volume_mounts = [
                        ''
                        ], 
                    engine_parameters = do_sdk_platform.models.engine_parameters.engineParameters(), ),
        )
        """

    def testApiListWorkflows200ResponseDataInner(self):
        """Test ApiListWorkflows200ResponseDataInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
