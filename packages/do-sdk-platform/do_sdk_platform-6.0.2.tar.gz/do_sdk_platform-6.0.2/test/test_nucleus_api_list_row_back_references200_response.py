# coding: utf-8

"""
    Platform API Documentation

    Combined API documentation for all platform services

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from do_sdk_platform.models.nucleus_api_list_row_back_references200_response import NucleusApiListRowBackReferences200Response

class TestNucleusApiListRowBackReferences200Response(unittest.TestCase):
    """NucleusApiListRowBackReferences200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NucleusApiListRowBackReferences200Response:
        """Test NucleusApiListRowBackReferences200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NucleusApiListRowBackReferences200Response`
        """
        model = NucleusApiListRowBackReferences200Response()
        if include_optional:
            return NucleusApiListRowBackReferences200Response(
                data = do_sdk_platform.models.nucleus_api_list_row_back_references_200_response_data.nucleus_apiListRowBackReferences_200_response_data(
                    rows = [
                        null
                        ], )
            )
        else:
            return NucleusApiListRowBackReferences200Response(
                data = do_sdk_platform.models.nucleus_api_list_row_back_references_200_response_data.nucleus_apiListRowBackReferences_200_response_data(
                    rows = [
                        null
                        ], ),
        )
        """

    def testNucleusApiListRowBackReferences200Response(self):
        """Test NucleusApiListRowBackReferences200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
