# coding: utf-8

"""
    Platform API Documentation

    Combined API documentation for all platform services

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from do_sdk_platform.models.api_create_organization200_response_data import ApiCreateOrganization200ResponseData

class TestApiCreateOrganization200ResponseData(unittest.TestCase):
    """ApiCreateOrganization200ResponseData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiCreateOrganization200ResponseData:
        """Test ApiCreateOrganization200ResponseData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiCreateOrganization200ResponseData`
        """
        model = ApiCreateOrganization200ResponseData()
        if include_optional:
            return ApiCreateOrganization200ResponseData(
                id = '',
                type = '',
                attributes = do_sdk_platform.models.organization_dto.OrganizationDto(
                    drn = '', 
                    name = '', 
                    friendly_id = '', 
                    roles = [
                        do_sdk_platform.models.role_dto.RoleDto(
                            name = 'Owner', 
                            permissions = [
                                do_sdk_platform.models.permission_dto.PermissionDto(
                                    action = 'CREATE', 
                                    subject = 'CLUSTER', 
                                    condition = null, )
                                ], )
                        ], 
                    users = [
                        do_sdk_platform.models.organization_user_dto.OrganizationUserDto(
                            auth_id = '', 
                            name = '', 
                            email = '', 
                            avatar = '', 
                            roles = [
                                'Owner'
                                ], )
                        ], 
                    invites = [
                        do_sdk_platform.models.organization_invite_dto.OrganizationInviteDto(
                            code = '', 
                            email = '', 
                            roles = [
                                'Owner'
                                ], 
                            accepted = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            invited_by = '', )
                        ], 
                    status = 'READY', 
                    data_hub_status = 'READY', 
                    created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    mfa_enabled = True, )
            )
        else:
            return ApiCreateOrganization200ResponseData(
                id = '',
                type = '',
                attributes = do_sdk_platform.models.organization_dto.OrganizationDto(
                    drn = '', 
                    name = '', 
                    friendly_id = '', 
                    roles = [
                        do_sdk_platform.models.role_dto.RoleDto(
                            name = 'Owner', 
                            permissions = [
                                do_sdk_platform.models.permission_dto.PermissionDto(
                                    action = 'CREATE', 
                                    subject = 'CLUSTER', 
                                    condition = null, )
                                ], )
                        ], 
                    users = [
                        do_sdk_platform.models.organization_user_dto.OrganizationUserDto(
                            auth_id = '', 
                            name = '', 
                            email = '', 
                            avatar = '', 
                            roles = [
                                'Owner'
                                ], )
                        ], 
                    invites = [
                        do_sdk_platform.models.organization_invite_dto.OrganizationInviteDto(
                            code = '', 
                            email = '', 
                            roles = [
                                'Owner'
                                ], 
                            accepted = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            invited_by = '', )
                        ], 
                    status = 'READY', 
                    data_hub_status = 'READY', 
                    created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    mfa_enabled = True, ),
        )
        """

    def testApiCreateOrganization200ResponseData(self):
        """Test ApiCreateOrganization200ResponseData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
