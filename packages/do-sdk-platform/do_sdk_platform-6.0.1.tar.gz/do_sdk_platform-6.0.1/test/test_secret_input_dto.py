# coding: utf-8

"""
    Platform API Documentation

    Combined API documentation for all platform services

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from do_sdk_platform.models.secret_input_dto import SecretInputDto

class TestSecretInputDto(unittest.TestCase):
    """SecretInputDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SecretInputDto:
        """Test SecretInputDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SecretInputDto`
        """
        model = SecretInputDto()
        if include_optional:
            return SecretInputDto(
                type = 'Secret environment variables',
                name = '',
                aws_secret_input = do_sdk_platform.models.aws_secret_input_dto.AWSSecretInputDto(
                    profile_name = '', 
                    secret_key = '', 
                    access_key = '', 
                    default_region = '', ),
                configuration_secret_input = do_sdk_platform.models.configuration_secret_input_dto.ConfigurationSecretInputDto(
                    filename = '', 
                    value = '', ),
                environment_secret_input = do_sdk_platform.models.environment_secret_input_dto.EnvironmentSecretInputDto(
                    key = '', 
                    value = '', ),
                git_secret_input = do_sdk_platform.models.git_secret_input_dto.GitSecretInputDto(
                    repository = '', 
                    username = '', 
                    password = '', ),
                gpg_secret_input = do_sdk_platform.models.gpg_secret_input_dto.GPGSecretInputDto(
                    value = '', ),
                ssh_secret_input = do_sdk_platform.models.configuration_secret_input_dto.ConfigurationSecretInputDto(
                    filename = '', 
                    value = '', )
            )
        else:
            return SecretInputDto(
                type = 'Secret environment variables',
                name = '',
                aws_secret_input = do_sdk_platform.models.aws_secret_input_dto.AWSSecretInputDto(
                    profile_name = '', 
                    secret_key = '', 
                    access_key = '', 
                    default_region = '', ),
                configuration_secret_input = do_sdk_platform.models.configuration_secret_input_dto.ConfigurationSecretInputDto(
                    filename = '', 
                    value = '', ),
                environment_secret_input = do_sdk_platform.models.environment_secret_input_dto.EnvironmentSecretInputDto(
                    key = '', 
                    value = '', ),
                git_secret_input = do_sdk_platform.models.git_secret_input_dto.GitSecretInputDto(
                    repository = '', 
                    username = '', 
                    password = '', ),
                gpg_secret_input = do_sdk_platform.models.gpg_secret_input_dto.GPGSecretInputDto(
                    value = '', ),
                ssh_secret_input = do_sdk_platform.models.configuration_secret_input_dto.ConfigurationSecretInputDto(
                    filename = '', 
                    value = '', ),
        )
        """

    def testSecretInputDto(self):
        """Test SecretInputDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
