import{_ as E,bn as A,R as _,bo as M,bp as z,bq as D,br as J,ao as Q,x,z as m,e as c,y as T,F as G,r as Y,B as S,ar as H,aq as X,o as n,aA as Z,t as w,bs as K,bt as $,bu as ee,bv as te,bw as oe,a7 as le,w as s,j as q,bx as se,by as ie,ae,bz as re,bA as ne,bB as ue,af as V,bC as de,bD as ce,q as j,ak as g,I as C,J as fe,bE as pe,C as F,g as l,V as I,h as k,X as he,l as L,bF as O,A as me,bG as P,D as ge,E as we,bH as be,ag as ye}from"./index-EpcknQ5m.js";import{V as ve,b as ke}from"./ViewToolbar-LXt-n9EI.js";import{g as Le}from"./graphql-n5gzreXW.js";import{i as Se,u as _e,a as v}from"./initialOptions-CKJltX86.js";import{d as xe}from"./debounce-DMwvJH2P.js";import{V as Ve}from"./VAlert-CtG1z_R3.js";const Fe={name:"LogComponent",props:{placeholder:{type:String,required:!1},timestamps:{type:Boolean,required:!1,default:!0},logs:{type:Array,required:!0},wordWrap:{type:Boolean,required:!1,default:!1},autoScroll:{type:Boolean,required:!1,default:!1}},emits:["update:autoScroll"],setup(t,{emit:e}){const i=_("logText"),o=_("scrollWrapper"),b=_("autoScrollEnd"),a=M(t,"autoScroll",e),{arrivedState:d,directions:f}=z(o);D(()=>d.bottom&&!d.top,()=>{a.value=!0}),D(()=>t.logs.length&&f.top,()=>{a.value=!1});function p(){b.value?.scrollIntoView({behavior:"smooth"})}async function r(){a.value=!1,await H(),o.value?.scroll({top:0,left:0,behavior:"smooth"})}const y=new ResizeObserver(p);return J(i,()=>{X(a,h=>{h?(p(),y.observe(i.value)):(o.value.scrollBy(0,0),y.disconnect())},{immediate:!0})}),Q(()=>{y.disconnect()}),{scrollToTop:r}},computed:{computedLogs(){return this.logs.length>0?this.timestamps?this.logs:this.updateLogs():this.placeholder?[this.placeholder]:[]}},methods:{updateLogs(){return this.logs.map(t=>this.stripTimestamp(t))},stripTimestamp(t){const e=/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(?:Z|[+-][\d:]+)?\s(.*\s*)/;return t.match(e)?.[1]??t}},icons:{mdiMouseMoveUp:A}},Ie={ref:"scrollWrapper",class:"h-100 overflow-auto px-4 pb-2"},De={ref:"logText","data-cy":"log-text"},Te={ref:"autoScrollEnd"};function Ce(t,e,i,o,b,a){return n(),x("div",Ie,[m("pre",De,[(n(!0),x(G,null,Y(a.computedLogs,(d,f)=>(n(),x("span",{key:f,class:Z(i.wordWrap?"text-pre-wrap":"text-pre")},w(d),3))),128))],512),i.logs.length?(n(),c(S,{key:0,position:"fixed",location:"bottom right",class:"ma-5",onClick:o.scrollToTop,icon:t.$options.icons.mdiMouseMoveUp,"data-cy":"log-scroll-top"},null,8,["onClick","icon"])):T("",!0),m("div",Te,null,512)],512)}const Be=E(Fe,[["render",Ce]]),qe=C`
subscription LogData ($id: ID!, $file: String!) {
  logs (id: $id, file: $file) {
    lines
    connected
    path
    error
  }
}
`,je=C`
query LogFiles($id: ID!) {
  logFiles(id: $id) {
    files
  }
}
`,Oe=C`
query JobState($id: ID!, $workflowId: ID!) {
  jobs (live: false, ids: [$id], workflows: [$workflowId]) {
    id
    state
  }
}
`;class W{constructor(){this.lines=[],this.host=null,this.path=null,this.connected=null,this.error=null}}class Pe extends fe{constructor(e){super(),this.results=e}onAdded(e,i,o){this.results.connected===!1&&(this.results.lines=[]),e.lines&&this.results.lines.push(...e.lines),e.connected!=null&&(this.results.connected=e.connected),e.error!=null&&(this.results.error=e.error),e.path!=null&&([this.results.host,this.results.path]=e.path.split(":",2))}}const We={name:"Log",mixins:[Le,le],components:{CopyBtn:oe,LogComponent:Be,ViewToolbar:ve},emits:[_e],props:{initialOptions:Se},setup(t,{emit:e}){const i=pe(),o=v("relativeID",{props:t,emit:e}),b=de(o),a=ce(o.value,{onChanged:xe(u=>{o.value=u},500)});function d(u){return!u||(V.validate(u,!0)??!0)}const f=j(()=>{if(o.value)try{const u=new V(o.value,!0);if(u.task)return u.job?u:u.clone({job:"NN"})}catch{}return null}),p=v("file",{props:t,emit:e}),r=v("timestamps",{props:t,emit:e},!0),y=v("wordWrap",{props:t,emit:e},!1),h=g(new W);function R(){h.value=new W}const N=j(()=>h.value.path?.substring(0,h.value.path.length-p.value.length-1));D(()=>i.state.offline,()=>{h.value.connected=!1});const U=v("autoScroll",{props:t,emit:e},!0),B="40";return{query:g(null),logFiles:g([]),results:h,parentPath:N,relativeID:o,previousRelativeID:b,inputID:a,validateInputID:d,relativeTokens:f,file:p,fileLabel:g("Select File"),fileDisabled:g(!1),jobLog:g(o.value==null?0:1),timestamps:r,wordWrap:y,autoScroll:U,reset:R,toolbarBtnSize:B,toolbarBtnProps:ke(B)}},mounted(){this.$watch(()=>({id:this.id??void 0,file:this.file??void 0}),async({id:t},e)=>{this.updateQuery(),t!==e?.id&&await this.setNewFile(!e)},{immediate:!0})},computed:{workflowTokens(){return new V(this.workflowId)},id(){return this.jobLog?this.relativeTokens?.clone(this.workflowTokens)?.id:this.workflowId},controlGroups(){return[{title:"Log",controls:[{title:"Timestamps",icon:re,action:"toggle",value:this.timestamps,key:"timestamps"},{title:"Word wrap",icon:ne,action:"toggle",value:this.wordWrap,key:"wordWrap"},{title:"Auto scroll",icon:ue,action:"toggle",value:this.autoScroll,key:"autoScroll"}]}]}},methods:{setOption(t,e){this[t]=e},updateQuery(){if(this.reset(),!this.file||!this.id){this.query=null;return}this.query=new ae(qe,{id:this.id,file:this.file},`log-query-${this._uid}`,[new Pe(this.results)],!1,!1)},async getDefaultJobLog(){let t;try{this.relativeTokens&&(t=await this.$workflowService.query2(Oe,{id:this.relativeTokens.id,workflowId:this.workflowTokens.workflow}))}catch(e){console.error(e);return}return ie(t?.data?.jobs?.[0]?.state)},getDefaultWorkflowLog(){return this.logFiles.find(t=>t.startsWith("scheduler/"))},async updateLogFileList(){if(!this.id){this.handleNoLogFiles();return}this.fileLabel="Updating available files...",this.fileDisabled=!0;let t;try{t=await this.$workflowService.apolloClient.query({query:je,variables:{id:this.id}})}catch(i){this.handleLogFileListingErr(i),this.handleNoLogFiles();return}if(!this.id)return;const e=t.data.logFiles?.files??[];e.length?(this.fileLabel="Select File",this.fileDisabled=!1,this.logFiles=e):(t.errors?.length&&this.handleLogFileListingErr(t.errors[0].message),this.handleNoLogFiles())},async setNewFile(t){const e=[this.updateLogFileList()];this.jobLog&&!t&&e.push(this.getDefaultJobLog().then(i=>{this.file=i})),await Promise.all(e),this.jobLog||(this.file=this.getDefaultWorkflowLog())},handleNoLogFiles(){this.fileLabel=this.id?`No log files for ${this.id}`:"Enter a task/job ID",this.fileDisabled=!0,this.logFiles=[]},handleLogFileListingErr(t){this.$store.dispatch("setAlert",new se(t,"error"))}},watch:{jobLog(t,e){this.file=null,this.relativeID=t?this.previousRelativeID:null}},icons:{mdiFolderRefresh:te,mdiPowerPlug:ee,mdiPowerPlugOff:$,mdiFileAlertOutline:K}},Ee={"data-cy":"log-path",class:"ml-2 mr-1 d-flex text-medium-emphasis text-pre overflow-x-hidden"},Re={class:"flex-shrink-1 text-truncate"},Ne={class:"text-pre-wrap text-break"};function Ue(t,e,i,o,b,a){const d=F("ViewToolbar"),f=F("CopyBtn"),p=F("log-component");return n(),c(q,{class:"c-log h-100 pa-0 d-flex flex-column",fluid:""},{default:s(()=>[l(q,{fluid:""},{default:s(()=>[l(I,{dense:"",class:"flex-0-0"},{default:s(()=>[l(k,{class:"pt-0"},{default:s(()=>[l(he,{modelValue:o.jobLog,"onUpdate:modelValue":e[0]||(e[0]=r=>o.jobLog=r),divided:"",mandatory:"",variant:"outlined",color:"primary",density:"comfortable"},{default:s(()=>[l(S,{"data-cy":"workflow-toggle"},{default:s(()=>e[6]||(e[6]=[L("Workflow",-1)])),_:1,__:[6]}),l(S,{"data-cy":"job-toggle"},{default:s(()=>e[7]||(e[7]=[L("Job",-1)])),_:1,__:[7]})]),_:1},8,["modelValue"]),l(d,{groups:a.controlGroups,onSetOption:a.setOption,size:o.toolbarBtnSize},null,8,["groups","onSetOption","size"])]),_:1})]),_:1}),l(I,{dense:"",class:"flex-0-0"},{default:s(()=>[l(k,{cols:"8"},{default:s(()=>[o.jobLog?(n(),c(O,{key:0,"data-cy":"job-id-input",class:"flex-grow-1 flex-column",modelValue:o.inputID,"onUpdate:modelValue":e[1]||(e[1]=r=>o.inputID=r),rules:[o.validateInputID],placeholder:"cycle/task/job",clearable:""},null,8,["modelValue","rules"])):(n(),c(O,{key:1,"data-cy":"workflow-id-input",modelValue:t.workflowId,"onUpdate:modelValue":e[2]||(e[2]=r=>t.workflowId=r),disabled:""},null,8,["modelValue"]))]),_:1}),l(k,{cols:"4",class:"d-flex align-start col-gap-2"},{default:s(()=>[l(me,{"data-cy":"file-input",label:o.fileLabel,disabled:o.fileDisabled,items:o.logFiles,modelValue:o.file,"onUpdate:modelValue":e[3]||(e[3]=r=>o.file=r),"menu-props":{"data-cy":"file-input-menu"}},null,8,["label","disabled","items","modelValue"]),l(S,P({onClick:e[4]||(e[4]=()=>this.updateLogFileList())},o.toolbarBtnProps,{"data-cy":"refresh-files"}),{default:s(()=>[l(ge,{icon:t.$options.icons.mdiFolderRefresh},null,8,["icon"]),l(we,null,{default:s(()=>e[8]||(e[8]=[L("Refresh file list",-1)])),_:1,__:[8]})]),_:1},16)]),_:1})]),_:1}),l(I,{dense:"",class:"flex-0-0"},{default:s(()=>[o.results.path?(n(),c(k,{key:0,class:"d-flex align-center"},{default:s(()=>[l(be,P({"data-cy":"connected-icon",variant:"outlined",class:"flex-shrink-0"},o.results.connected?{color:"success",prependIcon:t.$options.icons.mdiPowerPlug}:{color:"error",prependIcon:t.$options.icons.mdiPowerPlugOff,onClick:a.updateQuery}),{default:s(()=>[L(w(o.results.connected?"Connected":"Reconnect"),1)]),_:1},16),m("div",Ee,[m("span",null,w(o.results.host)+":",1),m("span",Re,w(o.parentPath),1),m("span",null,"/"+w(o.file),1)]),l(f,{text:o.results.path,tooltip:"Copy path"},null,8,["text"])]),_:1})):T("",!0)]),_:1}),o.results.error?(n(),c(Ve,{key:0,type:"error",variant:"tonal",density:"compact",class:"mt-2",icon:t.$options.icons.mdiFileAlertOutline},{default:s(()=>[m("span",Ne,w(o.results.error),1)]),_:1},8,["icon"])):T("",!0)]),_:1}),a.id&&o.file&&o.results.connected==null?(n(),c(ye,{key:0,type:"text@5",class:"align-content-start"})):(n(),c(p,{key:1,"data-cy":"log-viewer",logs:o.results.lines,timestamps:o.timestamps,"word-wrap":o.wordWrap,autoScroll:o.autoScroll,"onUpdate:autoScroll":e[5]||(e[5]=r=>o.autoScroll=r)},null,8,["logs","timestamps","word-wrap","autoScroll"]))]),_:1})}const Ye=E(We,[["render",Ue]]);export{Ye as default};
