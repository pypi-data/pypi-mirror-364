name: Test, Build and Publish

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Run tests

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        # This is the version of the action for setting up Python, not the Python version.
        uses: actions/setup-python@v5
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'
      # You can test your matrix by printing the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install depdencies
        run: python -m pip install .
      - name: Install pytest
        run: python -m pip install pytest
      - name: Install git
        run: sudo apt-get install git
      - name: Get testing data
        run: git clone https://github.com/cgannonucm/Galacticus-Data
      - name: Copy testing data
        run: cp -r Galacticus-Data/subscript-test tests/data
      - name: Run pytest
        run: pytest

  build-pip:
    runs-on: ubuntu-latest
    name: Build and Publish in pypi Repository
    needs: test
    if: github.ref_type == 'branch' && github.ref_name == 'main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*
        
  build-conda:
    name: Build and Upload Conda Package
    runs-on: ubuntu-latest
    needs: test
    if: github.ref_type == 'branch' && github.ref_name == 'main'


    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: build-env
          python-version: 3.11
          auto-update-conda: true          
          channels: conda-forge

      - name: Install conda-build and dependencies
        run: |
          conda install conda-build anaconda-client
          conda config --set anaconda_upload no
        shell: bash -l {0}

      - name: Build the conda package
        run: conda-build .
        shell: bash -l {0}

      - name: Upload to Anaconda
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        run: |
          anaconda upload --user cgannonucm $(conda-build . --output)
        shell: bash -l {0}
