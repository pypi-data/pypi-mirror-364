// This file is autogenerated. DO NOT EDIT

#pragma once
#include <semiwrap.h>

// wrapped header

#include <frc/smartdashboard/Field2d.h>

// from extra_includes
#include <networktables/NTSendableBuilder.h>

#include <trampolines/nt__NTSendable.hpp>

namespace frc {

template <typename CfgBase = swgen::EmptyTrampolineCfg>
struct PyTrampolineCfg_Field2d :
  nt::PyTrampolineCfg_NTSendable<
  CfgBase
  >
{
  using Base = frc::Field2d;
  using override_base_InitSendable_RTNTSendableBuilder = frc::Field2d;
};

template <typename PyTrampolineBase, typename PyTrampolineCfg>
using PyTrampolineBase_Field2d =
  nt::PyTrampoline_NTSendable<
    PyTrampolineBase
    , PyTrampolineCfg>
;

template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_Field2d : PyTrampolineBase_Field2d<PyTrampolineBase, PyTrampolineCfg> {
  using PyTrampolineBase_Field2d<PyTrampolineBase, PyTrampolineCfg>::PyTrampolineBase_Field2d;
  using Entry [[maybe_unused]] = typename frc::Field2d::Entry;

  #ifndef SWGEN_DISABLE_InitSendable_RTNTSendableBuilder
    void InitSendable(nt::NTSendableBuilder& builder) override {
      using LookupBase = typename PyTrampolineCfg::Base;
      using CxxCallBase = typename PyTrampolineCfg::override_base_InitSendable_RTNTSendableBuilder;
      PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(void), LookupBase,
        "initSendable", builder);
      return CxxCallBase::InitSendable(std::forward<decltype(builder)>(builder));
    }
  #endif
};

}; // namespace frc
