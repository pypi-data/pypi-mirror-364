// This file is autogenerated. DO NOT EDIT

#pragma once
#include <semiwrap.h>

// wrapped header

#include <frc/MotorSafety.h>

// from extra_includes
#include <wpi/SmallString.h>

namespace frc {

template <typename CfgBase = swgen::EmptyTrampolineCfg>
struct PyTrampolineCfg_MotorSafety : CfgBase
{
  using Base = frc::MotorSafety;
  using override_base_StopMotor_v = frc::MotorSafety;
  using override_base_KGetDescription_v = frc::MotorSafety;
};

template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_MotorSafety : PyTrampolineBase {
  using PyTrampolineBase::PyTrampolineBase;

  #ifndef SWGEN_DISABLE_StopMotor_v
    void StopMotor() override {
      using LookupBase = typename PyTrampolineCfg::Base;
      SEMIWRAP_OVERRIDE_PURE_NAME(MotorSafety, PYBIND11_TYPE(void), LookupBase,
        "stopMotor", StopMotor, );
    }
  #endif

  #ifndef SWGEN_DISABLE_KGetDescription_v
    std::string GetDescription() const override {
      using LookupBase = typename PyTrampolineCfg::Base;
      SEMIWRAP_OVERRIDE_PURE_NAME(MotorSafety, PYBIND11_TYPE(std::string), LookupBase,
        "getDescription", GetDescription, );
    }
  #endif
};

}; // namespace frc
