// This file is autogenerated. DO NOT EDIT

#pragma once
#include <semiwrap.h>

// wrapped header

#include <frc/PS4Controller.h>

// from extra_includes
#include <wpi/sendable/SendableBuilder.h>
#include <frc/event/BooleanEvent.h>

#include <trampolines/frc__GenericHID.hpp>
#include <trampolines/wpi__Sendable.hpp>

namespace frc {

template <typename CfgBase = swgen::EmptyTrampolineCfg>
struct PyTrampolineCfg_PS4Controller :
  frc::PyTrampolineCfg_GenericHID<
  wpi::PyTrampolineCfg_Sendable<
  CfgBase
  >
  >
{
  using Base = frc::PS4Controller;
  using override_base_InitSendable_RTSendableBuilder = frc::PS4Controller;
};

template <typename PyTrampolineBase, typename PyTrampolineCfg>
using PyTrampolineBase_PS4Controller =
  frc::PyTrampoline_GenericHID<
    wpi::PyTrampoline_Sendable<
      PyTrampolineBase
      , PyTrampolineCfg>
    , PyTrampolineCfg>
;

template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_PS4Controller : PyTrampolineBase_PS4Controller<PyTrampolineBase, PyTrampolineCfg> {
  using PyTrampolineBase_PS4Controller<PyTrampolineBase, PyTrampolineCfg>::PyTrampolineBase_PS4Controller;
  using Button [[maybe_unused]] = typename frc::PS4Controller::Button;
  using Axis [[maybe_unused]] = typename frc::PS4Controller::Axis;

  #ifndef SWGEN_DISABLE_InitSendable_RTSendableBuilder
    void InitSendable(wpi::SendableBuilder& builder) override {
      using LookupBase = typename PyTrampolineCfg::Base;
      using CxxCallBase = typename PyTrampolineCfg::override_base_InitSendable_RTSendableBuilder;
      PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(void), LookupBase,
        "initSendable", builder);
      return CxxCallBase::InitSendable(std::forward<decltype(builder)>(builder));
    }
  #endif
};

}; // namespace frc
