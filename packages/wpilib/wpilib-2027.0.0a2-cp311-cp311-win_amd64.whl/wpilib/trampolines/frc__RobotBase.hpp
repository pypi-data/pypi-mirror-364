// This file is autogenerated. DO NOT EDIT

#pragma once
#include <semiwrap.h>

// wrapped header

#include <frc/RobotBase.h>

// from extra_includes
#include <frc/DriverStation.h>
#include <rpy/ControlWord.h>

namespace frc {

template <typename CfgBase = swgen::EmptyTrampolineCfg>
struct PyTrampolineCfg_RobotBase : CfgBase
{
  using Base = frc::RobotBase;
  using override_base_StartCompetition_v = frc::RobotBase;
  using override_base_EndCompetition_v = frc::RobotBase;
};

template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_RobotBase : PyTrampolineBase {
  using PyTrampolineBase::PyTrampolineBase;

  #ifndef SWGEN_DISABLE_StartCompetition_v
    void StartCompetition() override {
      using LookupBase = typename PyTrampolineCfg::Base;
      SEMIWRAP_OVERRIDE_PURE_NAME(RobotBase, PYBIND11_TYPE(void), LookupBase,
        "startCompetition", StartCompetition, );
    }
  #endif

  #ifndef SWGEN_DISABLE_EndCompetition_v
    void EndCompetition() override {
      using LookupBase = typename PyTrampolineCfg::Base;
      SEMIWRAP_OVERRIDE_PURE_NAME(RobotBase, PYBIND11_TYPE(void), LookupBase,
        "endCompetition", EndCompetition, );
    }
  #endif
};

}; // namespace frc
