// This file is autogenerated. DO NOT EDIT

#pragma once
#include <semiwrap.h>

// wrapped header

#include <frc/CounterBase.h>

namespace frc {

template <typename CfgBase = swgen::EmptyTrampolineCfg>
struct PyTrampolineCfg_CounterBase : CfgBase
{
  using Base = frc::CounterBase;
  using override_base_KGet_v = frc::CounterBase;
  using override_base_Reset_v = frc::CounterBase;
  using override_base_KGetPeriod_v = frc::CounterBase;
  using override_base_SetMaxPeriod_Tsecond_t = frc::CounterBase;
  using override_base_KGetStopped_v = frc::CounterBase;
  using override_base_KGetDirection_v = frc::CounterBase;
};

template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_CounterBase : PyTrampolineBase {
  using PyTrampolineBase::PyTrampolineBase;
  using EncodingType [[maybe_unused]] = typename frc::CounterBase::EncodingType;

  #ifndef SWGEN_DISABLE_KGet_v
    int Get() const override {
      using LookupBase = typename PyTrampolineCfg::Base;
      SEMIWRAP_OVERRIDE_PURE_NAME(CounterBase, PYBIND11_TYPE(int), LookupBase,
        "get", Get, );
    }
  #endif

  #ifndef SWGEN_DISABLE_Reset_v
    void Reset() override {
      using LookupBase = typename PyTrampolineCfg::Base;
      SEMIWRAP_OVERRIDE_PURE_NAME(CounterBase, PYBIND11_TYPE(void), LookupBase,
        "reset", Reset, );
    }
  #endif

  #ifndef SWGEN_DISABLE_KGetPeriod_v
    units::second_t GetPeriod() const override {
      using LookupBase = typename PyTrampolineCfg::Base;
      SEMIWRAP_OVERRIDE_PURE_NAME(CounterBase, PYBIND11_TYPE(units::second_t), LookupBase,
        "getPeriod", GetPeriod, );
    }
  #endif

  #ifndef SWGEN_DISABLE_SetMaxPeriod_Tsecond_t
    void SetMaxPeriod(units::second_t maxPeriod) override {
      using LookupBase = typename PyTrampolineCfg::Base;
      SEMIWRAP_OVERRIDE_PURE_NAME(CounterBase, PYBIND11_TYPE(void), LookupBase,
        "setMaxPeriod", SetMaxPeriod, maxPeriod);
    }
  #endif

  #ifndef SWGEN_DISABLE_KGetStopped_v
    bool GetStopped() const override {
      using LookupBase = typename PyTrampolineCfg::Base;
      SEMIWRAP_OVERRIDE_PURE_NAME(CounterBase, PYBIND11_TYPE(bool), LookupBase,
        "getStopped", GetStopped, );
    }
  #endif

  #ifndef SWGEN_DISABLE_KGetDirection_v
    bool GetDirection() const override {
      using LookupBase = typename PyTrampolineCfg::Base;
      SEMIWRAP_OVERRIDE_PURE_NAME(CounterBase, PYBIND11_TYPE(bool), LookupBase,
        "getDirection", GetDirection, );
    }
  #endif
};

}; // namespace frc
