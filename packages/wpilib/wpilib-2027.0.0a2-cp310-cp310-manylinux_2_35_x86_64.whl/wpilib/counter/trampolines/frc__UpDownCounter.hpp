// This file is autogenerated. DO NOT EDIT

#pragma once
#include <semiwrap.h>

// wrapped header

#include <frc/counter/UpDownCounter.h>

#include <trampolines/wpi__Sendable.hpp>

namespace frc {

template <typename CfgBase = swgen::EmptyTrampolineCfg>
struct PyTrampolineCfg_UpDownCounter :
  wpi::PyTrampolineCfg_Sendable<
  CfgBase
  >
{
  using Base = frc::UpDownCounter;
  using override_base_InitSendable_RTSendableBuilder = frc::UpDownCounter;
};

template <typename PyTrampolineBase, typename PyTrampolineCfg>
using PyTrampolineBase_UpDownCounter =
  wpi::PyTrampoline_Sendable<
    PyTrampolineBase
    , PyTrampolineCfg>
;

template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_UpDownCounter : PyTrampolineBase_UpDownCounter<PyTrampolineBase, PyTrampolineCfg> {
  using PyTrampolineBase_UpDownCounter<PyTrampolineBase, PyTrampolineCfg>::PyTrampolineBase_UpDownCounter;

  #ifndef SWGEN_DISABLE_InitSendable_RTSendableBuilder
    void InitSendable(wpi::SendableBuilder& builder) override {
      using LookupBase = typename PyTrampolineCfg::Base;
      using CxxCallBase = typename PyTrampolineCfg::override_base_InitSendable_RTSendableBuilder;
      PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(void), LookupBase,
        "_initSendable", builder);
      return CxxCallBase::InitSendable(std::forward<decltype(builder)>(builder));
    }
  #endif
};

}; // namespace frc
