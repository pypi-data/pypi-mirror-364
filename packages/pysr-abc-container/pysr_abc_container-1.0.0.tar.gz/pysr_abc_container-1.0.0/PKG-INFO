Metadata-Version: 2.1
Name: pysr-abc-container
Version: 1.0.0
Summary: Dependecy Injection Container Abstractions
Author: Alexey Volkov
Author-email: webwizardry@hotmail.com
Requires-Python: >=3.12,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.12
Description-Content-Type: text/markdown

# 1. Спецификация

Данный пакет является попыткой адаптации стандарта [PSR-11 Интерфейс Контейнера](https://www.php-fig.org/psr/psr-11/) для Python приложений.     

## 1.1 Основы

Этот документ описывает общий интерфейс для контейнеров внедрения зависимостей.

Цель интерфейса `ABCContainer` - стандартизировать использование контейнеров фреймворками и библиотеками для получения 
объектов и параметров (далее называемых "записями").

Ключевые слова "ДОЛЖЕН", "НЕ ДОЛЖЕН", "ТРЕБУЕТСЯ", "СЛЕДУЕТ", "НЕ СЛЕДУЕТ", "РЕКОМЕНДУЕТСЯ", "МОЖЕТ" и "НЕОБЯЗАТЕЛЬНО" 
в этом документе должны толковаться как описано в RFC 2119.

Термин "разработчик" в этом документе относится к лицу, реализующему `ABCContainer` в библиотеке или фреймворке для 
внедрения зависимостей. Пользователи контейнеров внедрения зависимостей (DIC) называются "пользователями".


### 1.1.1 Идентификаторы записей

Идентификатор записи - это любая допустимая строка (в Python - любой хэшируемый объект), которая уникально 
идентифицирует элемент в контейнере. Идентификатор записи - это непрозрачный ключ, поэтому вызывающая сторона НЕ ДОЛЖНА 
предполагать, что структура ключа несет какую-либо смысловую нагрузку.


### 1.1.2 Чтение из контейнера

Интерфейс `ABCContainer` предоставляет два метода: get и has.

`get` принимает один обязательный параметр: идентификатор записи и может возвращать что угодно (значение любого типа) 
или вызывать исключение `NotFoundError`, если идентификатор неизвестен контейнеру. Два последовательных вызова `get` с 
одним идентификатором ДОЛЖНЫ возвращать одинаковое значение. Однако в зависимости от реализации и/или конфигурации 
пользователя могут возвращаться разные значения, поэтому пользователям НЕ СЛЕДУЕТ полагаться на получение того же 
значения при последовательных вызовах.

`has` принимает один параметр: идентификатор записи и ДОЛЖЕН возвращать `True`, если запись с таким идентификатором 
существует в контейнере, и `False` в противном случае. Если `has(name)` возвращает False, то `get(name)` ДОЛЖЕН вызывать 
`NotFoundError`.


## 1.2 Исключения

Исключения, вызываемые непосредственно контейнером, ДОЛЖНЫ реализовывать `ContainerError`.

Вызов метода `get` с несуществующим идентификатором ДОЛЖЕН вызывать `NotFoundError`.


## 1.3 Рекомендации по использованию

Пользователям НЕ СЛЕДУЕТ передавать контейнер в объект, чтобы объект мог получить свои собственные зависимости. 

Это означает использование контейнера в качестве Service Locator, что является антипаттерном.


# 2. Пакет

Интерфейсы и классы, а также соответствующие исключения предоставляются как часть пакета `pysr_abc_container`

Пакеты, предоставляющие реализацию контейнера, должны указывать, что они предоставляют `pysr_abc_container` 1.0.0.

Проектам, требующим реализацию, следует требовать например `qbrick_container` 1.0.0 или любую другую совместимую реализацию.

