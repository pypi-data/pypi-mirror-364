@startwbs code_architecture

skinparam backgroundColor transparent

scale 1

<style>
wbsDiagram {
    FontSize 30px
    LineColor #2E2E3E
    LineThickness 5px
    
    node {
        FontName Roboto Slab
        BackgroundColor #2E2E3E
        FontColor #FFFFFF
    }

    boxless {
        FontName Roboto Light
        FontColor #2E2E3E
    }
}
</style>

+ <b>ğŸ“‚ smiffer/</b>


++ <b>ğŸ“‚ grid/</b>

+++< ğŸ“„ grid.py
++++_ ğŸ›  grid()

+++< ğŸ“„ class_stamp.py
++++_ ğŸ›  Stamp._<U+200B>_init_<U+200B>_()
++++_ ğŸ›  Stamp.refresh_orientation()
++++_ ğŸ›  Stamp.stamp_kernel()

+++< ğŸ“„ class_grid_factory.py
++++_ ğŸ›  GridFactory._<U+200B>_init_<U+200B>_()
++++_ ğŸ›  GridFactory._<U+200B>_whole()
++++_ ğŸ›  GridFactory._<U+200B>_pocket_sphere()

+++< ğŸ“„ class_grid.py
++++_ ğŸ›  Grid._<U+200B>_init_<U+200B>_()
++++_ ğŸ›  Grid._<U+200B>_setitem_<U+200B>_()
++++_ ğŸ›  Grid.launch_trimming()
++++_ ğŸ›  Grid.compute_property()
++++_ ğŸ›  Grid.mask()
++++_ ğŸ›  Grid.trimming_coord()
++++_ ğŸ›  Grid.molecule_broad()
++++_ ğŸ›  Grid.resolution()


+++ <b>ğŸ“‚ trimming_strategy/</b>

++++< ğŸ“„ class_rnds.py
+++++_ ğŸ›  StrategyRndsTrimming.trim_box()

++++< ğŸ“„ class_sphere.py
+++++_ ğŸ›  StrategySphereTrimming.trim_box()

++++ ğŸ“„ class_trimming.py
+++++_ ğŸ›  StrategyTrimming.trim_box()

++++ ğŸ“„ class_occupancy.py
+++++_ ğŸ›  StrategyOccupancyTrimming._<U+200B>_init_<U+200B>_()
+++++_ ğŸ›  StrategyOccupancyTrimming.trim_box()


+++ <b>ğŸ“‚ property_strategy/</b>

++++< ğŸ“„ class_apbs.py
+++++_ ğŸ›  StrategyApbs._<U+200B>_init_<U+200B>_()
+++++_ ğŸ›  StrategyApbs.populate_grid()
+++++_ ğŸ›  StrategyApbs.log_grid()

++++< ğŸ“„ class_h_bond.py
+++++_ ğŸ›  StrategyHBond._<U+200B>_init_<U+200B>_()
+++++_ ğŸ›  StrategyHBond.populate_grid()

++++ ğŸ“„ class_hydrophobicity.py
+++++_ ğŸ›  StrategyHydrophobic.populate_grid()

++++ ğŸ“„ class_pi_stacking.py
+++++_ ğŸ›  StrategyPiStacking._<U+200B>_get_angle()
+++++_ ğŸ›  StrategyPiStacking.populate_grid()

++++ ğŸ“„ class_property.py
+++++_ ğŸ›  StrategyProperty._<U+200B>_init_<U+200B>_()
+++++_ ğŸ›  StrategyProperty._<U+200B>_str_<U+200B>_()
+++++_ ğŸ›  StrategyProperty.name()
+++++_ ğŸ›  StrategyProperty.populate_grid()


+++ <b>ğŸ“‚ kernel/</b>

++++< ğŸ“„ class_gaussian.py
+++++_ ğŸ›  GaussianKernel._<U+200B>_init_<U+200B>_()

++++< ğŸ“„ class_kernel.py
+++++_ ğŸ›  Kernel._<U+200B>_init_<U+200B>_()
+++++_ ğŸ›  Kernel.kernel()
+++++_ ğŸ›  Kernel.kernel_resolution()

++++ ğŸ“„ class_occupancy.py
+++++_ ğŸ›  OccupancyKernel._<U+200B>_init_<U+200B>_()

++++ ğŸ“„ class_bivariate_gaussian.py
+++++_ ğŸ›  BivariateGaussianKernel._<U+200B>_init_<U+200B>_()
+++++_ ğŸ›  BivariateGaussianKernel.refresh_orientation()
+++++_ ğŸ›  BivariateGaussianKernel._<U+200B>_get_normal_vector()
+++++_ ğŸ›  BivariateGaussianKernel._<U+200B>_get_angle()
+++++_ ğŸ›  BivariateGaussianKernel._<U+200B>_stacking_gaussian()



++ <U+200B>

+++< ğŸ“„ main.py
++++_ ğŸ›  main()


+++ <b>ğŸ“‚ parse_yaml/</b>

++++ ğŸ“„ class_parse_yaml.py
+++++_ ğŸ›  ParseYaml._<U+200B>_init_<U+200B>_()
+++++_ ğŸ›  ParseYaml._<U+200B>_setitem_<U+200B>_()
+++++_ ğŸ›  ParseYaml._<U+200B>_getitem_<U+200B>_()
+++++_ ğŸ›  ParseYaml.keys()
+++++_ ğŸ›  ParseYaml.values()
+++++_ ğŸ›  ParseYaml.items()
+++++_ ğŸ›  ParseYaml.clean()
+++++_ ğŸ›  ParseYaml._<U+200B>_str_<U+200B>_()

++++ ğŸ“„ class_set_parameter.py
+++++_ ğŸ›  SetParameter._<U+200B>_init_<U+200B>_()
+++++_ ğŸ›  SetParameter.check_error()
+++++_ ğŸ›  SetParameter._<U+200B>_length_good()
+++++_ ğŸ›  SetParameter._<U+200B>_type_good()
+++++_ ğŸ›  SetParameter.value()
+++++_ ğŸ›  SetParameter.path()
+++++_ ğŸ›  SetParameter._<U+200B>_str_<U+200B>_()

++++ ğŸ“„ parse_yaml.py
+++++_ ğŸ›  parse_yaml()


+++< <b>ğŸ“‚ utils/</b>

++++ ğŸ“„ class_atom_constant.py
+++++_ ğŸ›  AtomConstant._<U+200B>_setitem_<U+200B>_()
+++++_ ğŸ›  AtomConstant._<U+200B>_getitem_<U+200B>_()
+++++_ ğŸ›  AtomConstant.keys()
+++++_ ğŸ›  AtomConstant.values()
+++++_ ğŸ›  AtomConstant.items()
+++++_ ğŸ›  AtomConstant._<U+200B>_str_<U+200B>_()

++++ ğŸ“„ parse_argument.py
+++++_ ğŸ›  parse_argument()

++++ ğŸ“„ class_write_json.py
+++++_ ğŸ›  WriteJson._<U+200B>_init_<U+200B>_()
+++++_ ğŸ›  WriteJson.write()
+++++_ ğŸ›  WriteJson._<U+200B>_str_<U+200B>_()

@endwbs
