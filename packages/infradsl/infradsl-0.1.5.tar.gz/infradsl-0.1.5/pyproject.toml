[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "infradsl"
version = "0.1.5"
description = "The Rails of Modern Infrastructure - Enterprise DSL for Infrastructure Management"
authors = [
    { name = "InfraDSL Team", email = "team@infradsl.dev" }
]
readme = "README.md"
license = "MIT"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
]

dependencies = [
    "pydantic>=2.0.0",
    "click>=8.0.0",
    "rich>=13.0.0",
    "boto3>=1.26.0",
    "google-cloud-compute>=1.0.0",
    "google-cloud-storage>=2.0.0",
    "azure-mgmt-compute>=30.0.0",
    "azure-identity>=1.12.0",
    "python-digitalocean>=1.17.0",
    "cloudflare>=2.19.0",
    "pyyaml>=6.0",
    "jinja2>=3.1.0",
    "requests>=2.28.0",
    "aiohttp>=3.8.0",
    "asyncio-mqtt>=0.11.0",
    "schedule>=1.2.0",
    "python-dotenv>=1.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "fastapi>=0.100.0",
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
    "uvicorn[standard]>=0.23.0",
    "websockets>=11.0",
    "grpcio>=1.73.1",
    "grpcio-tools>=1.60.0",
    "tabulate>=0.9.0",
    "networkx>=3.0",
    "asyncpg>=0.29.0",
    "redis>=5.0.0",
    "watchdog>=3.0.0",
]
[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

aws = [
    "boto3>=1.26.0",
    "botocore>=1.29.0",
]

gcp = [
    "google-cloud-compute>=1.0.0",
    "google-cloud-storage>=2.0.0",
    "google-cloud-dns>=0.35.0",
    "google-auth>=2.17.0",
]

azure = [
    "azure-mgmt-compute>=30.0.0",
    "azure-identity>=1.12.0",
    "azure-mgmt-resource>=23.0.0",
]

digitalocean = [
    "python-digitalocean>=1.17.0",
]

cloudflare = [
    "cloudflare>=2.19.0",
]

performance = [
    "asyncpg>=0.29.0",
    "redis>=5.0.0", 
    "psycopg2>=2.9.0",
    "hiredis>=2.2.0",
]

[project.scripts]
infradsl = "infradsl.cli.main:main"
infra = "infradsl.cli.main:main"

[project.urls]
Homepage = "https://infradsl.dev"
Documentation = "https://docs.infradsl.dev"
Repository = "https://github.com/infradsl/infradsl"
Issues = "https://github.com/infradsl/infradsl/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["*"]
exclude = ["tests*", "docs*", ".venv*", "build*", "dist*"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["core", "providers", "cli", "daemon", "templates", "registry"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "boto3.*",
    "botocore.*",
    "google.*",
    "azure.*",
    "digitalocean.*",
    "cloudflare.*",
    "infradsl.proto.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=infradsl",
    "--cov-report=term-missing",
    "--cov-report=html",
]
asyncio_mode = "auto"
markers = [
    "asyncio: mark test as async",
]

[tool.pyright]
exclude = [
    "infradsl/proto/nexus_pb2.py",
    "infradsl/proto/nexus_pb2_grpc.py",
    "**/*_pb2.py",
    "**/*_pb2_grpc.py",
    ".venv",
    "build",
    "dist",
    "node_modules",
]
reportMissingTypeStubs = false
reportUnknownMemberType = false
reportUnknownArgumentType = false
reportUnknownVariableType = false
reportUnknownLambdaType = false
reportUnknownParameterType = false
