[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "structllm"
version = "0.1.0"
description = "Universal Python library for Structured Outputs with any LLM provider"
authors = [
    {name = "Piotr Bednarski", email = "piotr.maciej.bednarski@gmail.com"},
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
keywords = ["llm", "structured-outputs", "pydantic", "ai", "openai", "anthropic", "json-schema", "litellm"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Typing :: Typed",
]
dependencies = [
    "litellm>=1.0.0",
    "pydantic>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/piotrmaciejbednarski/structllm"
Documentation = "https://github.com/piotrmaciejbednarski/structllm#readme"
Repository = "https://github.com/piotrmaciejbednarski/structllm.git"
Issues = "https://github.com/piotrmaciejbednarski/structllm/issues"

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "pytest>=7.0.0",
]

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = ["E", "F", "W", "B", "I", "N", "UP"]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
markers = [
    "integration: marks tests as integration tests (may require external services)",
]

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "ruff>=0.12.5",
]
