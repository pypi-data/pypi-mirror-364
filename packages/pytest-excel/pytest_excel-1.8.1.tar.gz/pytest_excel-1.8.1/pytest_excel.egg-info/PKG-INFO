Metadata-Version: 2.4
Name: pytest-excel
Version: 1.8.0
Summary: pytest plugin for generating excel reports
Home-page: https://github.com/ssrikanta/pytest-excel
Author: santosh
Author-email: santosh <santosh.srikanta@gmail.com>
License-Expression: MIT
Project-URL: Homepage, https://github.com/ssrikanta/pytest-excel
Project-URL: Source, https://github.com/ssrikanta/pytest-excel
Project-URL: Tracker, https://github.com/ssrikanta/pytest-excel/issues
Keywords: excel,pytest,report
Classifier: Development Status :: 5 - Production/Stable
Classifier: Framework :: Pytest
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Topic :: Software Development :: Quality Assurance
Classifier: Topic :: Software Development :: Testing
Classifier: Topic :: Utilities
Requires-Python: >=3.11
Description-Content-Type: text/x-rst
License-File: LICENSE
Requires-Dist: pytest
Requires-Dist: pandas
Requires-Dist: openpyxl
Dynamic: author
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

pytest-excel
================


pytest-excel is a plugin for `py.test <http://pytest.org>`_ that allows to 
to create excel report for test results.


Requirements
------------


You will need the following prerequisites in order to use pytest-excel:

- Python 3.11 and above
- pytest
- pandas
- openpyxl


Installation
------------


To install pytest-excel and required dependencies::

    $ pip install pytest-excel openpyxl

Then run your tests with::

    $ py.test --excelreport=report.xls

If you would like more detailed output (one test per line), then you may use the verbose option::

    $ py.test --verbose

If you would like to run tests without execution to collect test doc string::

    $ py.test --excelreport=report.xls --collect-only


If you would like to get timestamp in the as filename::

    $ py.test --excelreport=report%Y-%M-dT%H%.xls
