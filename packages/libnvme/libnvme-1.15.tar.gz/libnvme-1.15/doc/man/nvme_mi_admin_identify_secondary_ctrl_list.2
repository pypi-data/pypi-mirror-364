.TH "nvme_mi_admin_identify_secondary_ctrl_list" 9 "nvme_mi_admin_identify_secondary_ctrl_list" "July 2025" "libnvme API manual" LINUX
.SH NAME
nvme_mi_admin_identify_secondary_ctrl_list \- Perform an Admin identify for a secondary controller list.
.SH SYNOPSIS
.B "int" nvme_mi_admin_identify_secondary_ctrl_list
.BI "(nvme_mi_ctrl_t ctrl "  ","
.BI "__u16 cntid "  ","
.BI "struct nvme_secondary_ctrl_list *list "  ");"
.SH ARGUMENTS
.IP "ctrl" 12
Controller to process identify command
.IP "cntid" 12
Controller ID to specify list start
.IP "list" 12
List data to populate
.SH "DESCRIPTION"
Perform an Identify command, for the secondary controllers associated with
the current primary controller. Only entries with IDs greater than or
equal to \fIcntid\fP are returned.

Will return an error if the length of the response data (from the
controller) is not a full \fINVME_IDENTIFY_DATA_SIZE\fP, so \fIlist\fP will be
be fully populated on success.

See: \fIstruct nvme_secondary_ctrl_list\fP
.SH "RETURN"
0 on success, non-zero on failure
