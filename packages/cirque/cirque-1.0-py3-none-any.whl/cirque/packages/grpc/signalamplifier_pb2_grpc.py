# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import cirque.packages.grpc.datatypes_pb2 as datatypes__pb2

GRPC_GENERATED_VERSION = '1.73.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in signalamplifier_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class SignalAmplifierServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetOverflowCounter = channel.unary_unary(
                '/signalamplifier.SignalAmplifierService/GetOverflowCounter',
                request_serializer=datatypes__pb2.EndpointIndex.SerializeToString,
                response_deserializer=datatypes__pb2.UInt.FromString,
                _registered_method=True)
        self.ResetOverflowCounter = channel.unary_unary(
                '/signalamplifier.SignalAmplifierService/ResetOverflowCounter',
                request_serializer=datatypes__pb2.EndpointIndex.SerializeToString,
                response_deserializer=datatypes__pb2.Empty.FromString,
                _registered_method=True)
        self.SetFactor = channel.unary_unary(
                '/signalamplifier.SignalAmplifierService/SetFactor',
                request_serializer=datatypes__pb2.IndexedInt.SerializeToString,
                response_deserializer=datatypes__pb2.Empty.FromString,
                _registered_method=True)


class SignalAmplifierServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetOverflowCounter(self, request, context):
        """*
        @brief Read the overflow counter.

        @param msg sdr.datatypes.EndpointIndex
        @return msg UInt
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetOverflowCounter(self, request, context):
        """*
        @brief Reset the overflow counter.

        Returns whether the module is currently enabled.
        @param msg sdr.datatypes.EndpointIndex
        @return void
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetFactor(self, request, context):
        """*
        @brief Set the multiplication factor.

        Data stream will be forwarded without preprocessing.
        @param msg sdr.datatypes.IndexedInt
        @return void
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SignalAmplifierServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetOverflowCounter': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOverflowCounter,
                    request_deserializer=datatypes__pb2.EndpointIndex.FromString,
                    response_serializer=datatypes__pb2.UInt.SerializeToString,
            ),
            'ResetOverflowCounter': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetOverflowCounter,
                    request_deserializer=datatypes__pb2.EndpointIndex.FromString,
                    response_serializer=datatypes__pb2.Empty.SerializeToString,
            ),
            'SetFactor': grpc.unary_unary_rpc_method_handler(
                    servicer.SetFactor,
                    request_deserializer=datatypes__pb2.IndexedInt.FromString,
                    response_serializer=datatypes__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'signalamplifier.SignalAmplifierService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('signalamplifier.SignalAmplifierService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class SignalAmplifierService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetOverflowCounter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/signalamplifier.SignalAmplifierService/GetOverflowCounter',
            datatypes__pb2.EndpointIndex.SerializeToString,
            datatypes__pb2.UInt.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ResetOverflowCounter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/signalamplifier.SignalAmplifierService/ResetOverflowCounter',
            datatypes__pb2.EndpointIndex.SerializeToString,
            datatypes__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetFactor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/signalamplifier.SignalAmplifierService/SetFactor',
            datatypes__pb2.IndexedInt.SerializeToString,
            datatypes__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
