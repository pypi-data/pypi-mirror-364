# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: bench.proto
# Protobuf Python Version: 6.31.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    0,
    '',
    'bench.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import cirque.packages.grpc.datatypes_pb2 as datatypes__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0b\x62\x65nch.proto\x12\x05\x62\x65nch\x1a\x0f\x64\x61tatypes.proto\".\n\x0bSizeRequest\x12\x0c\n\x04size\x18\x01 \x01(\x04\x12\x11\n\tblocksize\x18\x02 \x01(\x04\"=\n\rDurationReply\x12\x10\n\x08\x64uration\x18\x01 \x01(\x01\x12\x1a\n\x12nivContextSwitches\x18\x02 \x01(\r\"#\n\x0e\x41vailableReply\x12\x11\n\tavailable\x18\x01 \x01(\x08\"\"\n\x0e\x43ounterRequest\x12\x10\n\x08newValue\x18\x01 \x01(\x05\",\n\nBenchReply\x12\x0f\n\x07\x43ounter\x18\x01 \x01(\x05\x12\r\n\x05\x41rray\x18\x02 \x01(\x0c\"\x1f\n\x0e\x42\x65nchmarkInt32\x12\r\n\x05value\x18\x01 \x01(\r\"%\n\x13\x42\x65nchmarkInt32Array\x12\x0e\n\x06values\x18\x01 \x03(\r\"\x1a\n\nByteStream\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x0c\"0\n\x08\x44MASetup\x12\x0c\n\x04size\x18\x01 \x01(\x03\x12\x16\n\x0etimeoutinmsecs\x18\x02 \x01(\x05\"\x1d\n\x0c\x41\x63quiredData\x12\r\n\x05value\x18\x01 \x03(\r\"7\n\rLostDataReply\x12\x12\n\nhw_counter\x18\x01 \x01(\x05\x12\x12\n\nsw_counter\x18\x02 \x01(\x05\x32\x9b\x10\n\x10\x42\x65nchmarkService\x12H\n\x18GetDurationOfLastRequest\x12\x14.sdr.datatypes.Empty\x1a\x14.bench.DurationReply\"\x00\x12\x46\n\x15IsHWEndpointAvailable\x12\x14.sdr.datatypes.Empty\x1a\x15.bench.AvailableReply\"\x00\x12I\n\x1aSetupSoftwareBandwidthTest\x12\x12.bench.SizeRequest\x1a\x15.bench.AvailableReply\"\x00\x12O\n SetupSoftwareStreamBandwidthTest\x12\x12.bench.SizeRequest\x1a\x15.bench.AvailableReply\"\x00\x12S\n$SetupSoftwareByteStreamBandwidthTest\x12\x12.bench.SizeRequest\x1a\x15.bench.AvailableReply\"\x00\x12I\n\x1aSetupHardwareBandwidthTest\x12\x12.bench.SizeRequest\x1a\x15.bench.AvailableReply\"\x00\x12\x41\n\x15SetupDMABandwidthTest\x12\x0f.bench.DMASetup\x1a\x15.bench.AvailableReply\"\x00\x12G\n\x16GetSoftwareReadLatency\x12\x14.sdr.datatypes.Empty\x1a\x15.bench.BenchmarkInt32\"\x00\x12H\n\x17GetSoftwareWriteLatency\x12\x15.bench.BenchmarkInt32\x1a\x14.sdr.datatypes.Empty\"\x00\x12M\n\x1bGetSoftwareWriteReadLatency\x12\x15.bench.BenchmarkInt32\x1a\x15.bench.BenchmarkInt32\"\x00\x12G\n\x16GetHardwareReadLatency\x12\x14.sdr.datatypes.Empty\x1a\x15.bench.BenchmarkInt32\"\x00\x12H\n\x17GetHardwareWriteLatency\x12\x15.bench.BenchmarkInt32\x1a\x14.sdr.datatypes.Empty\"\x00\x12M\n\x1bGetHardwareWriteReadLatency\x12\x15.bench.BenchmarkInt32\x1a\x15.bench.BenchmarkInt32\"\x00\x12N\n\x18GetSoftwareReadBandwidth\x12\x14.sdr.datatypes.Empty\x1a\x1a.bench.BenchmarkInt32Array\"\x00\x12O\n\x19GetSoftwareWriteBandwidth\x12\x1a.bench.BenchmarkInt32Array\x1a\x14.sdr.datatypes.Empty\"\x00\x12N\n\x18GetHardwareReadBandwidth\x12\x14.sdr.datatypes.Empty\x1a\x1a.bench.BenchmarkInt32Array\"\x00\x12O\n\x19GetHardwareWriteBandwidth\x12\x1a.bench.BenchmarkInt32Array\x1a\x14.sdr.datatypes.Empty\"\x00\x12V\n\x1eGetSoftwareReadStreamBandwidth\x12\x14.sdr.datatypes.Empty\x1a\x1a.bench.BenchmarkInt32Array\"\x00\x30\x01\x12W\n\x1fGetSoftwareWriteStreamBandwidth\x12\x1a.bench.BenchmarkInt32Array\x1a\x14.sdr.datatypes.Empty\"\x00(\x01\x12Q\n\"GetSoftwareReadByteStreamBandwidth\x12\x14.sdr.datatypes.Empty\x1a\x11.bench.ByteStream\"\x00\x30\x01\x12R\n#GetSoftwareWriteByteStreamBandwidth\x12\x11.bench.ByteStream\x1a\x14.sdr.datatypes.Empty\"\x00(\x01\x12\x44\n\x13GetDMAReadBandwidth\x12\x14.sdr.datatypes.Empty\x1a\x13.bench.AcquiredData\"\x00\x30\x01\x12>\n\x0eGetDMALostData\x12\x14.sdr.datatypes.Empty\x1a\x14.bench.LostDataReply\"\x00\x12?\n\x0eIsIICAvailable\x12\x14.sdr.datatypes.Empty\x1a\x15.bench.AvailableReply\"\x00\x12\x42\n\x11GetIICReadLatency\x12\x14.sdr.datatypes.Empty\x1a\x15.bench.BenchmarkInt32\"\x00\x12\x43\n\x12GetIICWriteLatency\x12\x15.bench.BenchmarkInt32\x1a\x14.sdr.datatypes.Empty\"\x00\x12H\n\x16GetIICWriteReadLatency\x12\x15.bench.BenchmarkInt32\x1a\x15.bench.BenchmarkInt32\"\x00\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'bench_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_SIZEREQUEST']._serialized_start=39
  _globals['_SIZEREQUEST']._serialized_end=85
  _globals['_DURATIONREPLY']._serialized_start=87
  _globals['_DURATIONREPLY']._serialized_end=148
  _globals['_AVAILABLEREPLY']._serialized_start=150
  _globals['_AVAILABLEREPLY']._serialized_end=185
  _globals['_COUNTERREQUEST']._serialized_start=187
  _globals['_COUNTERREQUEST']._serialized_end=221
  _globals['_BENCHREPLY']._serialized_start=223
  _globals['_BENCHREPLY']._serialized_end=267
  _globals['_BENCHMARKINT32']._serialized_start=269
  _globals['_BENCHMARKINT32']._serialized_end=300
  _globals['_BENCHMARKINT32ARRAY']._serialized_start=302
  _globals['_BENCHMARKINT32ARRAY']._serialized_end=339
  _globals['_BYTESTREAM']._serialized_start=341
  _globals['_BYTESTREAM']._serialized_end=367
  _globals['_DMASETUP']._serialized_start=369
  _globals['_DMASETUP']._serialized_end=417
  _globals['_ACQUIREDDATA']._serialized_start=419
  _globals['_ACQUIREDDATA']._serialized_end=448
  _globals['_LOSTDATAREPLY']._serialized_start=450
  _globals['_LOSTDATAREPLY']._serialized_end=505
  _globals['_BENCHMARKSERVICE']._serialized_start=508
  _globals['_BENCHMARKSERVICE']._serialized_end=2583
# @@protoc_insertion_point(module_scope)
