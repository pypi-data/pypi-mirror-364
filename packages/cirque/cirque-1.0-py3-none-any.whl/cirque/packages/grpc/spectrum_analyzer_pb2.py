# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: spectrum_analyzer.proto
# Protobuf Python Version: 6.31.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    0,
    '',
    'spectrum_analyzer.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import cirque.packages.grpc.datatypes_pb2 as datatypes__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x17spectrum_analyzer.proto\x12\x11spectrum_analyzer\x1a\x0f\x64\x61tatypes.proto\"}\n\x0b\x43hannelInfo\x12\x0f\n\x07\x65nabled\x18\x02 \x01(\x08\x12-\n\x04type\x18\x03 \x01(\x0e\x32\x1f.spectrum_analyzer.Channel.Type\x12.\n\x04mode\x18\x04 \x01(\x0e\x32 .spectrum_analyzer.HoldMode.Mode\"f\n\x07\x43hannel\x12\x0e\n\x06number\x18\x01 \x01(\r\x12-\n\x04type\x18\x02 \x01(\x0e\x32\x1f.spectrum_analyzer.Channel.Type\"\x1c\n\x04Type\x12\n\n\x06SINGLE\x10\x00\x12\x08\n\x04\x44UAL\x10\x01\"Q\n\nBufferData\x12\x11\n\tmagnitude\x18\x01 \x03(\x01\x12\x15\n\rchannel_index\x18\x02 \x01(\r\x12\x19\n\x11\x63hannel_sub_index\x18\x03 \x01(\r\"\"\n\x11SamplingFrequency\x12\r\n\x05hertz\x18\x01 \x01(\x01\"\x85\x01\n\x08HoldMode\x12.\n\x04mode\x18\x01 \x01(\x0e\x32 .spectrum_analyzer.HoldMode.Mode\x12\r\n\x05\x61lpha\x18\x02 \x01(\x01\x12\x11\n\thas_alpha\x18\x03 \x01(\x08\"\'\n\x04Mode\x12\x08\n\x04NONE\x10\x00\x12\x07\n\x03\x45MA\x10\x01\x12\x0c\n\x08MAX_HOLD\x10\x02\"p\n\x11\x43hanneledHoldMode\x12+\n\x07\x63hannel\x18\x01 \x01(\x0b\x32\x1a.spectrum_analyzer.Channel\x12.\n\thold_mode\x18\x02 \x01(\x0b\x32\x1b.spectrum_analyzer.HoldMode2\xe5\x05\n\x17SpectrumAnalyzerService\x12I\n\x10\x46\x65tchAllChannels\x12\x14.sdr.datatypes.Empty\x1a\x1d.spectrum_analyzer.BufferData0\x01\x12R\n\x14GetSamplingFrequency\x12\x14.sdr.datatypes.Empty\x1a$.spectrum_analyzer.SamplingFrequency\x12\x46\n\x0bGetHoldMode\x12\x1a.spectrum_analyzer.Channel\x1a\x1b.spectrum_analyzer.HoldMode\x12I\n\x0bSetHoldMode\x12$.spectrum_analyzer.ChanneledHoldMode\x1a\x14.sdr.datatypes.Empty\x12\x41\n\rEnableChannel\x12\x1a.spectrum_analyzer.Channel\x1a\x14.sdr.datatypes.Empty\x12\x42\n\x0e\x44isableChannel\x12\x1a.spectrum_analyzer.Channel\x1a\x14.sdr.datatypes.Empty\x12\x42\n\x0eRefreshChannel\x12\x1a.spectrum_analyzer.Channel\x1a\x14.sdr.datatypes.Empty\x12\x43\n\x10IsChannelEnabled\x12\x1a.spectrum_analyzer.Channel\x1a\x13.sdr.datatypes.Bool\x12:\n\x0c\x43hannelCount\x12\x14.sdr.datatypes.Empty\x1a\x14.sdr.datatypes.LUInt\x12L\n\x0eGetChannelInfo\x12\x1a.spectrum_analyzer.Channel\x1a\x1e.spectrum_analyzer.ChannelInfob\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'spectrum_analyzer_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_CHANNELINFO']._serialized_start=63
  _globals['_CHANNELINFO']._serialized_end=188
  _globals['_CHANNEL']._serialized_start=190
  _globals['_CHANNEL']._serialized_end=292
  _globals['_CHANNEL_TYPE']._serialized_start=264
  _globals['_CHANNEL_TYPE']._serialized_end=292
  _globals['_BUFFERDATA']._serialized_start=294
  _globals['_BUFFERDATA']._serialized_end=375
  _globals['_SAMPLINGFREQUENCY']._serialized_start=377
  _globals['_SAMPLINGFREQUENCY']._serialized_end=411
  _globals['_HOLDMODE']._serialized_start=414
  _globals['_HOLDMODE']._serialized_end=547
  _globals['_HOLDMODE_MODE']._serialized_start=508
  _globals['_HOLDMODE_MODE']._serialized_end=547
  _globals['_CHANNELEDHOLDMODE']._serialized_start=549
  _globals['_CHANNELEDHOLDMODE']._serialized_end=661
  _globals['_SPECTRUMANALYZERSERVICE']._serialized_start=664
  _globals['_SPECTRUMANALYZERSERVICE']._serialized_end=1405
# @@protoc_insertion_point(module_scope)
