# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import cirque.packages.grpc.datatypes_pb2 as datatypes__pb2
import cirque.packages.grpc.lmk04208_pb2 as lmk04208__pb2

GRPC_GENERATED_VERSION = '1.73.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in lmk04208_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class LMK04208ServiceStub(object):
    """Sysfs access
    Load completely new set of settings
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InitFromFile = channel.unary_unary(
                '/lmk04208.LMK04208Service/InitFromFile',
                request_serializer=datatypes__pb2.IndexedString.SerializeToString,
                response_deserializer=datatypes__pb2.Empty.FromString,
                _registered_method=True)
        self.InitFromDT = channel.unary_unary(
                '/lmk04208.LMK04208Service/InitFromDT',
                request_serializer=datatypes__pb2.EndpointIndex.SerializeToString,
                response_deserializer=datatypes__pb2.Empty.FromString,
                _registered_method=True)
        self.ReadbackOnRegister = channel.unary_unary(
                '/lmk04208.LMK04208Service/ReadbackOnRegister',
                request_serializer=datatypes__pb2.IndexedUInt.SerializeToString,
                response_deserializer=datatypes__pb2.UInt.FromString,
                _registered_method=True)
        self.Read = channel.unary_unary(
                '/lmk04208.LMK04208Service/Read',
                request_serializer=datatypes__pb2.IndexedUInt.SerializeToString,
                response_deserializer=datatypes__pb2.UInt.FromString,
                _registered_method=True)
        self.Write = channel.unary_unary(
                '/lmk04208.LMK04208Service/Write',
                request_serializer=lmk04208__pb2.WriteCommand.SerializeToString,
                response_deserializer=datatypes__pb2.Empty.FromString,
                _registered_method=True)


class LMK04208ServiceServicer(object):
    """Sysfs access
    Load completely new set of settings
    """

    def InitFromFile(self, request, context):
        """File format: Registers 0..16 and 24..30 (including address bits) as plain text 
        either dec or hex separated by spaces (-> parsable by c++ fstream).
        To convert TICS output to this format remove first value (duplicate
        R0 only used for setting RESET-bit, already taken care of by Plugin).
        Last value R31 can be included but will be ignored since there is no
        point in making an unnecessary readback.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitFromDT(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadbackOnRegister(self, request, context):
        """Manual register access
        TODO: make readback from chip work in kernel-driver, only stored value read back 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Read(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Write(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LMK04208ServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'InitFromFile': grpc.unary_unary_rpc_method_handler(
                    servicer.InitFromFile,
                    request_deserializer=datatypes__pb2.IndexedString.FromString,
                    response_serializer=datatypes__pb2.Empty.SerializeToString,
            ),
            'InitFromDT': grpc.unary_unary_rpc_method_handler(
                    servicer.InitFromDT,
                    request_deserializer=datatypes__pb2.EndpointIndex.FromString,
                    response_serializer=datatypes__pb2.Empty.SerializeToString,
            ),
            'ReadbackOnRegister': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadbackOnRegister,
                    request_deserializer=datatypes__pb2.IndexedUInt.FromString,
                    response_serializer=datatypes__pb2.UInt.SerializeToString,
            ),
            'Read': grpc.unary_unary_rpc_method_handler(
                    servicer.Read,
                    request_deserializer=datatypes__pb2.IndexedUInt.FromString,
                    response_serializer=datatypes__pb2.UInt.SerializeToString,
            ),
            'Write': grpc.unary_unary_rpc_method_handler(
                    servicer.Write,
                    request_deserializer=lmk04208__pb2.WriteCommand.FromString,
                    response_serializer=datatypes__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'lmk04208.LMK04208Service', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('lmk04208.LMK04208Service', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class LMK04208Service(object):
    """Sysfs access
    Load completely new set of settings
    """

    @staticmethod
    def InitFromFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lmk04208.LMK04208Service/InitFromFile',
            datatypes__pb2.IndexedString.SerializeToString,
            datatypes__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def InitFromDT(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lmk04208.LMK04208Service/InitFromDT',
            datatypes__pb2.EndpointIndex.SerializeToString,
            datatypes__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReadbackOnRegister(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lmk04208.LMK04208Service/ReadbackOnRegister',
            datatypes__pb2.IndexedUInt.SerializeToString,
            datatypes__pb2.UInt.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Read(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lmk04208.LMK04208Service/Read',
            datatypes__pb2.IndexedUInt.SerializeToString,
            datatypes__pb2.UInt.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Write(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lmk04208.LMK04208Service/Write',
            lmk04208__pb2.WriteCommand.SerializeToString,
            datatypes__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
