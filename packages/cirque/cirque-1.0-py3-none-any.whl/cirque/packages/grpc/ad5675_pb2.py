# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: ad5675.proto
# Protobuf Python Version: 6.31.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    0,
    '',
    'ad5675.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import cirque.packages.grpc.datatypes_pb2 as datatypes__pb2

from cirque.packages.grpc.datatypes_pb2 import *

DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0c\x61\x64\x35\x36\x37\x35.proto\x12\x06\x61\x64\x35\x36\x37\x35\x1a\x0f\x64\x61tatypes.proto\"K\n\x0bReadChannel\x12+\n\x05index\x18\x01 \x01(\x0b\x32\x1c.sdr.datatypes.EndpointIndex\x12\x0f\n\x07\x63hannel\x18\x02 \x01(\r\"[\n\x0cWriteChannel\x12+\n\x05index\x18\x01 \x01(\x0b\x32\x1c.sdr.datatypes.EndpointIndex\x12\x0f\n\x07\x63hannel\x18\x02 \x01(\r\x12\r\n\x05value\x18\x03 \x01(\r2\x85\x01\n\rAD5675Service\x12:\n\nSetChannel\x12\x14.ad5675.WriteChannel\x1a\x14.sdr.datatypes.Empty\"\x00\x12\x38\n\nGetChannel\x12\x13.ad5675.ReadChannel\x1a\x13.sdr.datatypes.UInt\"\x00P\x00\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'ad5675_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_READCHANNEL']._serialized_start=41
  _globals['_READCHANNEL']._serialized_end=116
  _globals['_WRITECHANNEL']._serialized_start=118
  _globals['_WRITECHANNEL']._serialized_end=209
  _globals['_AD5675SERVICE']._serialized_start=212
  _globals['_AD5675SERVICE']._serialized_end=345
# @@protoc_insertion_point(module_scope)
