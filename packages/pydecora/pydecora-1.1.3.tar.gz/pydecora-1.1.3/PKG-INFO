Metadata-Version: 2.4
Name: pydecora
Version: 1.1.3
Summary: A lightweight and modular Python decorator library
Author-email: Nika Sharmazanashvili <nikasharmaza@gmail.com>
License: MIT License
        
        Copyright (c) 2025 Nika Sharmazanashvili
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the “Software”), to deal
        in the Software without restriction, including without limitation the rights  
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell  
        copies of the Software, and to permit persons to whom the Software is  
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in  
        all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE  
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER  
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN  
        THE SOFTWARE.
        
Project-URL: Homepage, https://github.com/nikasrmz/pydecora
Project-URL: Repository, https://github.com/nikasrmz/pydecora
Keywords: decorators,python,utilities,cache,retry,timeit
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Dynamic: license-file

# pydecora 🧩

[![PyPI version](https://img.shields.io/pypi/v/pydecora)](https://pypi.org/project/pydecora/)

A lightweight and modular Python decorator library that helps you write cleaner and more expressive code.

## 🚀 Features

- 🧠 `@cache`: Simple in-memory caching with optional TTL and size limit  
- 🔁 `@retry`: Automatically retry failed operations with exponential backoff  
- 🛑 `@suppress`: Suppress exceptions and optionally log them  
- ⏱️ `@timeit`: Time execution of functions  
- 🧪 `@validate_args`: Enforce argument types using runtime validation  
- 🧍 `@singleton`: Ensure a class is instantiated only once (classic singleton pattern)

## 📦 Installation

```
pip install pydecora
```
## 🧑‍💻 Usage
```
from pydecora import cache, retry

@cache(ttl=60)
def slow_func(x):
    return x * x

@retry(times=3, delay=1)
def flaky_api_call():
    ...

@singleton
class Config:
    def __init__(self):
        self.value = 42
```

## 📁 Project Structure
```
pydecora/
├── pydecora/
│   ├── init.py
│   └── decorators/
│       ├── cache.py
│       ├── retry.py
│       ├── singleton.py
│       ├── suppress.py
│       ├── timeit.py
│       └── validate_args.py
├── tests/
│   ├── test_cache.py
│   ├── test_retry.py
│   ├── test_singleton.py
│   ├── test_suppress.py
│   ├── test_timeit.py
│   └── test_validate_args.py
├── README.md
├── LICENSE
├── setup.py
└── pyproject.toml
```

## 🧪 Running Tests

```
pytest pydecora/tests
```

## 🤝 Contributing
Pull requests and ideas welcome! Please open an issue or fork and PR.

## 📄 License
MIT — see [LICENSE](LICENSE)
