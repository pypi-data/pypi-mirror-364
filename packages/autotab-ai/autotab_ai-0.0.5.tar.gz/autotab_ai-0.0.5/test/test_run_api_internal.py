# coding: utf-8

"""
    Autotab API v1

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import os
import unittest

from autotab.api.run_api import RunApi
from autotab.api_client import Client
from autotab.configuration import Configuration
from autotab.models.run_skill_request import RunSkillRequest


class TestRunApi(unittest.IsolatedAsyncioTestCase):
    """RunApi unit test stubs"""

    async def asyncSetUp(self) -> None:
        config = Configuration(
            # host = "https://localhost:8000/v1",
            # api_key = os.environ["AUTOTAB_API_KEY"]
            host = "https://api.staging.autotab.com/v1",
            api_key = "sk-VdNCzQ3dMXR9Ck4dsxKZ3164Sz7fQmHBcpYKSjSU9V7Ejy1V-myqq"
        )
        config.verify_ssl = False
        self.api = RunApi(Client(config))

    async def asyncTearDown(self) -> None:
        pass

    async def test_cancel(self) -> None:
        """Test case for cancel

        Cancel
        """
        pass

    async def test_start(self) -> None:
        """Test case for start

        Start
        """
        pass

    async def test_retrieve(self) -> None:
        """Test case for retrieve

        Retrieve
        """
        
        # session = await self.api.retrieve(
        #     id="run_344ed4ce-6c14-4b13-96b5-3bbb2000c2e5"
        # )
        # print(f"session:\n{session.model_dump_json(indent=2)}")
        pass

    async def test_list(self) -> None:
        """Test case for list

        List
        """
        pass
        # sessions = await self.api.list(skill="skill_b708c935-b764-434d-95bb-bffd44fbca61")
        # print("sessions:")
        # for session in sessions:
        #     print(f"{session.model_dump_json(indent=2)}")
        
    async def test_core(self) -> None:
        # session = await self.api.start(
        #     run_skill_request=RunSkillRequest(
        #         skill_id="skill_976d74f3-bfab-43c1-9a38-cde8769034dd",
        #     )
        # )
        # print(f"session:\n{session.model_dump_json(indent=2)}")
        
        # # Test with inputs
        # session = await self.api.start(
        #     run_skill_request=RunSkillRequest(
        #         skill_id="skill_a6738f77-afc2-454e-a6d6-207caa8d145f",
        #         inputs={
        #             "query_string": "openai news"
        #         }
        #     )
        # )
        session = await self.api.start(
            run_skill_request=RunSkillRequest(
                skill_id="skill_923d8f38-be0d-4637-9fbe-46ec9cb48312",
                inputs={
                    "query_param": "house cat"
                }
            )
        )
        print(f"new session:\n{session.model_dump_json(indent=2)}")
        pass


if __name__ == '__main__':
    unittest.main()
