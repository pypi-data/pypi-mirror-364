name: CI

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]  # Also trigger on version tags
  pull_request:
    branches: [ main, master ]

jobs:
  lint:
    name: Lint with Ruff
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        
      - name: Install dependencies and run lint
        run: |
          make install
          make lint-check

  type-check:
    name: Type Check with Ty
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        
      - name: Install dependencies and run type check
        run: |
          make install
          make type-check
          
  test:
    name: Test with Pytest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        
      - name: Install dependencies and run tests
        run: |
          make install
          make test

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: [lint, type-check, test]
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      id-token: write  # Required for trusted publishing
      contents: read
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        
      - name: Install dependencies
        run: |
          make install
      
      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Publishing version: $VERSION"
      
      - name: Bump version in pyproject.toml
        run: |
          uv run python scripts/bump_version.py ${{ steps.version.outputs.version }}
      
      - name: Build package
        run: |
          uv build
      
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
