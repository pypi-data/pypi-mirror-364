[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "thinkcache"
version = "0.1.1"  
description = "A high-performance semantic caching system with FAISS vector similarity search for LLMs"
readme = {file = "README.md", content-type = "text/markdown"}
authors = [
    {name = "Chris Olande", email = "olandechris@gmail.com"},
]
license = {text = "MIT"}
requires-python = ">=3.8"
keywords = ["semantic", "cache", "faiss", "vector", "similarity", "llm", "ai", "ml"]

classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Database",
    "Topic :: Internet :: WWW/HTTP :: Indexing/Search"
]

dependencies = [
    "langchain>=0.1.0",
    "langchain-community>=0.0.10",
    "langchain-huggingface>=0.0.1",
    "faiss-cpu>=1.7.0",
    "numpy>=1.20.0",
    "sentence-transformers>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "pre-commit>=2.20.0",
]
quantization = [
    "faiss-gpu>=1.7.0",
]

[project.urls]
homepage = "https://github.com/Chrisolande/thinkcache"
documentation = "https://github.com/Chrisolande/thinkcache#readme"
bug_reports = "https://github.com/Chrisolande/thinkcache/issues"
source = "https://github.com/Chrisolande/thinkcache"

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
"*" = ["LICENSE"]

[tool.setuptools.packages.find]
where = ["."]
include = ["thinkcache*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"