name: Release
run-name: Release sqlalchemy-cloudflare-d1 by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (e.g., 0.1.1)"
        required: true
        type: string

env:
  PYTHON_VERSION: "3.11"

jobs:
  build:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    outputs:
      pkg-name: ${{ steps.check-version.outputs.pkg-name }}
      version: ${{ steps.check-version.outputs.version }}

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Install dependencies
        run: uv sync --dev

      - name: Run lint (includes format check)
        run: |
          uv run ruff check .
          uv run ruff format . --diff
          uv run codespell

      - name: Run tests
        run: uv run pytest --disable-socket --allow-unix-socket tests/

      - name: Build project for distribution
        run: uv build

      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Check Version
        id: check-version
        shell: bash
        run: |
          set -eu
          pkg_name=$(grep '^name = ' pyproject.toml | sed 's/name = "\(.*\)"/\1/')
          version=$(grep '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
          echo "pkg-name=$pkg_name" >> $GITHUB_OUTPUT
          echo "version=$version" >> $GITHUB_OUTPUT

  publish:
    needs:
      - build
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc
        with:
          packages-dir: dist/
          verbose: true
          print-hash: true

  mark-release:
    needs:
      - build
      - publish
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Create Release
        uses: ncipollo/release-action@440c8c1cb0ed28b9f43e4d1d670870f059653174
        id: create-release
        with:
          artifacts: "dist/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          generateReleaseNotes: true
          tag: v${{ needs.build.outputs.version }}
          commit: main

      - name: Add github release url to summary
        env:
          RELEASE_URL: ${{ steps.create-release.outputs.html_url }}
        run: |
          echo "GitHub Release: ${RELEASE_URL}" >> $GITHUB_STEP_SUMMARY
