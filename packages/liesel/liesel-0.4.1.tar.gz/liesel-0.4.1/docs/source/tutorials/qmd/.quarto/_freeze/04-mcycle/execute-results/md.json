{
  "hash": "aad4304176c2693fe1c5547882c6e392",
  "result": {
    "markdown": "---\nengine: knitr\n---\n\n\n\n\n# Comparing samplers\n\nIn this tutorial, we are comparing two different sampling schemes on the `mcycle` dataset with a Gaussian location-scale regression model and two splines for the mean and the standard deviation. The `mcycle` dataset is a \"data frame giving a series of measurements of head acceleration in a simulated motorcycle accident, used to test crash helmets\" (from the help page). It contains the following two variables:\n\n- `times`: in milliseconds after impact\n- `accel`: in g\n\nWe start off in R by loading the dataset and setting up the model with the `rliesel::liesel()` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(MASS)\nlibrary(rliesel)\n\ndata(mcycle)\nwith(mcycle, plot(times, accel))\n```\n\n::: {.cell-output-display}\n![](04-mcycle_files/figure-commonmark/model-1.png)\n:::\n\n```{.r .cell-code}\nmodel <- liesel(\n  response = mcycle$accel,\n  distribution = \"Normal\",\n  predictors = list(\n    loc = predictor(~ s(times)),\n    scale = predictor(~ s(times), inverse_link = \"Exp\")\n  ),\n  data = mcycle\n)\n```\n:::\n\n\n## Metropolis-in-Gibbs\n\nFirst, we try a Metropolis-in-Gibbs sampling scheme with IWLS kernels for the regression coefficients ($\\boldsymbol{\\beta}$) and Gibbs kernels for the smoothing parameters ($\\tau^2$) of the splines.\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport liesel.model as lsl\n\nmodel = r.model\n\nbuilder = lsl.dist_reg_mcmc(model, seed=42, num_chains=4)\nbuilder.set_duration(warmup_duration=5000, posterior_duration=1000)\nbuilder.show_progress = False\n\nengine = builder.build()\nengine.sample_all_epochs()\n```\n:::\n\n\nClearly, the performance of the sampler could be better, especially for the intercept of the mean. The corresponding chain exhibits a very strong autocorrelation.\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport liesel.goose as gs\n\nresults = engine.get_results()\ngs.Summary(results)\n```\n\n::: {.cell-output-display}\n<p><strong>Parameter summary:</strong></p>\n<table border=\"0\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>kernel</th>\n      <th>mean</th>\n      <th>sd</th>\n      <th>q_0.05</th>\n      <th>q_0.5</th>\n      <th>q_0.95</th>\n      <th>sample_size</th>\n      <th>ess_bulk</th>\n      <th>ess_tail</th>\n      <th>rhat</th>\n    </tr>\n    <tr>\n      <th>parameter</th>\n      <th>index</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"9\" valign=\"top\">loc_np0_beta</th>\n      <th>(0,)</th>\n      <td>kernel_04</td>\n      <td>-89.783</td>\n      <td>243.714</td>\n      <td>-483.961</td>\n      <td>-93.170</td>\n      <td>317.212</td>\n      <td>4000</td>\n      <td>35.650</td>\n      <td>419.354</td>\n      <td>1.079</td>\n    </tr>\n    <tr>\n      <th>(1,)</th>\n      <td>kernel_04</td>\n      <td>-1450.583</td>\n      <td>251.260</td>\n      <td>-1876.271</td>\n      <td>-1440.334</td>\n      <td>-1060.724</td>\n      <td>4000</td>\n      <td>292.621</td>\n      <td>649.406</td>\n      <td>1.018</td>\n    </tr>\n    <tr>\n      <th>(2,)</th>\n      <td>kernel_04</td>\n      <td>-685.581</td>\n      <td>170.859</td>\n      <td>-963.474</td>\n      <td>-682.322</td>\n      <td>-406.089</td>\n      <td>4000</td>\n      <td>232.319</td>\n      <td>413.269</td>\n      <td>1.017</td>\n    </tr>\n    <tr>\n      <th>(3,)</th>\n      <td>kernel_04</td>\n      <td>-566.567</td>\n      <td>113.858</td>\n      <td>-748.643</td>\n      <td>-569.450</td>\n      <td>-375.760</td>\n      <td>4000</td>\n      <td>200.408</td>\n      <td>587.108</td>\n      <td>1.019</td>\n    </tr>\n    <tr>\n      <th>(4,)</th>\n      <td>kernel_04</td>\n      <td>1117.895</td>\n      <td>94.023</td>\n      <td>963.678</td>\n      <td>1115.170</td>\n      <td>1269.938</td>\n      <td>4000</td>\n      <td>294.993</td>\n      <td>818.162</td>\n      <td>1.014</td>\n    </tr>\n    <tr>\n      <th>(5,)</th>\n      <td>kernel_04</td>\n      <td>-64.185</td>\n      <td>34.569</td>\n      <td>-121.355</td>\n      <td>-62.629</td>\n      <td>-8.844</td>\n      <td>4000</td>\n      <td>95.479</td>\n      <td>288.695</td>\n      <td>1.043</td>\n    </tr>\n    <tr>\n      <th>(6,)</th>\n      <td>kernel_04</td>\n      <td>-211.062</td>\n      <td>21.122</td>\n      <td>-246.101</td>\n      <td>-211.329</td>\n      <td>-176.134</td>\n      <td>4000</td>\n      <td>108.539</td>\n      <td>444.519</td>\n      <td>1.039</td>\n    </tr>\n    <tr>\n      <th>(7,)</th>\n      <td>kernel_04</td>\n      <td>116.051</td>\n      <td>69.206</td>\n      <td>17.010</td>\n      <td>108.444</td>\n      <td>240.738</td>\n      <td>4000</td>\n      <td>164.199</td>\n      <td>356.351</td>\n      <td>1.010</td>\n    </tr>\n    <tr>\n      <th>(8,)</th>\n      <td>kernel_04</td>\n      <td>30.198</td>\n      <td>17.908</td>\n      <td>4.629</td>\n      <td>27.936</td>\n      <td>62.939</td>\n      <td>4000</td>\n      <td>143.481</td>\n      <td>301.179</td>\n      <td>1.017</td>\n    </tr>\n    <tr>\n      <th>loc_np0_tau2</th>\n      <th>()</th>\n      <td>kernel_03</td>\n      <td>736267.500</td>\n      <td>576384.875</td>\n      <td>254046.856</td>\n      <td>586045.219</td>\n      <td>1712081.537</td>\n      <td>4000</td>\n      <td>1716.899</td>\n      <td>2508.099</td>\n      <td>1.001</td>\n    </tr>\n    <tr>\n      <th>loc_p0_beta</th>\n      <th>(0,)</th>\n      <td>kernel_05</td>\n      <td>-24.772</td>\n      <td>2.514</td>\n      <td>-28.690</td>\n      <td>-24.817</td>\n      <td>-20.496</td>\n      <td>4000</td>\n      <td>9.321</td>\n      <td>19.502</td>\n      <td>1.380</td>\n    </tr>\n    <tr>\n      <th rowspan=\"9\" valign=\"top\">scale_np0_beta</th>\n      <th>(0,)</th>\n      <td>kernel_01</td>\n      <td>6.953</td>\n      <td>9.373</td>\n      <td>-5.137</td>\n      <td>5.156</td>\n      <td>24.396</td>\n      <td>4000</td>\n      <td>19.041</td>\n      <td>128.454</td>\n      <td>1.145</td>\n    </tr>\n    <tr>\n      <th>(1,)</th>\n      <td>kernel_01</td>\n      <td>-2.119</td>\n      <td>6.417</td>\n      <td>-13.762</td>\n      <td>-1.500</td>\n      <td>7.521</td>\n      <td>4000</td>\n      <td>24.990</td>\n      <td>63.433</td>\n      <td>1.122</td>\n    </tr>\n    <tr>\n      <th>(2,)</th>\n      <td>kernel_01</td>\n      <td>-16.403</td>\n      <td>9.940</td>\n      <td>-33.269</td>\n      <td>-16.295</td>\n      <td>-1.356</td>\n      <td>4000</td>\n      <td>15.048</td>\n      <td>38.506</td>\n      <td>1.220</td>\n    </tr>\n    <tr>\n      <th>(3,)</th>\n      <td>kernel_01</td>\n      <td>9.526</td>\n      <td>4.653</td>\n      <td>2.741</td>\n      <td>9.110</td>\n      <td>17.955</td>\n      <td>4000</td>\n      <td>17.114</td>\n      <td>127.404</td>\n      <td>1.192</td>\n    </tr>\n    <tr>\n      <th>(4,)</th>\n      <td>kernel_01</td>\n      <td>-2.031</td>\n      <td>3.875</td>\n      <td>-8.943</td>\n      <td>-1.594</td>\n      <td>3.610</td>\n      <td>4000</td>\n      <td>34.877</td>\n      <td>97.160</td>\n      <td>1.084</td>\n    </tr>\n    <tr>\n      <th>(5,)</th>\n      <td>kernel_01</td>\n      <td>3.733</td>\n      <td>1.977</td>\n      <td>0.723</td>\n      <td>3.572</td>\n      <td>6.974</td>\n      <td>4000</td>\n      <td>22.106</td>\n      <td>43.125</td>\n      <td>1.144</td>\n    </tr>\n    <tr>\n      <th>(6,)</th>\n      <td>kernel_01</td>\n      <td>-0.032</td>\n      <td>2.937</td>\n      <td>-5.476</td>\n      <td>0.459</td>\n      <td>4.034</td>\n      <td>4000</td>\n      <td>13.837</td>\n      <td>41.847</td>\n      <td>1.203</td>\n    </tr>\n    <tr>\n      <th>(7,)</th>\n      <td>kernel_01</td>\n      <td>-0.828</td>\n      <td>3.341</td>\n      <td>-5.853</td>\n      <td>-1.107</td>\n      <td>4.954</td>\n      <td>4000</td>\n      <td>56.561</td>\n      <td>173.938</td>\n      <td>1.065</td>\n    </tr>\n    <tr>\n      <th>(8,)</th>\n      <td>kernel_01</td>\n      <td>-0.929</td>\n      <td>1.772</td>\n      <td>-4.211</td>\n      <td>-0.641</td>\n      <td>1.491</td>\n      <td>4000</td>\n      <td>16.101</td>\n      <td>87.743</td>\n      <td>1.178</td>\n    </tr>\n    <tr>\n      <th>scale_np0_tau2</th>\n      <th>()</th>\n      <td>kernel_00</td>\n      <td>121.644</td>\n      <td>171.814</td>\n      <td>7.737</td>\n      <td>72.676</td>\n      <td>393.397</td>\n      <td>4000</td>\n      <td>16.500</td>\n      <td>109.850</td>\n      <td>1.187</td>\n    </tr>\n    <tr>\n      <th>scale_p0_beta</th>\n      <th>(0,)</th>\n      <td>kernel_02</td>\n      <td>2.773</td>\n      <td>0.069</td>\n      <td>2.661</td>\n      <td>2.773</td>\n      <td>2.888</td>\n      <td>4000</td>\n      <td>258.903</td>\n      <td>639.815</td>\n      <td>1.033</td>\n    </tr>\n  </tbody>\n</table>\n<p><strong>Error summary:</strong></p>\n<table border=\"0\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th>count</th>\n      <th>relative</th>\n    </tr>\n    <tr>\n      <th>kernel</th>\n      <th>error_code</th>\n      <th>error_msg</th>\n      <th>phase</th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">kernel_01</th>\n      <th rowspan=\"2\" valign=\"top\">90</th>\n      <th rowspan=\"2\" valign=\"top\">nan acceptance prob</th>\n      <th>warmup</th>\n      <td>11</td>\n      <td>0.001</td>\n    </tr>\n    <tr>\n      <th>posterior</th>\n      <td>0</td>\n      <td>0.000</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">kernel_04</th>\n      <th rowspan=\"2\" valign=\"top\">90</th>\n      <th rowspan=\"2\" valign=\"top\">nan acceptance prob</th>\n      <th>warmup</th>\n      <td>1</td>\n      <td>0.000</td>\n    </tr>\n    <tr>\n      <th>posterior</th>\n      <td>0</td>\n      <td>0.000</td>\n    </tr>\n  </tbody>\n</table>\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nfig = gs.plot_trace(results, \"loc_p0_beta\")\n```\n\n::: {.cell-output-display}\n![](04-mcycle_files/figure-commonmark/iwls-traces-1.png)\n:::\n\n```{.python .cell-code}\nfig = gs.plot_trace(results, \"loc_np0_tau2\")\n```\n\n::: {.cell-output-display}\n![](04-mcycle_files/figure-commonmark/iwls-traces-2.png)\n:::\n\n```{.python .cell-code}\nfig = gs.plot_trace(results, \"loc_np0_beta\")\n```\n\n::: {.cell-output-display}\n![](04-mcycle_files/figure-commonmark/iwls-traces-3.png)\n:::\n\n```{.python .cell-code}\nfig = gs.plot_trace(results, \"scale_p0_beta\")\n```\n\n::: {.cell-output-display}\n![](04-mcycle_files/figure-commonmark/iwls-traces-4.png)\n:::\n\n```{.python .cell-code}\nfig = gs.plot_trace(results, \"scale_np0_tau2\")\n```\n\n::: {.cell-output-display}\n![](04-mcycle_files/figure-commonmark/iwls-traces-5.png)\n:::\n\n```{.python .cell-code}\nfig = gs.plot_trace(results, \"scale_np0_beta\")\n```\n\n::: {.cell-output-display}\n![](04-mcycle_files/figure-commonmark/iwls-traces-6.png)\n:::\n:::\n\n\nTo confirm that the chains have converged to reasonable values, here is a plot of the estimated mean function:\n\n\n::: {.cell}\n\n```{.python .cell-code}\nsummary = gs.Summary(results).to_dataframe().reset_index()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:MASS':\n\n    select\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(reticulate)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'reticulate' was built under R version 4.4.1\n```\n:::\n\n```{.r .cell-code}\nsummary <- py$summary\n\nbeta <- summary %>%\n  filter(variable == \"loc_np0_beta\") %>%\n  group_by(var_index) %>%\n  summarize(mean = mean(mean)) %>%\n  ungroup()\n\nbeta <- beta$mean\nX <- py_to_r(model$vars[\"loc_np0_X\"]$value)\nf <- X %*% beta\n\nbeta0 <- summary %>%\n  filter(variable == \"loc_p0_beta\") %>%\n  group_by(var_index) %>%\n  summarize(mean = mean(mean)) %>%\n  ungroup()\n\nbeta0 <- beta0$mean\n\nggplot(data.frame(times = mcycle$times, mean = beta0 + f)) +\n  geom_line(aes(times, mean), color = palette()[2], size = 1) +\n  geom_point(aes(times, accel), data = mcycle) +\n  ggtitle(\"Estimated mean function\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n:::\n\n::: {.cell-output-display}\n![](04-mcycle_files/figure-commonmark/iwls-spline-13.png)\n:::\n:::\n\n\n## NUTS sampler\n\nAs an alternative, we try using NUTS kernels for all parameters.\nTo do so, we first need to log-transform the smoothing parameters.\nThis is the model graph before the transformation:\n\n\n::: {.cell}\n\n```{.python .cell-code}\nlsl.plot_vars(model)\n```\n\n::: {.cell-output-display}\n![](04-mcycle_files/figure-commonmark/untransformed-graph-1.png)\n:::\n:::\n\n\nTo transform the smoothing parameters with the method {meth}`.Var.transform`,\nwe need to retrieve the nodes and vars form the model. This is necessary, because\nwhile they are part of a model, the inputs and outputs of nodes and vars cannot\nbe changed.\nWe retrieve the nodes and vars using {meth}`.Model.pop_nodes_and_vars`,\nwhich renders the model empty.\n\nAfter transformation, there are two additional nodes in the new model graph.\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport tensorflow_probability.substrates.jax.bijectors as tfb\n\nnodes, _vars = model.pop_nodes_and_vars()\n\n_vars[\"loc_np0_tau2\"].transform(tfb.Exp())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nVar(name=\"loc_np0_tau2_transformed\")\n```\n:::\n\n```{.python .cell-code}\n_vars[\"scale_np0_tau2\"].transform(tfb.Exp())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nVar(name=\"scale_np0_tau2_transformed\")\n```\n:::\n\n```{.python .cell-code}\ngb = lsl.GraphBuilder().add(_vars[\"response\"])\n\nmodel = gb.build_model()\nlsl.plot_vars(model)\n```\n\n::: {.cell-output-display}\n![](04-mcycle_files/figure-commonmark/transformed-graph-3.png)\n:::\n:::\n\n\nNow we can set up the NUTS sampler. In complex models like this one it can be\nvery beneficial to use individual NUTS samplers for blocks of parameters. This\nis pretty much the same strategy that we apply to the IWLS sampler, too.\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nbuilder = gs.EngineBuilder(seed=42, num_chains=4)\n\nbuilder.set_model(gs.LieselInterface(model))\n\n# add NUTS kernels\nparameters = [name for name, var in model.vars.items() if var.parameter]\n\nfor parameter in parameters:\n  builder.add_kernel(gs.NUTSKernel([parameter]))\n\n\nbuilder.set_initial_values(model.state)\n\nbuilder.set_epochs(\n  gs.stan_epochs(warmup_duration=5000, posterior_duration=1000, init_duration=750, term_duration=500)\n)\n\nbuilder.show_progress = False\n\nengine = builder.build()\nengine.sample_all_epochs()\n```\n:::\n\n\nThe NUTS sampler overall seems to do a good job - and even yields higher\neffective sample sizes than the IWLS sampler, especially for the spline\ncoefficients of the scale model.\n\n\n\n```{.python .cell-code}\nresults = engine.get_results()\ngs.Summary(results)\n```\n\n::: {.cell-output-display}\n<p><strong>Parameter summary:</strong></p>\n<table border=\"0\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>kernel</th>\n      <th>mean</th>\n      <th>sd</th>\n      <th>q_0.05</th>\n      <th>q_0.5</th>\n      <th>q_0.95</th>\n      <th>sample_size</th>\n      <th>ess_bulk</th>\n      <th>ess_tail</th>\n      <th>rhat</th>\n    </tr>\n    <tr>\n      <th>parameter</th>\n      <th>index</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"9\" valign=\"top\">loc_np0_beta</th>\n      <th>(0,)</th>\n      <td>kernel_03</td>\n      <td>-88.104</td>\n      <td>252.529</td>\n      <td>-498.737</td>\n      <td>-94.419</td>\n      <td>337.766</td>\n      <td>4000</td>\n      <td>474.180</td>\n      <td>1377.730</td>\n      <td>1.008</td>\n    </tr>\n    <tr>\n      <th>(1,)</th>\n      <td>kernel_03</td>\n      <td>-1453.895</td>\n      <td>245.675</td>\n      <td>-1843.600</td>\n      <td>-1453.718</td>\n      <td>-1053.058</td>\n      <td>4000</td>\n      <td>765.684</td>\n      <td>1813.545</td>\n      <td>1.006</td>\n    </tr>\n    <tr>\n      <th>(2,)</th>\n      <td>kernel_03</td>\n      <td>-681.106</td>\n      <td>182.549</td>\n      <td>-985.511</td>\n      <td>-682.477</td>\n      <td>-377.593</td>\n      <td>4000</td>\n      <td>1104.403</td>\n      <td>1789.338</td>\n      <td>1.001</td>\n    </tr>\n    <tr>\n      <th>(3,)</th>\n      <td>kernel_03</td>\n      <td>-554.689</td>\n      <td>113.558</td>\n      <td>-735.240</td>\n      <td>-553.886</td>\n      <td>-365.407</td>\n      <td>4000</td>\n      <td>1009.067</td>\n      <td>1669.084</td>\n      <td>1.005</td>\n    </tr>\n    <tr>\n      <th>(4,)</th>\n      <td>kernel_03</td>\n      <td>1126.253</td>\n      <td>98.042</td>\n      <td>968.061</td>\n      <td>1126.222</td>\n      <td>1288.899</td>\n      <td>4000</td>\n      <td>1400.525</td>\n      <td>1695.291</td>\n      <td>1.003</td>\n    </tr>\n    <tr>\n      <th>(5,)</th>\n      <td>kernel_03</td>\n      <td>-65.458</td>\n      <td>34.845</td>\n      <td>-121.377</td>\n      <td>-65.759</td>\n      <td>-6.803</td>\n      <td>4000</td>\n      <td>365.669</td>\n      <td>798.602</td>\n      <td>1.010</td>\n    </tr>\n    <tr>\n      <th>(6,)</th>\n      <td>kernel_03</td>\n      <td>-210.146</td>\n      <td>23.005</td>\n      <td>-245.842</td>\n      <td>-210.666</td>\n      <td>-172.913</td>\n      <td>4000</td>\n      <td>1112.555</td>\n      <td>1175.961</td>\n      <td>1.003</td>\n    </tr>\n    <tr>\n      <th>(7,)</th>\n      <td>kernel_03</td>\n      <td>122.930</td>\n      <td>80.350</td>\n      <td>12.235</td>\n      <td>113.462</td>\n      <td>269.568</td>\n      <td>4000</td>\n      <td>602.146</td>\n      <td>586.165</td>\n      <td>1.005</td>\n    </tr>\n    <tr>\n      <th>(8,)</th>\n      <td>kernel_03</td>\n      <td>31.984</td>\n      <td>21.059</td>\n      <td>3.020</td>\n      <td>29.346</td>\n      <td>70.037</td>\n      <td>4000</td>\n      <td>556.233</td>\n      <td>544.773</td>\n      <td>1.005</td>\n    </tr>\n    <tr>\n      <th>loc_np0_tau2_transformed</th>\n      <th>()</th>\n      <td>kernel_04</td>\n      <td>13.329</td>\n      <td>0.571</td>\n      <td>12.460</td>\n      <td>13.294</td>\n      <td>14.329</td>\n      <td>4000</td>\n      <td>1090.885</td>\n      <td>1274.243</td>\n      <td>1.003</td>\n    </tr>\n    <tr>\n      <th>loc_p0_beta</th>\n      <th>(0,)</th>\n      <td>kernel_05</td>\n      <td>-24.860</td>\n      <td>1.858</td>\n      <td>-27.923</td>\n      <td>-24.778</td>\n      <td>-21.861</td>\n      <td>4000</td>\n      <td>54.740</td>\n      <td>105.458</td>\n      <td>1.069</td>\n    </tr>\n    <tr>\n      <th rowspan=\"9\" valign=\"top\">scale_np0_beta</th>\n      <th>(0,)</th>\n      <td>kernel_00</td>\n      <td>6.745</td>\n      <td>9.369</td>\n      <td>-6.052</td>\n      <td>5.247</td>\n      <td>24.883</td>\n      <td>4000</td>\n      <td>474.570</td>\n      <td>946.737</td>\n      <td>1.003</td>\n    </tr>\n    <tr>\n      <th>(1,)</th>\n      <td>kernel_00</td>\n      <td>-1.733</td>\n      <td>6.367</td>\n      <td>-13.032</td>\n      <td>-1.304</td>\n      <td>8.003</td>\n      <td>4000</td>\n      <td>746.909</td>\n      <td>894.980</td>\n      <td>1.005</td>\n    </tr>\n    <tr>\n      <th>(2,)</th>\n      <td>kernel_00</td>\n      <td>-15.173</td>\n      <td>8.991</td>\n      <td>-31.192</td>\n      <td>-14.309</td>\n      <td>-2.102</td>\n      <td>4000</td>\n      <td>305.664</td>\n      <td>1123.548</td>\n      <td>1.008</td>\n    </tr>\n    <tr>\n      <th>(3,)</th>\n      <td>kernel_00</td>\n      <td>10.141</td>\n      <td>5.134</td>\n      <td>2.598</td>\n      <td>9.723</td>\n      <td>19.043</td>\n      <td>4000</td>\n      <td>303.817</td>\n      <td>718.883</td>\n      <td>1.009</td>\n    </tr>\n    <tr>\n      <th>(4,)</th>\n      <td>kernel_00</td>\n      <td>-1.745</td>\n      <td>4.021</td>\n      <td>-8.910</td>\n      <td>-1.490</td>\n      <td>4.313</td>\n      <td>4000</td>\n      <td>523.670</td>\n      <td>1183.290</td>\n      <td>1.003</td>\n    </tr>\n    <tr>\n      <th>(5,)</th>\n      <td>kernel_00</td>\n      <td>4.106</td>\n      <td>2.021</td>\n      <td>1.005</td>\n      <td>4.023</td>\n      <td>7.558</td>\n      <td>4000</td>\n      <td>385.347</td>\n      <td>639.357</td>\n      <td>1.009</td>\n    </tr>\n    <tr>\n      <th>(6,)</th>\n      <td>kernel_00</td>\n      <td>0.222</td>\n      <td>2.756</td>\n      <td>-4.833</td>\n      <td>0.566</td>\n      <td>4.138</td>\n      <td>4000</td>\n      <td>302.514</td>\n      <td>943.799</td>\n      <td>1.005</td>\n    </tr>\n    <tr>\n      <th>(7,)</th>\n      <td>kernel_00</td>\n      <td>0.062</td>\n      <td>4.119</td>\n      <td>-6.222</td>\n      <td>-0.243</td>\n      <td>7.083</td>\n      <td>4000</td>\n      <td>493.763</td>\n      <td>595.323</td>\n      <td>1.006</td>\n    </tr>\n    <tr>\n      <th>(8,)</th>\n      <td>kernel_00</td>\n      <td>-0.678</td>\n      <td>1.709</td>\n      <td>-3.859</td>\n      <td>-0.432</td>\n      <td>1.655</td>\n      <td>4000</td>\n      <td>345.563</td>\n      <td>728.305</td>\n      <td>1.004</td>\n    </tr>\n    <tr>\n      <th>scale_np0_tau2_transformed</th>\n      <th>()</th>\n      <td>kernel_01</td>\n      <td>4.160</td>\n      <td>1.090</td>\n      <td>2.293</td>\n      <td>4.222</td>\n      <td>5.830</td>\n      <td>4000</td>\n      <td>226.354</td>\n      <td>481.191</td>\n      <td>1.012</td>\n    </tr>\n    <tr>\n      <th>scale_p0_beta</th>\n      <th>(0,)</th>\n      <td>kernel_02</td>\n      <td>2.772</td>\n      <td>0.068</td>\n      <td>2.664</td>\n      <td>2.770</td>\n      <td>2.886</td>\n      <td>4000</td>\n      <td>806.194</td>\n      <td>2050.150</td>\n      <td>1.001</td>\n    </tr>\n  </tbody>\n</table>\n<p><strong>Error summary:</strong></p>\n<table border=\"0\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th>count</th>\n      <th>relative</th>\n    </tr>\n    <tr>\n      <th>kernel</th>\n      <th>error_code</th>\n      <th>error_msg</th>\n      <th>phase</th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"4\" valign=\"top\">kernel_00</th>\n      <th rowspan=\"2\" valign=\"top\">1</th>\n      <th rowspan=\"2\" valign=\"top\">divergent transition</th>\n      <th>warmup</th>\n      <td>1764</td>\n      <td>0.088</td>\n    </tr>\n    <tr>\n      <th>posterior</th>\n      <td>1</td>\n      <td>0.000</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">2</th>\n      <th rowspan=\"2\" valign=\"top\">maximum tree depth</th>\n      <th>warmup</th>\n      <td>75</td>\n      <td>0.004</td>\n    </tr>\n    <tr>\n      <th>posterior</th>\n      <td>0</td>\n      <td>0.000</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">kernel_01</th>\n      <th rowspan=\"2\" valign=\"top\">1</th>\n      <th rowspan=\"2\" valign=\"top\">divergent transition</th>\n      <th>warmup</th>\n      <td>107</td>\n      <td>0.005</td>\n    </tr>\n    <tr>\n      <th>posterior</th>\n      <td>0</td>\n      <td>0.000</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">kernel_02</th>\n      <th rowspan=\"2\" valign=\"top\">1</th>\n      <th rowspan=\"2\" valign=\"top\">divergent transition</th>\n      <th>warmup</th>\n      <td>63</td>\n      <td>0.003</td>\n    </tr>\n    <tr>\n      <th>posterior</th>\n      <td>0</td>\n      <td>0.000</td>\n    </tr>\n    <tr>\n      <th rowspan=\"4\" valign=\"top\">kernel_03</th>\n      <th rowspan=\"2\" valign=\"top\">1</th>\n      <th rowspan=\"2\" valign=\"top\">divergent transition</th>\n      <th>warmup</th>\n      <td>1150</td>\n      <td>0.057</td>\n    </tr>\n    <tr>\n      <th>posterior</th>\n      <td>66</td>\n      <td>0.016</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">2</th>\n      <th rowspan=\"2\" valign=\"top\">maximum tree depth</th>\n      <th>warmup</th>\n      <td>3441</td>\n      <td>0.172</td>\n    </tr>\n    <tr>\n      <th>posterior</th>\n      <td>119</td>\n      <td>0.030</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">kernel_04</th>\n      <th rowspan=\"2\" valign=\"top\">1</th>\n      <th rowspan=\"2\" valign=\"top\">divergent transition</th>\n      <th>warmup</th>\n      <td>117</td>\n      <td>0.006</td>\n    </tr>\n    <tr>\n      <th>posterior</th>\n      <td>0</td>\n      <td>0.000</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">kernel_05</th>\n      <th rowspan=\"2\" valign=\"top\">1</th>\n      <th rowspan=\"2\" valign=\"top\">divergent transition</th>\n      <th>warmup</th>\n      <td>145</td>\n      <td>0.007</td>\n    </tr>\n    <tr>\n      <th>posterior</th>\n      <td>1</td>\n      <td>0.000</td>\n    </tr>\n  </tbody>\n</table>\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nfig = gs.plot_trace(results, \"loc_p0_beta\")\n```\n\n::: {.cell-output-display}\n![](04-mcycle_files/figure-commonmark/nuts-traces-5.png)\n:::\n\n```{.python .cell-code}\nfig = gs.plot_trace(results, \"loc_np0_tau2_transformed\")\n```\n\n::: {.cell-output-display}\n![](04-mcycle_files/figure-commonmark/nuts-traces-6.png)\n:::\n\n```{.python .cell-code}\nfig = gs.plot_trace(results, \"loc_np0_beta\")\n```\n\n::: {.cell-output-display}\n![](04-mcycle_files/figure-commonmark/nuts-traces-7.png)\n:::\n\n```{.python .cell-code}\nfig = gs.plot_trace(results, \"scale_p0_beta\")\n```\n\n::: {.cell-output-display}\n![](04-mcycle_files/figure-commonmark/nuts-traces-8.png)\n:::\n\n```{.python .cell-code}\nfig = gs.plot_trace(results, \"scale_np0_tau2_transformed\")\n```\n\n::: {.cell-output-display}\n![](04-mcycle_files/figure-commonmark/nuts-traces-9.png)\n:::\n\n```{.python .cell-code}\nfig = gs.plot_trace(results, \"scale_np0_beta\")\n```\n\n::: {.cell-output-display}\n![](04-mcycle_files/figure-commonmark/nuts-traces-10.png)\n:::\n:::\n\n\nAgain, here is a plot of the estimated mean function:\n\n\n::: {.cell}\n\n```{.python .cell-code}\nsummary = gs.Summary(results).to_dataframe().reset_index()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(reticulate)\n\nsummary <- py$summary\nmodel <- py$model\n\nbeta <- summary %>%\n  filter(variable == \"loc_np0_beta\") %>%\n  group_by(var_index) %>%\n  summarize(mean = mean(mean)) %>%\n  ungroup()\n\nbeta <- beta$mean\nX <- model$vars[\"loc_np0_X\"]$value\nf <- X %*% beta\n\nbeta0 <- summary %>%\n  filter(variable == \"loc_p0_beta\") %>%\n  group_by(var_index) %>%\n  summarize(mean = mean(mean)) %>%\n  ungroup()\n\nbeta0 <- beta0$mean\n\nggplot(data.frame(times = mcycle$times, mean = beta0 + f)) +\n  geom_line(aes(times, mean), color = palette()[2], size = 1) +\n  geom_point(aes(times, accel), data = mcycle) +\n  ggtitle(\"Estimated mean function\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](04-mcycle_files/figure-commonmark/nuts-spline-17.png)\n:::\n:::\n",
    "supporting": [
      "04-mcycle_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}