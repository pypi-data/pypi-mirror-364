[project]
name = "modelscope-mcp-server"
dynamic = ["version"]
description = "A Model Context Protocol (MCP) server that integrates with ModelScope's ecosystem."
readme = "README.md"
authors = [
    { name = "ModelScope Team", email = "contact@modelscope.cn" }
]
license = { file = "LICENSE" }
requires-python = ">=3.10"
dependencies = [
    "fastmcp>=2.10.5",
    "requests>=2.32.4",
    "pydantic-settings>=2.10.1",
]
keywords = [
    "modelscope",
    "mcp",
    "model-context-protocol",
    "llm",
    "ai",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Programming Language :: Python :: 3",
]

[project.urls]
"Homepage" = "https://github.com/modelscope/modelscope-mcp-server"
"Bug Tracker" = "https://github.com/modelscope/modelscope-mcp-server/issues"

[project.scripts]
modelscope-mcp-server = "modelscope_mcp_server:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "src/modelscope_mcp_server/_version.py"

[tool.hatch.build.targets.wheel]
packages = ["src/modelscope_mcp_server"]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "pyright>=1.1.403",
    "ruff>=0.12.3",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
addopts = [
    "--cov=src/modelscope_mcp_server",
    "--cov-report=term-missing",
]
env = [
    "MODELSCOPE_LOG_LEVEL=INFO"
]


[tool.pyright]
include = ["src", "tests"]
exclude = ["**/__pycache__"]
pythonVersion = "3.10"
typeCheckingMode = "basic"
reportMissingImports = true
reportMissingTypeStubs = false
useLibraryCodeForTypes = true
venvPath = "."
venv = ".venv"

[tool.ruff]
target-version = "py310"
line-length = 120

[tool.ruff.lint]
extend-select = [
    "E",   # pycodestyle errors (PEP 8 style violations)
    "W",   # pycodestyle warnings (PEP 8 style warnings)
    "F",   # pyflakes (unused imports, variables, etc.)
    "I",   # isort (import sorting and organization)
    "B",   # flake8-bugbear (common bug patterns)
    "UP",  # pyupgrade (Python version upgrade suggestions)
    "D",   # pydocstyle (docstring style checking)
]
ignore = [
    "D203",  # 1 blank line required before class docstring (conflicts with D211)
    "D213",  # Multi-line docstring summary should start at the second line (conflicts with D212)
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["D"]

[tool.ruff.lint.isort]
known-first-party = ["modelscope_mcp_server"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
