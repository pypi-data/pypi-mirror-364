Metadata-Version: 2.3
Name: thorcast_api_client
Version: 0.1.4.1
Summary: Un client Python pour interagir avec l'API ThorCast
Author: JBCAYRE
Author-email: jcayre@mint.eco
Requires-Python: >=3.8,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Dist: requests (>=2.26.0,<3.0.0)
Description-Content-Type: text/markdown

# ThorCast API Client V0.1

## ðŸ“Œ Description (je suis nul en Markdown , j'espÃ¨re que ce sera lisible)

`thorcast_api_client` est un client Python permettant d'interagir avec l'API **ThorCast** mise en place par Holmium pour MINT.

Il prend en charge (normalement) :
- L'**authentification JWT**
- La rÃ©cupÃ©ration des **courbes de charge prÃ©vues**
- La rÃ©cupÃ©ration des **courbes de charge historiques**
- La gestion des **erreurs API**

## ðŸš€ Installation

### Via `pip`
```sh
pip install thorcast_api_client
```

### Via `poetry` pour les amateurs de Baudelaire
```sh
poetry add thorcast_api_client
```

## ðŸ“œ Utilisation 

### ðŸ”’ Authentification : 

L'authentification passe par la requÃªte d'un token JWS en injectant un MDP/Username :

```sh
from thorcast_api_client.client import ThorCastClient

client = ThorCastClient("mon_user", "mon_mdp")
```
#### Lister les versions disponibles pour une ou plusieurs courbes LT

```sh
versions = client.get_lt_curves_versions(["prm1", "prm2"])
print(versions)
```
#### RÃ©cupÃ©rer les courbes de charge LT

```sh
courbes = client.get_lt_curves(["prm1", "prm2"], "2023-01-01T00:00:00Z", "2025-01-01T00:00:00Z")
print(courbes)
```

#### RÃ©cupÃ©rer les versions des courbes de catalogue ðŸ¤· (rien compris Ã  ce que Ã§a remonte)

```sh
version_catalogues = client.get_catalog_versions(["catalogue1", "catalogue2"], "2023-01-01T00:00:00Z", "2025-01-01T00:00:00Z")
print(version_catalogues)
```
#### RÃ©cupÃ©rer les courbes de charge historiques

```sh
courbes_catalogue = client.get_catalog_curves(["id_catalogue1", "id_catalogue2"])
print(courbes_catalogue)
```

