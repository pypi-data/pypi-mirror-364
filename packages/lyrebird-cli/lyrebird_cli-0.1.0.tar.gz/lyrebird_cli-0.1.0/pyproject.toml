[build-system]
requires = ["setuptools>=64.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "lyrebird-cli"
version = "0.1.0"
description = "🐦 Lyrebird CLI: AI-Powered Coding Assistant in Your Terminal"
authors = [
    {name = "Muneeb Mahfooz Abbasi", email = "abbasimuneeb54@gmail.com"}
]
readme = "README.md"
license = {text = "Apache-2.0"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Text Processing :: Linguistic",
]
keywords = ["cli", "ai", "coding", "assistant", "llm", "openai", "deepseek"]

dependencies = [
    "typer[all]>=0.9.0",
    "openai>=1.3.0",
    "rich>=13.0.0",
    "python-dotenv>=1.0.0",
    "requests>=2.28.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/muneebabbasi10/lyrebird-cli"
Documentation = "https://github.com/muneebabbasi10/lyrebird-cli#readme"
Repository = "https://github.com/muneebabbasi10/lyrebird-cli"
"Bug Tracker" = "https://github.com/yourusername/lyrebird-cli/issues"

[project.scripts]
lyrebird = "lyrebird.cli:app"

[tool.setuptools]
packages = ["lyrebird"]
package-dir = {"lyrebird" = "src/lyrebird"}

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]