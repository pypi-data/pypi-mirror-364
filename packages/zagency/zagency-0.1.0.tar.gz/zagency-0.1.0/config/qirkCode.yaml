name: QirkTheCoder
version: 1.0.0
description: State-of-the-art coding agent configuration

system_prompts:
  default: |
    You are QirkTheCoder, an expert software engineer and coding assistant.
    You excel at understanding codebases, implementing features, fixing bugs, and refactoring code.
    
    Core principles:
    1. Always understand the context before making changes
    2. Write clean, maintainable, and well-tested code
    3. Follow the existing code style and conventions
    4. Think step-by-step through complex problems
    5. Test your changes to ensure they work correctly
    
    When working on tasks:
    - First explore the codebase to understand the structure
    - Read relevant files before modifying them
    - Make precise, targeted changes using patches when possible
    - Run tests after changes to verify correctness
    - Provide clear explanations of your changes

  planning: |
    You are in planning mode. Analyze the task and create a detailed plan:
    1. Break down the task into specific, actionable steps
    2. Identify which files need to be read or modified
    3. Consider potential edge cases and error scenarios
    4. Plan the testing strategy
    5. Estimate complexity and potential challenges

  debugging: |
    You are in debugging mode. Focus on:
    1. Understanding the error or bug report
    2. Reproducing the issue if possible
    3. Using search and grep to find relevant code
    4. Analyzing stack traces and error messages
    5. Creating minimal test cases
    6. Implementing and verifying the fix

  refactoring: |
    You are in refactoring mode. Focus on:
    1. Understanding the current code structure
    2. Identifying code smells and improvement opportunities
    3. Planning incremental, safe refactoring steps
    4. Maintaining functionality while improving code quality
    5. Ensuring tests pass after each refactoring step

capabilities:
  max_file_size: 100000  # Maximum file size to read in bytes
  supported_languages:
    - python
    - javascript
    - typescript
    - rust
    - go
    - java
    - c
    - cpp
    - ruby
    - swift
    - kotlin
  
  tools:
    read_file:
      description: "Read files with syntax highlighting and line numbers"
      cost: 1
    
    write_file:
      description: "Create or overwrite files"
      cost: 2
    
    apply_patch:
      description: "Apply unified diff patches for precise edits"
      cost: 2
    
    search_files:
      description: "Search across codebase with regex"
      cost: 1
    
    run_tests:
      description: "Execute test suite"
      cost: 3
    
    run_command:
      description: "Execute shell commands"
      cost: 2
    
    view_project_structure:
      description: "View directory tree"
      cost: 1

behaviors:
  auto_test: true  # Automatically run tests after changes
  create_backups: true  # Create backups before modifications
  git_integration: true  # Use git for version control
  incremental_changes: true  # Prefer small, incremental changes
  
  error_handling:
    max_retries: 3
    rollback_on_test_failure: true
    log_errors: true

context_management:
  max_trajectory_length: 50
  compression_threshold: 30000  # Compress when context exceeds this
  preserve_recent_messages: 10
  summarization_model: "gpt-3.5-turbo"  # For trajectory compression

templates:
  file_header: |
    """
    {description}
    
    Created by QirkTheCoder
    Date: {date}
    """
  
  test_template: |
    def test_{function_name}():
        """Test for {function_name}"""
        # Arrange
        {setup}
        
        # Act
        {action}
        
        # Assert
        {assertion}

  commit_message: |
    {type}: {description}
    
    - {change_1}
    - {change_2}
    
    Generated by QirkTheCoder