type alias Second: double where {_ >= 0.0};
type alias Meter: double where {_ >= 0.0};
type alias Positive: double where {_ > 0.0};
type alias MeterPerSecond: double;
type alias RadianPerSecond: double;


plugin type GracefulController {
    optional param transform_tolerance: Second = 0.1;
    optional param max_lookahead: Meter = 1.0;
    optional param min_lookahead: Meter = 0.25;
    # optional param max_robot_pose_search_dist: Meter = ???;
    optional param k_phi: double = 2.0;
    optional param k_delta: double = 1.0;
    optional param beta: Positive = 0.4;
    optional param lambda: double where {_ >= 1.0} = 2.0;
    optional param v_linear_min: MeterPerSecond = 0.1;
    optional param v_linear_max: MeterPerSecond = 0.5;
    optional param v_angular_max: RadianPerSecond = 1.0;
    optional param v_angular_min_in_place: RadianPerSecond = 0.25;
    optional param slowdown_radius: Meter = 1.5;
    optional param initial_rotation: bool = true;
    optional param initial_rotation_tolerance: RadianPerSecond = 0.75;
    optional param prefer_final_rotation: bool = true;
    optional param rotation_scaling_factor: double = 0.5;
    optional param allow_backward: bool = false;
    optional param in_place_collision_tolerance: double = 0.1;
    optional param use_collision_detection: bool = true;
    optional param allow_param_qos_overrides: bool = true;
} where {
    min_lookahead < max_lookahead;
    v_linear_min < v_linear_max;
    exists(initial_rotation_tolerance) -> initial_rotation;
}
