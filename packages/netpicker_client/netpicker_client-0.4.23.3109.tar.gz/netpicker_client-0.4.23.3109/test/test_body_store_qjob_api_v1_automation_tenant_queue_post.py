# coding: utf-8

"""
    Netpicker API (Celery 5.5.3)

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.4.23.3109
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from netpicker_client.models.body_store_qjob_api_v1_automation_tenant_queue_post import BodyStoreQjobApiV1AutomationTenantQueuePost

class TestBodyStoreQjobApiV1AutomationTenantQueuePost(unittest.TestCase):
    """BodyStoreQjobApiV1AutomationTenantQueuePost unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BodyStoreQjobApiV1AutomationTenantQueuePost:
        """Test BodyStoreQjobApiV1AutomationTenantQueuePost
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BodyStoreQjobApiV1AutomationTenantQueuePost`
        """
        model = BodyStoreQjobApiV1AutomationTenantQueuePost()
        if include_optional:
            return BodyStoreQjobApiV1AutomationTenantQueuePost(
                name = '',
                branch = '',
                sources = {
                    'key' : ''
                    },
                variables = {
                    'key' : null
                    },
                devices = [
                    ''
                    ],
                tags = [
                    ''
                    ],
                execron = netpicker_client.models.crontab.Crontab(
                    minute = '*', 
                    hour = '*', 
                    day_of_week = '*', 
                    day_of_month = '*', 
                    month_of_year = '*', ),
                expires = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return BodyStoreQjobApiV1AutomationTenantQueuePost(
                name = '',
        )
        """

    def testBodyStoreQjobApiV1AutomationTenantQueuePost(self):
        """Test BodyStoreQjobApiV1AutomationTenantQueuePost"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
