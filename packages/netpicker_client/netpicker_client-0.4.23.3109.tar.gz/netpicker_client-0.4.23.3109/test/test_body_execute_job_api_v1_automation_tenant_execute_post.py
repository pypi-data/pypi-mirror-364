# coding: utf-8

"""
    Netpicker API (Celery 5.5.3)

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.4.23.3109
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from netpicker_client.models.body_execute_job_api_v1_automation_tenant_execute_post import BodyExecuteJobApiV1AutomationTenantExecutePost

class TestBodyExecuteJobApiV1AutomationTenantExecutePost(unittest.TestCase):
    """BodyExecuteJobApiV1AutomationTenantExecutePost unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BodyExecuteJobApiV1AutomationTenantExecutePost:
        """Test BodyExecuteJobApiV1AutomationTenantExecutePost
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BodyExecuteJobApiV1AutomationTenantExecutePost`
        """
        model = BodyExecuteJobApiV1AutomationTenantExecutePost()
        if include_optional:
            return BodyExecuteJobApiV1AutomationTenantExecutePost(
                name = '',
                sources = {
                    'key' : ''
                    },
                variables = {
                    'key' : null
                    },
                devices = [
                    ''
                    ],
                tags = [
                    ''
                    ]
            )
        else:
            return BodyExecuteJobApiV1AutomationTenantExecutePost(
        )
        """

    def testBodyExecuteJobApiV1AutomationTenantExecutePost(self):
        """Test BodyExecuteJobApiV1AutomationTenantExecutePost"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
