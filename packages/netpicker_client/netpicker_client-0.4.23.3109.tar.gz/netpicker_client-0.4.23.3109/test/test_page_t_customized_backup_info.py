# coding: utf-8

"""
    Netpicker API (Celery 5.5.3)

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.4.23.3109
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from netpicker_client.models.page_t_customized_backup_info import PageTCustomizedBackupInfo

class TestPageTCustomizedBackupInfo(unittest.TestCase):
    """PageTCustomizedBackupInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PageTCustomizedBackupInfo:
        """Test PageTCustomizedBackupInfo
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PageTCustomizedBackupInfo`
        """
        model = PageTCustomizedBackupInfo()
        if include_optional:
            return PageTCustomizedBackupInfo(
                items = [
                    netpicker_client.models.backup_info.BackupInfo(
                        id = '', 
                        device_id = '', 
                        upload_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        upload_agent = '', 
                        file_size = 56, 
                        digest = '', 
                        commit = '', 
                        data = netpicker_client.models.config_data.ConfigData(
                            commands = {
                                'key' : ''
                                }, 
                            variables = {
                                'key' : ''
                                }, ), 
                        readout_error = '', 
                        os_version = '', 
                        initiator = '', 
                        extras = {
                            'key' : netpicker_client.models.configuration_info.ConfigurationInfo(
                                file_size = 56, 
                                digest = '', )
                            }, 
                        ipaddress = '', 
                        name = '', 
                        platform = '', 
                        tags = [
                            ''
                            ], 
                        summary = {
                            'key' : 56
                            }, )
                    ],
                total = 0.0,
                page = 1.0,
                size = 1.0,
                pages = 0.0
            )
        else:
            return PageTCustomizedBackupInfo(
                items = [
                    netpicker_client.models.backup_info.BackupInfo(
                        id = '', 
                        device_id = '', 
                        upload_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        upload_agent = '', 
                        file_size = 56, 
                        digest = '', 
                        commit = '', 
                        data = netpicker_client.models.config_data.ConfigData(
                            commands = {
                                'key' : ''
                                }, 
                            variables = {
                                'key' : ''
                                }, ), 
                        readout_error = '', 
                        os_version = '', 
                        initiator = '', 
                        extras = {
                            'key' : netpicker_client.models.configuration_info.ConfigurationInfo(
                                file_size = 56, 
                                digest = '', )
                            }, 
                        ipaddress = '', 
                        name = '', 
                        platform = '', 
                        tags = [
                            ''
                            ], 
                        summary = {
                            'key' : 56
                            }, )
                    ],
                total = 0.0,
                page = 1.0,
                size = 1.0,
        )
        """

    def testPageTCustomizedBackupInfo(self):
        """Test PageTCustomizedBackupInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
