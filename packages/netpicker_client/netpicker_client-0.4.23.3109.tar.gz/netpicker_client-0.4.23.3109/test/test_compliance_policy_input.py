# coding: utf-8

"""
    Netpicker API (Celery 5.5.3)

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.4.23.3109
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from netpicker_client.models.compliance_policy_input import CompliancePolicyInput

class TestCompliancePolicyInput(unittest.TestCase):
    """CompliancePolicyInput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CompliancePolicyInput:
        """Test CompliancePolicyInput
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CompliancePolicyInput`
        """
        model = CompliancePolicyInput()
        if include_optional:
            return CompliancePolicyInput(
                author = '',
                type = '',
                enabled = True,
                name = '',
                description = '',
                read_only = True,
                summary = {
                    'key' : 56
                    },
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                changed = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                rules = [
                    netpicker_client.models.rule.Rule(
                        name = '', 
                        description = '', 
                        ruleset = 'default', 
                        stats = [
                            netpicker_client.models.rule_exec_stat.RuleExecStat(
                                count = 56, 
                                last_run = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                avg_runtime = 1.337, 
                                tenant = '', 
                                ipaddress = '', 
                                outcome = '', )
                            ], 
                        platform = [
                            ''
                            ], 
                        severity = null, 
                        commands = {
                            'key' : ''
                            }, 
                        device_tags = null, 
                        simplified = netpicker_client.models.simple_rule.SimpleRule(
                            regex = True, 
                            text = '', 
                            exclude_text = '', 
                            invert = True, ), 
                        definition = netpicker_client.models.code_snippet.CodeSnippet(
                            range = netpicker_client.models.line_range.LineRange(
                                start = 56, 
                                end = 56, ), 
                            code = '', ), 
                        author = '', 
                        changed = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ]
            )
        else:
            return CompliancePolicyInput(
        )
        """

    def testCompliancePolicyInput(self):
        """Test CompliancePolicyInput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
