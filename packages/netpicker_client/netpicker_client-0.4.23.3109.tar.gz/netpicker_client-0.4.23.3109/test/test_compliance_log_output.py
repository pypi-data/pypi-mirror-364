# coding: utf-8

"""
    Netpicker API (Celery 5.5.3)

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.4.23.3109
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from netpicker_client.models.compliance_log_output import ComplianceLogOutput

class TestComplianceLogOutput(unittest.TestCase):
    """ComplianceLogOutput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ComplianceLogOutput:
        """Test ComplianceLogOutput
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ComplianceLogOutput`
        """
        model = ComplianceLogOutput()
        if include_optional:
            return ComplianceLogOutput(
                outcome = 'SUCCESS',
                rule_name = '',
                rule_id = '',
                exec_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                exec_ns = 56,
                commit = '',
                excinfo = netpicker_client.models.exc_info.ExcInfo(
                    message = '', 
                    tb = netpicker_client.models.traceback.Traceback(
                        path = '', 
                        lineno = 56, 
                        relline = 56, 
                        lines = [
                            ''
                            ], ), ),
                passinfo = netpicker_client.models.pass_info.PassInfo(
                    passed = [
                        netpicker_client.models.pass_assert.PassAssert(
                            lineno = 56, 
                            original = '', 
                            explanation = '', )
                        ], ),
                cli_log = [
                    netpicker_client.models.cli_log.CliLog(
                        tenant = '', 
                        ipaddress = '', 
                        commands = [
                            netpicker_client.models.cli_row.CliRow(
                                command = null, 
                                response = '', )
                            ], )
                    ],
                policy = ''
            )
        else:
            return ComplianceLogOutput(
                outcome = 'SUCCESS',
                rule_name = '',
                rule_id = '',
                exec_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                exec_ns = 56,
                commit = '',
        )
        """

    def testComplianceLogOutput(self):
        """Test ComplianceLogOutput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
