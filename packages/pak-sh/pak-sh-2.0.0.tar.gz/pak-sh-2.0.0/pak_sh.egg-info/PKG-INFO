Metadata-Version: 2.1
Name: pak-sh
Version: 2.0.0
Summary: PAK.sh - Universal Package Automation Kit 
Home-page: https://pak.sh
Author: PAK.sh Team
Author-email: team@pak.sh
License: MIT
Project-URL: Documentation, https://pak.sh/docs
Project-URL: Source, https://github.com/pak/pak.sh
Project-URL: Issues, https://github.com/pak/pak.sh/issues
Keywords: pak,package,automation,deployment,npm,pypi,cargo,nuget,packagist,docker,cli,tool,,package-manager,devops,ci-cd
Platform: linux
Platform: darwin
Platform: win32
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Build Tools
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: System :: Software Distribution
Classifier: Topic :: Utilities
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Provides-Extra: dev
Provides-Extra: test

<div align="center">

<!-- Logo -->
<img src="https://raw.githubusercontent.com/pak/pak.sh/main/assets/logo.svg" alt="PAK.sh Logo" width="400">

# PAK.sh - Universal Package Automation Kit

### 🚀 Deploy Everywhere, Effortlessly

[![Version](https://img.shields.io/badge/version-2.0.0-4A90E2?style=for-the-badge)](https://github.com/pak/pak.sh/releases)
[![Platforms](https://img.shields.io/badge/platforms-30+-10B981?style=for-the-badge)](https://pak.sh/platforms)
[![License](https://img.shields.io/badge/license-MIT-F59E0B?style=for-the-badge)](LICENSE)
[![Downloads](https://img.shields.io/badge/downloads-1M+-06B6D4?style=for-the-badge)](https://pak.sh/stats)

<p align="center">
  <strong>One command to rule them all. Deploy to 30+ package platforms simultaneously.</strong>
</p>

```
┌─────────────────────────────────────────────────────────────────┐
│ $ pak deploy my-package --version 1.2.3                         │
│                                                                 │
│ 📦 Deploying to npm, pypi, cargo, nuget, packagist...           │
│ ✓ npm: published v1.2.3                                         │
│ ✓ pypi: published v1.2.3                                        │
│ ✓ cargo: published v1.2.3                                       │
│ ✓ nuget: published v1.2.3                                       │
│ ✓ packagist: published v1.2.3                                   │
│                                                                 │
│ 🎉 Successfully deployed to 5 platforms in 45s                  │
└─────────────────────────────────────────────────────────────────┘
```

[**Documentation**](https://pak.sh/docs) • [**Quick Start**](#-quick-start) • [**Features**](#-features) • [**API Reference**](https://pak.sh/api)

</div>

---

## 🌟 Why PAK.sh?

<table>
<tr>
<td width="50%">

### 📊 **Track Everything**
```bash
$ pak track my-package

📊 Tracking statistics...
npm: 45,231 downloads (↑ 23%)
pypi: 12,543 downloads (↑ 15%)
cargo: 8,921 downloads (↑ 31%)

📈 7-day trend: +18% growth
🎯 Predicted next week: ~52,000
```

</td>
<td width="50%">

### 🔐 **Security First**
```bash
$ pak scan my-package

🔍 Running security scan...
✓ No vulnerabilities found
✓ All licenses compatible
⚠️  1 outdated dependency

🔧 Run 'pak security fix' to resolve
```

</td>
</tr>
<tr>
<td width="50%">

### 🔐 **Register Everywhere**
```bash
$ pak register

🧙 PAK.sh Registration Wizard
=============================

👤 USER PREFERENCES
------------------
Your name: John Doe
Your email: john@example.com

🎯 PLATFORM SELECTION
-------------------
Registering with ALL platforms:
✓ npm, pypi, cargo, nuget, maven, packagist...

🔐 REGISTRATION PROCESS
---------------------
📋 Registering with npm...
✅ NPM credentials valid
📋 Registering with pypi...
✅ PyPI credentials saved
📋 Registering with cargo...
✅ Cargo credentials saved

🎉 Successfully registered with 13 platforms!
```

</td>
<td width="50%">

### 🤖 **Automate Everything**
```bash
$ pak pipeline create

🤖 Creating CI/CD pipeline...
✓ GitHub Actions workflow created
✓ Auto-deploy on tags enabled
✓ Security scanning integrated
✓ Multi-platform testing configured

🚀 Your pipeline is ready!
```

</td>
</tr>
</table>

## ✨ Features

<div align="center">

| Feature | Description |
|---------|-------------|
| 🚀 **Multi-Platform Deployment** | Deploy to 30+ platforms with one command |
| 📊 **Real-time Analytics** | Track downloads, trends, and predictions |
| 🔐 **Security Scanning** | Automated vulnerability and license checks |
| 🔐 **Registration Wizard** | One-click setup for all platform credentials |
| 🤖 **CI/CD Integration** | GitHub Actions, GitLab CI, Jenkins support |
| 📈 **Smart Monitoring** | 24/7 health checks and alerts |
| 🎨 **Beautiful CLI** | Interactive wizards and dynamic ASCII art |
| 🔧 **Modular Architecture** | Extensible plugin system |
| 🌍 **Global CDN** | Fast deployments worldwide |

</div>

## 🚀 Quick Start

### Installation

<details>
<summary><b>🐧 Linux/macOS</b></summary>

```bash
# Download and install from pak.sh
curl -sSL https://pak.sh/install | bash

# Or download manually and run local installer
curl -sSL https://pak.sh/latest.tar.gz | tar -xz
cd pak.sh-*
./install/install.sh

# The installer will:
# 1. Download latest release from pak.sh/latest.tar.gz
# 2. Extract and set executable permissions
# 3. Install to /usr/local/bin (or ~/.local/bin if no permissions)
# 4. Set up web interface and auto-start
# 5. Create configuration and data directories
```

</details>

<details>
<summary><b>🪟 Windows</b></summary>

### Option 1: WSL2 (Recommended)
```powershell
# Install WSL2 with Ubuntu
wsl --install

# Restart your computer, then open Ubuntu terminal and run:
curl -sSL https://pak.sh/install | bash
```

### Option 2: Git Bash
```bash
# Install Git for Windows, then in Git Bash:
curl -sSL https://pak.sh/install | bash
```

### Option 3: PowerShell (Advanced)
```powershell
# Install WSL2 first, then use bash scripts
wsl --install
wsl curl -sSL https://pak.sh/install | wsl bash
```
</details>

<details>
<summary><b>📦 Package Managers</b></summary>

```bash
# npm (Recommended)
npm install -g pak-sh
pak-sh install

# pip (Python)
pip install pak-sh
pak-sh install

# Cargo (Rust)
cargo install pak-sh
pak-sh install

# Homebrew (macOS/Linux)
brew install pak-sh
pak-sh install

# Chocolatey (Windows)
choco install pak-sh
pak-sh install

# Scoop (Windows)
scoop install pak-sh
pak-sh install

# Packagist (PHP Composer)
composer global require pak/pak-sh
pak-sh install

# Go Modules
go install github.com/pak/pak-sh@latest
pak-sh install
```

</details>

### Your First Deployment

```bash
# 1. Register with all platforms (one-time setup)
$ pak register

🧙 PAK.sh Registration Wizard
=============================
✓ Successfully registered with 13 platforms!

# 2. Initialize PAK in your project
$ pak init

🚀 Initializing Package Automation Kit...
✓ Detected: my-awesome-package (npm, pypi, cargo)
✓ Configuration created
✓ Ready to deploy!

# 3. Deploy to all platforms
$ pak deploy --version 1.0.0

📦 Deploying to 3 platforms...
✓ All deployments successful!

# 4. Track your package
$ pak track

📊 Real-time statistics:
├── npm: 1,234 downloads
├── pypi: 567 downloads
└── cargo: 89 downloads

# 5. Start web interface (optional)
$ pak web

🌐 Web interface available at: http://localhost:5000
```

## 🛠️ Command Reference

### Core Commands

```bash
pak init                    # Initialize PAK in current directory
pak register               # Interactive platform registration wizard
pak deploy [package]        # Deploy to all configured platforms
pak track [package]         # Track package statistics
pak scan [package]          # Security vulnerability scan
pak monitor [package]       # Start real-time monitoring
pak status                  # Show system status
pak version                 # Show version information
pak web                     # Start web interface
```

### Deployment Commands

```bash
pak deploy [package]        # Deploy to all configured platforms
pak deploy list             # List deployment history
pak deploy rollback         # Rollback deployment
pak deploy verify           # Verify deployment
pak deploy clean            # Clean deployment artifacts
```

### Registration Commands

```bash
pak register               # Interactive registration wizard
pak register-all           # Register with all supported platforms
pak register-platform      # Register with specific platform
pak register-test          # Test platform credentials
pak register-list          # List registered platforms
pak register-export        # Export credentials
pak register-import        # Import credentials
pak register-clear         # Clear all credentials
```

### Embed & Telemetry Commands

```bash
pak embed init             # Initialize embed system
pak embed telemetry        # Track telemetry events
pak embed analytics        # Analytics operations
pak embed track            # Track various events
pak embed report           # Generate reports
```

### Help & Documentation

```bash
pak help [command]          # Command-specific help
pak docs                    # Show documentation
pak docs search             # Search documentation
```

### Platform Management

```bash
pak platform list           # List all supported platforms
pak platform add <name>     # Add platform to project
pak platform remove <name>  # Remove platform from project
pak platform test <name>    # Test platform connectivity
```

### Tracking & Analytics

```bash
pak track [package]         # Track package statistics
pak stats [package]         # Show package statistics
pak export [package]        # Export tracking data
pak analytics [package]     # Generate analytics report
```

### Developer Experience (Devex)

```bash
pak devex wizard            # Interactive project setup wizard
pak devex init              # Initialize new project
pak devex setup             # Setup development environment
pak devex template create   # Create project template
pak devex docs              # Generate documentation
pak devex scaffold          # Scaffold project structure
pak devex env               # Manage environment
pak devex lint              # Run linting
pak devex format            # Format code
```

### Web Interface & Integration

```bash
pak web                     # Start web interface
pak web start               # Start web server
pak web stop                # Stop web server
pak web status              # Check web server status
pak webhook add             # Add webhook
pak api start               # Start API server
pak plugin install          # Install plugin
```

### Database & Storage

```bash
pak db                      # Database operations
pak sqlite                  # SQLite operations
pak backup                  # Create backup
pak restore                 # Restore from backup
pak migrate                 # Run migrations
pak query                   # Execute queries
pak stats                   # Show statistics
```

### Enterprise Features

```bash
pak billing                 # Billing management
pak sla                     # SLA monitoring
pak cost                    # Cost analysis
pak team add                # Add team member
pak audit start             # Start audit logging
```

### Security Commands

```bash
pak security audit          # Full security audit
pak security fix            # Auto-fix security issues
pak license check           # Check license compliance
pak license validate        # Validate licenses
pak scan [package]          # Security vulnerability scan
```

### Automation Commands

```bash
pak pipeline create         # Create CI/CD pipeline
pak pipeline list           # List pipelines
pak git hooks install       # Install Git hooks
pak workflow create         # Create workflow
pak auto-deploy             # Automated deployment
pak schedule                # Schedule deployments
pak release                 # Release management
pak test                    # Run tests
pak build                   # Build package
```

### Monitoring Commands

```bash
pak monitor [package]       # Start real-time monitoring
pak health [package]        # Health check package
pak alerts list             # List alerts
pak alerts create           # Create alert
pak dashboard               # Show monitoring dashboard
pak metrics                 # Show metrics
pak availability            # Check availability
pak performance             # Performance monitoring
```

### User Interface Commands

```bash
pak ascii show              # Show ASCII art
pak config get/set          # Manage configuration
pak db status               # Show database status
pak log show                # Show recent logs
```

### Lifecycle Commands

```bash
pak lifecycle deprecate     # Deprecate package
pak lifecycle sunset        # Sunset package
pak lifecycle migrate       # Migrate package
pak version bump            # Bump version
pak release create          # Create release
pak deps check              # Check dependencies
```

### Debugging & Performance

```bash
pak debug enable            # Enable debug mode
pak troubleshoot            # Troubleshoot issue
pak optimize cache          # Optimize cache
pak perf benchmark          # Benchmark package
```

### Networking & API

```bash
pak network test            # Test network connectivity
pak api key                 # Set API key
pak api test                # Test API connection
pak api start               # Start API server
```

### Update & Maintenance

```bash
pak update check            # Check for updates
pak maintenance start       # Start maintenance mode
pak backup create           # Create backup
```

### Reporting & Compliance

```bash
pak report generate         # Generate report
pak gdpr check              # Check GDPR compliance
pak policy enforce          # Enforce policies
```

### Specialized Commands

```bash
pak unity deploy            # Deploy Unity asset
pak docker build            # Build Docker image
pak aws deploy              # Deploy to AWS
pak vscode setup            # Setup VS Code integration
```

### Advanced Features

```bash
pak rollback <version>      # Rollback to previous version
pak analytics <package>     # Generate analytics report
```

<div align="center">
  <a href="https://pak.sh/commands">📚 View Full Command Reference</a>
</div>

## 📦 Supported Platforms

<div align="center">

### Language-Specific Registries

| Platform | Language | Command |
|----------|----------|---------|
| 📦 **npm** | JavaScript/Node.js | `pak deploy --platform npm` |
| 🐍 **PyPI** | Python | `pak deploy --platform pypi` |
| 🦀 **Cargo** | Rust | `pak deploy --platform cargo` |
| 🔷 **NuGet** | .NET/C# | `pak deploy --platform nuget` |
| 💎 **RubyGems** | Ruby | `pak deploy --platform rubygems` |
| ☕ **Maven** | Java | `pak deploy --platform maven` |
| 🐘 **Packagist** | PHP | `pak deploy --platform packagist` |
| 🐹 **Go Modules** | Go | `pak deploy --platform go` |

### Container & Cloud Platforms

| Platform | Type | Command |
|----------|------|---------|
| 🐳 **Docker Hub** | Containers | `pak deploy --platform docker` |
| ☸️ **Helm** | Kubernetes | `pak deploy --platform helm` |
| 🐙 **GitHub Packages** | Universal | `pak deploy --platform github` |
| 🦊 **GitLab Registry** | Universal | `pak deploy --platform gitlab` |

<a href="https://pak.sh/platforms">🌐 View All 30+ Platforms</a>

</div>

## 🔧 Configuration

### Basic Configuration

```yaml
# pak.yaml
name: my-awesome-package
version: 1.2.3
description: An awesome package deployed with PAK.sh

platforms:
  npm:
    enabled: true
    registry: https://registry.npmjs.org
    
  pypi:
    enabled: true
    repository: https://pypi.org
    
  docker:
    enabled: true
    registry: docker.io
    image: myuser/mypackage

deployment:
  auto_deploy: true
  environments:
    - production
    - staging
    
monitoring:
  alerts:
    email: team@example.com
    slack: https://hooks.slack.com/...
```

### Environment Variables

```bash
# Platform Tokens (set up via 'pak register')
export NPM_TOKEN="npm_xxxxxxxxxxxx"
export PYPI_TOKEN="pypi-xxxxxxxxxxxx"
export DOCKER_TOKEN="dckr_xxxxxxxxxxxx"

# PAK Configuration
export PAK_LOG_LEVEL="INFO"
export PAK_PARALLEL_JOBS="5"
export PAK_TIMEOUT="300"
```

## 📊 Dashboard & Analytics

<div align="center">

```
┌─────────────────────────────────────────────────────────────────┐
│                    📊 PAK.sh Analytics Dashboard                │
├─────────────────────────────────────────────────────────────────┤
│                                                                 │
│  Total Downloads     Unique Users      Active Platforms        │
│    1,234,567           45,678              12/30              │
│       ↑23%               ↑15%               ✓                  │
│                                                                 │
│  ┌─────────────────────────────────────────────────────────┐  │
│  │ Weekly Downloads                                         │  │
│  │ 10k ┤                                          ╭────────│  │
│  │  8k ┤                                    ╭─────╯        │  │
│  │  6k ┤                             ╭──────╯             │  │
│  │  4k ┤                      ╭──────╯                    │  │
│  │  2k ┤───────────────╭──────╯                           │  │
│  │   0 └─────────────────────────────────────────────────│  │
│  │     Mon   Tue   Wed   Thu   Fri   Sat   Sun          │  │
│  └─────────────────────────────────────────────────────────┘  │
│                                                                 │
│  Top Platforms:     Recent Activity:                          │
│  1. npm    (45%)    • Deployed v1.2.3 (2 min ago)           │
│  2. pypi   (25%)    • Security scan passed                   │
│  3. docker (15%)    • 1,234 new downloads                    │
│                                                                 │
└─────────────────────────────────────────────────────────────┘
```

<a href="https://pak.sh/demo">🖥️ View Live Demo</a>

</div>

## 🤝 Contributing

We love contributions! PAK.sh is built by developers, for developers.

```bash
# 1. Fork the repository
git clone https://github.com/YOUR_USERNAME/pak.sh
cd pak.sh

# 2. Create a feature branch
git checkout -b feature/amazing-feature

# 3. Make your changes
code .

# 4. Run tests
pak test

# 5. Submit a pull request
git push origin feature/amazing-feature
```

See [CONTRIBUTING.md](CONTRIBUTING.md) for detailed guidelines.

## 🗺️ Roadmap

<details>
<summary><b>2024 Q1</b> ✅ Completed</summary>

- ✅ Multi-platform deployment engine
- ✅ Real-time analytics dashboard
- ✅ Security scanning integration
- ✅ CLI interface v2.0

</details>

<details>
<summary><b>2024 Q2</b> 🚧 In Progress</summary>

- 🚧 AI-powered deployment optimization
- 🚧 Mobile app (iOS/Android)
- 🚧 Enhanced webhook system
- 🚧 GraphQL API

</details>

<details>
<summary><b>2024 Q3</b> 📋 Planned</summary>

- 📋 Blockchain package verification
- 📋 Decentralized deployment network
- 📋 Machine learning predictions
- 📋 Voice control integration

</details>

## 📈 Stats & Community

<div align="center">

| Metric | Value |
|--------|-------|
| **Total Packages Deployed** | 1M+ |
| **Active Users** | 45K+ |
| **Platform Integrations** | 30+ |
| **Average Deploy Time** | 45s |
| **Uptime** | 99.9% |
| **Community Stars** | ⭐ 12.5K |

### Join Our Community

[![Discord](https://img.shields.io/badge/Discord-5865F2?style=for-the-badge&logo=discord&logoColor=white)](https://discord.gg/paksh)
[![Twitter](https://img.shields.io/badge/Twitter-1DA1F2?style=for-the-badge&logo=twitter&logoColor=white)](https://twitter.com/paksh)
[![GitHub](https://img.shields.io/badge/GitHub-181717?style=for-the-badge&logo=github&logoColor=white)](https://github.com/pak/pak.sh)

</div>

## 📄 License

PAK.sh is open source software licensed under the [MIT License](LICENSE).

```
MIT License

Copyright (c) 2024 PAK.sh

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction...
```

---

<div align="center">

### Built with ❤️ by developers, for developers

<br>

<img src="https://raw.githubusercontent.com/pak/pak.sh/main/assets/terminal-demo.gif" alt="PAK.sh Demo" width="600">

<br>
<br>

**[Get Started](https://pak.sh)** • **[Documentation](https://pak.sh/docs)** • **[API](https://pak.sh/api)** • **[Blog](https://pak.sh/blog)**

</div>
