// This file is autogenerated. DO NOT EDIT

#pragma once
#include <semiwrap.h>

// wrapped header

#include <networktables/NTSendableBuilder.h>

#include <trampolines/wpi__SendableBuilder.hpp>

namespace nt {

template <typename CfgBase = swgen::EmptyTrampolineCfg>
struct PyTrampolineCfg_NTSendableBuilder :
  wpi::PyTrampolineCfg_SendableBuilder<
  CfgBase
  >
{
  using Base = nt::NTSendableBuilder;
  using override_base_SetUpdateTable_Tunique_function = nt::NTSendableBuilder;
  using override_base_GetTopic_Tstring_view = nt::NTSendableBuilder;
  using override_base_GetTable_v = nt::NTSendableBuilder;
  using override_base_KGetBackendKind_v = nt::NTSendableBuilder;
};

template <typename PyTrampolineBase, typename PyTrampolineCfg>
using PyTrampolineBase_NTSendableBuilder =
  wpi::PyTrampoline_SendableBuilder<
    PyTrampolineBase
    , PyTrampolineCfg>
;

template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_NTSendableBuilder : PyTrampolineBase_NTSendableBuilder<PyTrampolineBase, PyTrampolineCfg> {
  using PyTrampolineBase_NTSendableBuilder<PyTrampolineBase, PyTrampolineCfg>::PyTrampolineBase_NTSendableBuilder;
  using BackendKind = wpi::SendableBuilder::BackendKind;

  #ifndef SWGEN_DISABLE_SetUpdateTable_Tunique_function
    void SetUpdateTable(wpi::unique_function<void ()> func) override {
      using LookupBase = typename PyTrampolineCfg::Base;
      SEMIWRAP_OVERRIDE_PURE_NAME(NTSendableBuilder, PYBIND11_TYPE(void), LookupBase,
        "setUpdateTable", SetUpdateTable, func);
    }
  #endif

  #ifndef SWGEN_DISABLE_GetTopic_Tstring_view
    Topic GetTopic(std::string_view key) override {
      using LookupBase = typename PyTrampolineCfg::Base;
      SEMIWRAP_OVERRIDE_PURE_NAME(NTSendableBuilder, PYBIND11_TYPE(Topic), LookupBase,
        "getTopic", GetTopic, key);
    }
  #endif

  #ifndef SWGEN_DISABLE_GetTable_v
    std::shared_ptr<NetworkTable> GetTable() override {
      using LookupBase = typename PyTrampolineCfg::Base;
      SEMIWRAP_OVERRIDE_PURE_NAME(NTSendableBuilder, PYBIND11_TYPE(std::shared_ptr<NetworkTable>), LookupBase,
        "getTable", GetTable, );
    }
  #endif

  #ifndef SWGEN_DISABLE_KGetBackendKind_v
    BackendKind GetBackendKind() const override {
      using LookupBase = typename PyTrampolineCfg::Base;
      using CxxCallBase = typename PyTrampolineCfg::override_base_KGetBackendKind_v;
      PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(BackendKind), LookupBase,
        "getBackendKind", );
      return CxxCallBase::GetBackendKind();
    }
  #endif
};

}; // namespace nt
