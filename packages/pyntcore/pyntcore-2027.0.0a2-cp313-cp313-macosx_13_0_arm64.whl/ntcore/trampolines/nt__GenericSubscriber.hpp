// This file is autogenerated. DO NOT EDIT

#pragma once
#include <semiwrap.h>

// wrapped header

#include <networktables/GenericEntry.h>

// from extra_includes
#include <src/nt_type_caster.h>

#include <trampolines/nt__Subscriber.hpp>

namespace nt {

template <typename CfgBase = swgen::EmptyTrampolineCfg>
struct PyTrampolineCfg_GenericSubscriber :
  nt::PyTrampolineCfg_Subscriber<
  CfgBase
  >
{
  using Base = nt::GenericSubscriber;
};

template <typename PyTrampolineBase, typename PyTrampolineCfg>
using PyTrampolineBase_GenericSubscriber =
  nt::PyTrampoline_Subscriber<
    PyTrampolineBase
    , PyTrampolineCfg>
;

template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_GenericSubscriber : PyTrampolineBase_GenericSubscriber<PyTrampolineBase, PyTrampolineCfg> {
  using PyTrampolineBase_GenericSubscriber<PyTrampolineBase, PyTrampolineCfg>::PyTrampolineBase_GenericSubscriber;
  using TopicType [[maybe_unused]] = typename nt::GenericSubscriber::TopicType;
  using ValueType [[maybe_unused]] = typename nt::GenericSubscriber::ValueType;
  using ParamType [[maybe_unused]] = typename nt::GenericSubscriber::ParamType;
  using TimestampedValueType [[maybe_unused]] = typename nt::GenericSubscriber::TimestampedValueType;
};

}; // namespace nt
