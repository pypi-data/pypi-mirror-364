// This file is autogenerated. DO NOT EDIT

#pragma once
#include <semiwrap.h>

// wrapped header

#include <networktables/IntegerArrayTopic.h>

#include <trampolines/nt__Publisher.hpp>

namespace nt {

template <typename CfgBase = swgen::EmptyTrampolineCfg>
struct PyTrampolineCfg_IntegerArrayPublisher :
  nt::PyTrampolineCfg_Publisher<
  CfgBase
  >
{
  using Base = nt::IntegerArrayPublisher;
};

template <typename PyTrampolineBase, typename PyTrampolineCfg>
using PyTrampolineBase_IntegerArrayPublisher =
  nt::PyTrampoline_Publisher<
    PyTrampolineBase
    , PyTrampolineCfg>
;

template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_IntegerArrayPublisher : PyTrampolineBase_IntegerArrayPublisher<PyTrampolineBase, PyTrampolineCfg> {
  using PyTrampolineBase_IntegerArrayPublisher<PyTrampolineBase, PyTrampolineCfg>::PyTrampolineBase_IntegerArrayPublisher;
  using TopicType [[maybe_unused]] = typename nt::IntegerArrayPublisher::TopicType;
  using ValueType [[maybe_unused]] = typename nt::IntegerArrayPublisher::ValueType;
  using ParamType [[maybe_unused]] = typename nt::IntegerArrayPublisher::ParamType;
  using SmallRetType [[maybe_unused]] = typename nt::IntegerArrayPublisher::SmallRetType;
  using SmallElemType [[maybe_unused]] = typename nt::IntegerArrayPublisher::SmallElemType;
  using TimestampedValueType [[maybe_unused]] = typename nt::IntegerArrayPublisher::TimestampedValueType;
};

}; // namespace nt
