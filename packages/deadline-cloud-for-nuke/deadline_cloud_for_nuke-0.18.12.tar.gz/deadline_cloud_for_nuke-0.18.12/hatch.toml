[envs.default]
pre-install-commands = [
  "pip install -r requirements-testing.txt"
]

[envs.default.scripts]
sync = "pip install -r requirements-testing.txt"
test = "pytest --cov-config pyproject.toml {args:test/unit}"
test-installer = "pytest --no-cov {args:test/installer} -vvv"
typing = "mypy {args:src test}"
style = [
  "ruff check {args:.}",
  "black --check --diff {args:.}",
]
fmt = [
  "black {args:.}",
  "style",
]
lint = [
  "style",
  "typing",
]

[[envs.all.matrix]]
python = ["3.9", "3.10", "3.11"]

[envs.default.env-vars]
SKIP_BOOTSTRAP_TEST_RESOURCES="True"

[envs.codebuild.scripts]
build = "hatch build"

[envs.codebuild.env-vars]
SKIP_BOOTSTRAP_TEST_RESOURCES="True"

[envs.integ.scripts]
test = "pytest --no-cov {args:test/*/integ}"

[envs.e2e.scripts]
test = "pytest --no-cov {args:test/*/e2e}"

[envs.squish]
env-vars = { PYTHONPATH = "{env:PYTHONPATH:}:test/squish/suite_nuke_submitter" }

[envs.squish.scripts]
deps = "pip install numpy pytest pytest-xdist opencv-python filelock pillow"
test = "pytest --override-ini addopts= {args:test/squish/suite_nuke_submitter/run_squish_test.py} -v -n 4"

[envs.release]
detached = true

[envs.release.scripts]
deps = "pip install -r requirements-release.txt"
bump = "semantic-release -v --strict version --no-push --no-commit --no-tag --skip-build {args}"
version = "semantic-release -v --strict version --print {args}"

[envs.installer.scripts]
build-installer = "python {root}/scripts/build_installer_cli.py --installer-source-path {root}/installer/DeadlineCloudForNuke.xml {args:}"
