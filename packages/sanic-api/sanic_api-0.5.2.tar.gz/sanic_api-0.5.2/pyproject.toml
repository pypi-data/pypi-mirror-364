[project]
name = "sanic-api"
version = "0.5.2"
keywords = ["Sanic", "异步", "Sanic扩展"]
description = "Sanic 框架实用API工具集，拥有自动生成文档、参数校验、配置的导入、日志功能的优化等功能，更好的助力接口的开发"
readme = "README.md"
license = "MIT"
authors = [
    { name = "昊色居士", email = "xhrtxh@gmail.com" }
]
classifiers = [
    "Intended Audience :: Developers",
    "Development Status :: 4 - Beta",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX :: BSD",
    "Operating System :: Microsoft :: Windows",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.10"
dependencies = [
    # sanic
    "sanic>=24.12.0",
    "sanic-ext>=23.12.0",
    # 日志打印
    "loguru>=0.7.2",
    # json
    "ujson>=5.7.0",
    "orjson>=3.8.6",
    # 配置
    "hs-config==0.1.3",
    # 哨兵
    "sentry-sdk>=2.17.0",
    # loki日志推送
    "loki-logger-handler>=0.1.4",
    "requests>=2.32.0",
]

[project.urls]
homepage = "https://github.com/x-haose/sanic-api"
repository = "https://github.com/x-haose/sanic-api"
documentation = "https://github.com/x-haose/sanic-api"

[project.scripts]
sanic-api = "sanic_api:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
include = [
    "src",
    "examples",
]

[tool.hatch.build.targets.wheel]
packages = ["src/sanic_api"]

[tool.bandit]
skips = [
    "B501",
    "B113"
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.12
target-version = "py312"

[tool.ruff.lint]
select = [
    # pycodestyle error
    "E",
    # Pyflakes
    "F",
    # pycodestyle warnings
    "W",
    # pyupgrade
    "UP",
    # flake8-comprehensions
    "C",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
ignore = [
    # do not perform function calls in argument defaults
    "B008",
    # too complex
    "C901",
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]